gplink-1.0.0 #932 (Jan 21 2013)
Copyright (c) 1998-2012 gputils project
Listing File Generated: 4-9-2021  14:35:05
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_Generic26kSetup
                                           	global	_Setup
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_boardconfig__Setup	code
                                           _Setup:
                                           ;	.line	24; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/boardconfig.c	Generic26kSetup();
003de2   ec93     call    0x3d26, 0        	CALL	_Generic26kSetup
003de4   f01e
003de6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_boardconfig__Generic26kSetup	code
                                           _Generic26kSetup:
                                           ;	.line	24; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	OSCCON=0b01110000;
003d26   0e70     movlw   0x70             	MOVLW	0x70
003d28   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCON
                                           ;	.line	25; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	OSCTUNEbits.PLLEN=1;
003d2a   8c9b     bsf     0x9b, 0x6, 0     	BSF	_OSCTUNEbits, 6
                                           ; #	MOVLW	0xff
                                           ; #	MOVWF	_TRISA
                                           ; #	MOVLW	0xff
                                           ;	.line	29; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISA=0xff;
003d2c   0eff     movlw   0xff             	MOVLW	0xff
                                           ;	.line	30; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISB=0xff;
003d2e   6892     setf    0x92, 0          	SETF	_TRISA
                                           ;	.line	31; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISC=0xff;
003d30   6893     setf    0x93, 0          	SETF	_TRISB
                                           ; #	MOVLW	0xff
                                           ; #	MOVWF	_TRISC
                                           ; #	MOVLW	0xff
                                           ;	.line	32; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISE=0xff;
003d32   6894     setf    0x94, 0          	SETF	_TRISC
003d34   6896     setf    0x96, 0          	SETF	_TRISE
                                           ;	.line	33; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	IOCB=0; //disable all 4 portB "interrupt on change"
003d36   6a62     clrf    0x62, 0          	CLRF	_IOCB
                                           ;	.line	34; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	INTCON2bits.RBPU=0; //enable PORTB weak pullups
003d38   9ef1     bcf     0xf1, 0x7, 0     	BCF	_INTCON2bits, 7
003d3a   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	   28 (0x001c) bytes ( 0.02%)
                                           ;           	   14 (0x000e) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_setup
                                           	global	_loop
                                           	global	_fraiseReceiveChar
                                           	global	_mainDelay
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_printf
                                           	extern	_putchar
                                           	extern	_time
                                           	extern	_fraiseService
                                           	extern	_fraiseGetChar
                                           	extern	_fraiseGetLen
                                           	extern	_fruitInit
                                           	extern	_analogSelectAdc
                                           	extern	_analogInit
                                           	extern	_analogService
                                           	extern	_analogSend
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x05	res	1
                                           
                                           udata_main_0	udata
                                           _mainDelay	res	4
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__fraiseReceiveChar	code
                                           _fraiseReceiveChar:
                                           ;	.line	51; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	void fraiseReceiveChar() // receive text
003354   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003356   ffe5
003358   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00335a   ffe5
                                           ;	.line	55; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	c=fraiseGetChar();
00335c   ec95     call    0x372a, 0        	CALL	_fraiseGetChar
00335e   f01b
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	56; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	if(c=='L'){		//switch LED on/off 
003360   6e00     movwf   0, 0             	MOVWF	r0x00
003362   0a4c     xorlw   0x4c             	XORLW	0x4c
003364   e108     bnz     0x3376           	BNZ	_00183_DS_
                                           ;	.line	57; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	c=fraiseGetChar();
003366   ec95     call    0x372a, 0        	CALL	_fraiseGetChar
003368   f01b
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	58; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	digitalWrite(LED, c!='0');		
00336a   0a30     xorlw   0x30             	XORLW	0x30
00336c   e002     bz      0x3372           	BZ	_00172_DS_
00336e   828b     bsf     0x8b, 0x1, 0     	BSF	_LATCbits, 1
003370   d029     bra     0x33c4           	BRA	_00185_DS_
                                           _00172_DS_:
003372   928b     bcf     0x8b, 0x1, 0     	BCF	_LATCbits, 1
003374   d027     bra     0x33c4           	BRA	_00185_DS_
                                           _00183_DS_:
                                           ;	.line	60; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	else if(c=='E') { 	// echo text (send it back to host)
003376   5000     movf    0, 0, 0          	MOVF	r0x00, W
003378   0a45     xorlw   0x45             	XORLW	0x45
00337a   e124     bnz     0x33c4           	BNZ	_00185_DS_
                                           ;	.line	61; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	printf("C");
00337c   0e00     movlw   0                	MOVLW	UPPER(___str_0)
00337e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003380   0e14     movlw   0x14             	MOVLW	HIGH(___str_0)
003382   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003384   0e36     movlw   0x36             	MOVLW	LOW(___str_0)
003386   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003388   ec2b     call    0x3256, 0        	CALL	_printf
00338a   f019
00338c   0e03     movlw   0x3              	MOVLW	0x03
00338e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	62; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	c = fraiseGetLen(); 			// get length of current packet
003390   ecf7     call    0x3dee, 0        	CALL	_fraiseGetLen
003392   f01e
003394   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _00177_DS_:
                                           ;	.line	63; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	while(c--) printf("%c",fraiseGetChar());// send each received byte
003396   c000     movff   0, 0x1           	MOVFF	r0x00, r0x01
003398   f001
00339a   0600     decf    0, 0x1, 0        	DECF	r0x00, F
00339c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00339e   e00f     bz      0x33be           	BZ	_00179_DS_
0033a0   ec95     call    0x372a, 0        	CALL	_fraiseGetChar
0033a2   f01b
0033a4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0033a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0033a8   0e00     movlw   0                	MOVLW	UPPER(___str_1)
0033aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0033ac   0e14     movlw   0x14             	MOVLW	HIGH(___str_1)
0033ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0033b0   0e38     movlw   0x38             	MOVLW	LOW(___str_1)
0033b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0033b4   ec2b     call    0x3256, 0        	CALL	_printf
0033b6   f019
0033b8   0e05     movlw   0x5              	MOVLW	0x05
0033ba   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0033bc   d7ec     bra     0x3396           	BRA	_00177_DS_
                                           _00179_DS_:
                                           ;	.line	64; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	putchar('\n');				// end of line
0033be   0e0a     movlw   0xa              	MOVLW	0x0a
0033c0   ec09     call    0x3612, 0        	CALL	_putchar
0033c2   f01b
                                           _00185_DS_:
0033c4   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0033c6   f001
0033c8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0033ca   f000
0033cc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	37; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	void loop() {
002faa   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002fac   ffe5
002fae   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002fb0   ffe5
002fb2   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002fb4   ffe5
002fb6   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002fb8   ffe5
                                           ;	.line	39; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	fraiseService();	// listen to Fraise events
002fba   ec8f     call    0x211e, 0        	CALL	_fraiseService
002fbc   f010
                                           ;	.line	40; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogService();	// analog management routine
002fbe   ec54     call    0xca8, 0         	CALL	_analogService
002fc0   f006
                                           ;	.line	42; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	if(delayFinished(mainDelay)) // when mainDelay triggers :
002fc2   ec6b     call    0x36d6, 0        	CALL	_time
002fc4   f01b
002fc6   6e00     movwf   0, 0             	MOVWF	r0x00
002fc8   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
002fca   f001
002fcc   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
002fce   f002
002fd0   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
002fd2   f003
002fd4   0104     movlb   0x4              	BANKSEL	_mainDelay
002fd6   5133     movf    0x33, 0, 0x1     	MOVF	_mainDelay, W, B
002fd8   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
                                           ; removed redundant BANKSEL
002fda   5134     movf    0x34, 0, 0x1     	MOVF	(_mainDelay + 1), W, B
002fdc   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
                                           ; removed redundant BANKSEL
002fde   5135     movf    0x35, 0, 0x1     	MOVF	(_mainDelay + 2), W, B
002fe0   5a02     subwfb  0x2, 0x1, 0      	SUBWFB	r0x02, F
                                           ; removed redundant BANKSEL
002fe2   5136     movf    0x36, 0, 0x1     	MOVF	(_mainDelay + 3), W, B
002fe4   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
002fe6   9e03     bcf     0x3, 0x7, 0      	BCF	r0x03, 7
002fe8   0e3f     movlw   0x3f             	MOVLW	0x3f
002fea   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
002fec   e108     bnz     0x2ffe           	BNZ	_00166_DS_
002fee   0eff     movlw   0xff             	MOVLW	0xff
002ff0   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
002ff2   e105     bnz     0x2ffe           	BNZ	_00166_DS_
002ff4   0eff     movlw   0xff             	MOVLW	0xff
002ff6   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002ff8   e102     bnz     0x2ffe           	BNZ	_00166_DS_
002ffa   0eff     movlw   0xff             	MOVLW	0xff
002ffc   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00166_DS_:
002ffe   e216     bc      0x302c           	BC	_00160_DS_
                                           ;	.line	44; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	delayStart(mainDelay, 5000); 	// re-init mainDelay
003000   ec6b     call    0x36d6, 0        	CALL	_time
003002   f01b
003004   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003006   f001
003008   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
00300a   f002
00300c   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
00300e   f003
003010   0f88     addlw   0x88             	ADDLW	0x88
003012   0104     movlb   0x4              	BANKSEL	_mainDelay
003014   6f33     movwf   0x33, 0x1        	MOVWF	_mainDelay, B
003016   0e13     movlw   0x13             	MOVLW	0x13
003018   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
                                           ; removed redundant BANKSEL
00301a   6f34     movwf   0x34, 0x1        	MOVWF	(_mainDelay + 1), B
00301c   0e00     movlw   0                	MOVLW	0x00
00301e   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
                                           ; removed redundant BANKSEL
003020   6f35     movwf   0x35, 0x1        	MOVWF	(_mainDelay + 2), B
003022   0e00     movlw   0                	MOVLW	0x00
003024   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
003026   6f36     movwf   0x36, 0x1        	MOVWF	(_mainDelay + 3), B
                                           ;	.line	45; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogSend();		// send analog channels that changed
003028   ec0e     call    0x81c, 0         	CALL	_analogSend
00302a   f004
                                           _00160_DS_:
00302c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00302e   f003
003030   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003032   f002
003034   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003036   f001
003038   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00303a   f000
00303c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	13; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	void setup(void) {	
0010fc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0010fe   ffe5
001100   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
001102   ffe5
001104   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
001106   ffe5
001108   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00110a   ffe5
00110c   c004     movff   0x4, 0xfe5       	MOVFF	r0x05, POSTDEC1
00110e   ffe5
                                           ;	.line	15; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	fruitInit();
001110   ece8     call    0x3dd0, 0        	CALL	_fruitInit
001112   f01e
                                           ;	.line	17; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	pinModeDigitalOut(LED); 	// set the LED pin mode to digital out
001114   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	18; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	digitalClear(LED);		// clear the LED
001116   928b     bcf     0x8b, 0x1, 0     	BCF	_LATCbits, 1
                                           ;	.line	19; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	delayStart(mainDelay, 5000); 	// init the mainDelay to 5 ms
001118   ec6b     call    0x36d6, 0        	CALL	_time
00111a   f01b
00111c   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00111e   f001
001120   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
001122   f002
001124   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
001126   f003
001128   0f88     addlw   0x88             	ADDLW	0x88
00112a   0104     movlb   0x4              	BANKSEL	_mainDelay
00112c   6f33     movwf   0x33, 0x1        	MOVWF	_mainDelay, B
00112e   0e13     movlw   0x13             	MOVLW	0x13
001130   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
                                           ; removed redundant BANKSEL
001132   6f34     movwf   0x34, 0x1        	MOVWF	(_mainDelay + 1), B
001134   0e00     movlw   0                	MOVLW	0x00
001136   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
                                           ; removed redundant BANKSEL
001138   6f35     movwf   0x35, 0x1        	MOVWF	(_mainDelay + 2), B
00113a   0e00     movlw   0                	MOVLW	0x00
00113c   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
00113e   6f36     movwf   0x36, 0x1        	MOVWF	(_mainDelay + 3), B
                                           ;	.line	22; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogInit();		// init analog module
001140   ecb0     call    0x2560, 0        	CALL	_analogInit
001142   f012
                                           ;	.line	26; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogSelect(0,K1); //A
001144   8092     bsf     0x92, 0, 0       	BSF	_TRISAbits, 0
001146   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001148   6e00     movwf   0, 0             	MOVWF	r0x00
00114a   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
00114c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00114e   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001150   6e03     movwf   0x3, 0           	MOVWF	r0x03
001152   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001154   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
001156   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001158   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00115a   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
00115c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00115e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001160   6e03     movwf   0x3, 0           	MOVWF	r0x03
001162   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001164   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
001166   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001168   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
00116a   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
00116c   6e04     movwf   0x4, 0           	MOVWF	r0x05
00116e   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001170   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
001172   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
001174   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
001176   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001178   6e04     movwf   0x4, 0           	MOVWF	r0x05
00117a   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
00117c   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
00117e   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
001180   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
001182   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001184   ffe9
001186   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001188   ffea
00118a   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
00118c   f002
00118e   8002     bsf     0x2, 0, 0        	BSF	r0x02, 0
001190   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001192   ffe9
001194   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001196   ffea
001198   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
00119a   ffef
00119c   0e00     movlw   0                	MOVLW	0x00
00119e   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0011a0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0011a2   ec66     call    0x2acc, 0        	CALL	_analogSelectAdc
0011a4   f015
0011a6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0011a8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	27; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogSelect(1,K2); //D
0011aa   8292     bsf     0x92, 0x1, 0     	BSF	_TRISAbits, 1
0011ac   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0011ae   6e00     movwf   0, 0             	MOVWF	r0x00
0011b0   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0011b2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0011b4   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0011b6   6e03     movwf   0x3, 0           	MOVWF	r0x03
0011b8   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0011ba   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0011bc   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0011be   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0011c0   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0011c2   6e02     movwf   0x2, 0           	MOVWF	r0x02
0011c4   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0011c6   6e03     movwf   0x3, 0           	MOVWF	r0x03
0011c8   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0011ca   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
0011cc   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0011ce   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
0011d0   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0011d2   6e04     movwf   0x4, 0           	MOVWF	r0x05
0011d4   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0011d6   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
0011d8   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
0011da   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0011dc   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0011de   6e04     movwf   0x4, 0           	MOVWF	r0x05
0011e0   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0011e2   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
0011e4   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
0011e6   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
0011e8   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
0011ea   ffe9
0011ec   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0011ee   ffea
0011f0   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
0011f2   f002
0011f4   8202     bsf     0x2, 0x1, 0      	BSF	r0x02, 1
0011f6   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0011f8   ffe9
0011fa   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0011fc   ffea
0011fe   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
001200   ffef
001202   0e01     movlw   0x1              	MOVLW	0x01
001204   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001206   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001208   ec66     call    0x2acc, 0        	CALL	_analogSelectAdc
00120a   f015
00120c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00120e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	28; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogSelect(2,K3); //S
001210   8492     bsf     0x92, 0x2, 0     	BSF	_TRISAbits, 2
001212   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001214   6e00     movwf   0, 0             	MOVWF	r0x00
001216   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001218   6e01     movwf   0x1, 0           	MOVWF	r0x01
00121a   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
00121c   6e03     movwf   0x3, 0           	MOVWF	r0x03
00121e   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001220   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
001222   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001224   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
001226   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001228   6e02     movwf   0x2, 0           	MOVWF	r0x02
00122a   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
00122c   6e03     movwf   0x3, 0           	MOVWF	r0x03
00122e   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001230   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
001232   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001234   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
001236   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001238   6e04     movwf   0x4, 0           	MOVWF	r0x05
00123a   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
00123c   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
00123e   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
001240   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
001242   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001244   6e04     movwf   0x4, 0           	MOVWF	r0x05
001246   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001248   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
00124a   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
00124c   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
00124e   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001250   ffe9
001252   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001254   ffea
001256   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
001258   f002
00125a   8402     bsf     0x2, 0x2, 0      	BSF	r0x02, 2
00125c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00125e   ffe9
001260   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001262   ffea
001264   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
001266   ffef
001268   0e02     movlw   0x2              	MOVLW	0x02
00126a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00126c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00126e   ec66     call    0x2acc, 0        	CALL	_analogSelectAdc
001270   f015
001272   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001274   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	29; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogSelect(3,K4); //R
001276   8692     bsf     0x92, 0x3, 0     	BSF	_TRISAbits, 3
001278   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
00127a   6e00     movwf   0, 0             	MOVWF	r0x00
00127c   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
00127e   6e01     movwf   0x1, 0           	MOVWF	r0x01
001280   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001282   6e03     movwf   0x3, 0           	MOVWF	r0x03
001284   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001286   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
001288   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00128a   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00128c   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
00128e   6e02     movwf   0x2, 0           	MOVWF	r0x02
001290   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001292   6e03     movwf   0x3, 0           	MOVWF	r0x03
001294   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001296   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
001298   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00129a   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
00129c   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
00129e   6e04     movwf   0x4, 0           	MOVWF	r0x05
0012a0   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0012a2   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
0012a4   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
0012a6   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0012a8   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0012aa   6e04     movwf   0x4, 0           	MOVWF	r0x05
0012ac   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0012ae   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
0012b0   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
0012b2   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
0012b4   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
0012b6   ffe9
0012b8   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0012ba   ffea
0012bc   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
0012be   f002
0012c0   8602     bsf     0x2, 0x3, 0      	BSF	r0x02, 3
0012c2   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0012c4   ffe9
0012c6   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0012c8   ffea
0012ca   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
0012cc   ffef
0012ce   0e03     movlw   0x3              	MOVLW	0x03
0012d0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012d4   ec66     call    0x2acc, 0        	CALL	_analogSelectAdc
0012d6   f015
0012d8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0012da   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	31; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogSelect(4, K5); //WaveForm 1
0012dc   8694     bsf     0x94, 0x3, 0     	BSF	_TRISCbits, 3
0012de   0e82     movlw   0x82             	MOVLW	LOW(_PORTC)
0012e0   6e00     movwf   0, 0             	MOVWF	r0x00
0012e2   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTC)
0012e4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0012e6   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0012e8   6e03     movwf   0x3, 0           	MOVWF	r0x03
0012ea   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0012ec   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0012ee   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0012f0   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0012f2   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0012f4   6e03     movwf   0x3, 0           	MOVWF	r0x03
0012f6   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0012f8   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
0012fa   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0012fc   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
0012fe   0e82     movlw   0x82             	MOVLW	LOW(_PORTC)
001300   6e02     movwf   0x2, 0           	MOVWF	r0x02
001302   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTC)
001304   6e03     movwf   0x3, 0           	MOVWF	r0x03
001306   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001308   6e04     movwf   0x4, 0           	MOVWF	r0x05
00130a   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
00130c   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
00130e   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
001310   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
001312   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001314   6e04     movwf   0x4, 0           	MOVWF	r0x05
001316   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001318   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
00131a   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
00131c   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
00131e   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001320   ffe9
001322   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001324   ffea
001326   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
001328   f002
00132a   8602     bsf     0x2, 0x3, 0      	BSF	r0x02, 3
00132c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00132e   ffe9
001330   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001332   ffea
001334   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
001336   ffef
001338   0e0f     movlw   0xf              	MOVLW	0x0f
00133a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00133c   0e04     movlw   0x4              	MOVLW	0x04
00133e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001340   ec66     call    0x2acc, 0        	CALL	_analogSelectAdc
001342   f015
001344   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001346   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	32; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogSelect(5, K6); //WaveForm 2
001348   8494     bsf     0x94, 0x2, 0     	BSF	_TRISCbits, 2
00134a   0e82     movlw   0x82             	MOVLW	LOW(_PORTC)
00134c   6e00     movwf   0, 0             	MOVWF	r0x00
00134e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTC)
001350   6e01     movwf   0x1, 0           	MOVWF	r0x01
001352   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001354   6e03     movwf   0x3, 0           	MOVWF	r0x03
001356   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001358   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00135a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00135c   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00135e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001360   6e03     movwf   0x3, 0           	MOVWF	r0x03
001362   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001364   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
001366   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001368   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
00136a   0e82     movlw   0x82             	MOVLW	LOW(_PORTC)
00136c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00136e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTC)
001370   6e03     movwf   0x3, 0           	MOVWF	r0x03
001372   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001374   6e04     movwf   0x4, 0           	MOVWF	r0x05
001376   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001378   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
00137a   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
00137c   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
00137e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001380   6e04     movwf   0x4, 0           	MOVWF	r0x05
001382   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001384   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
001386   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
001388   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
00138a   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
00138c   ffe9
00138e   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001390   ffea
001392   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
001394   f002
001396   8402     bsf     0x2, 0x2, 0      	BSF	r0x02, 2
001398   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00139a   ffe9
00139c   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00139e   ffea
0013a0   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
0013a2   ffef
0013a4   0e0e     movlw   0xe              	MOVLW	0x0e
0013a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0013a8   0e05     movlw   0x5              	MOVLW	0x05
0013aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0013ac   ec66     call    0x2acc, 0        	CALL	_analogSelectAdc
0013ae   f015
0013b0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0013b2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	34; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogSelect(8,K8); //main volume
0013b4   8a94     bsf     0x94, 0x5, 0     	BSF	_TRISCbits, 5
0013b6   0e82     movlw   0x82             	MOVLW	LOW(_PORTC)
0013b8   6e00     movwf   0, 0             	MOVWF	r0x00
0013ba   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTC)
0013bc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0013be   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0013c0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0013c2   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0013c4   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0013c6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0013c8   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0013ca   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0013cc   6e03     movwf   0x3, 0           	MOVWF	r0x03
0013ce   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0013d0   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
0013d2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0013d4   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
0013d6   0e82     movlw   0x82             	MOVLW	LOW(_PORTC)
0013d8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0013da   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTC)
0013dc   6e03     movwf   0x3, 0           	MOVWF	r0x03
0013de   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0013e0   6e04     movwf   0x4, 0           	MOVWF	r0x05
0013e2   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0013e4   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
0013e6   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
0013e8   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0013ea   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0013ec   6e04     movwf   0x4, 0           	MOVWF	r0x05
0013ee   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0013f0   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
0013f2   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
0013f4   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
0013f6   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
0013f8   ffe9
0013fa   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0013fc   ffea
0013fe   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
001400   f002
001402   8a02     bsf     0x2, 0x5, 0      	BSF	r0x02, 5
001404   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001406   ffe9
001408   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00140a   ffea
00140c   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
00140e   ffef
001410   0e11     movlw   0x11             	MOVLW	0x11
001412   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001414   0e08     movlw   0x8              	MOVLW	0x08
001416   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001418   ec66     call    0x2acc, 0        	CALL	_analogSelectAdc
00141a   f015
00141c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00141e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001420   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x05
001422   f004
001424   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
001426   f003
001428   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00142a   f002
00142c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00142e   f001
001430   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
001432   f000
001434   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
001436   0043     dw      0x43             	DB	0x43, 0x00
                                           ; ; Starting pCode block
                                           ___str_1:
001438   6325     cpfseq  0x25, 0x1        	DB	0x25, 0x63, 0x00
00143a   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 1100 (0x044c) bytes ( 0.84%)
                                           ;           	  550 (0x0226) words
                                           ; udata size:	    4 (0x0004) bytes ( 0.11%)
                                           ; access size:	    5 (0x0005) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_fruitInit
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_coreInit
                                           	extern	_fraiseInit
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_fruit__fruitInit	code
                                           _fruitInit:
                                           ;	.line	29; C:/Users/sarto/Documents/Pd/externals/Fraise/fruit/fruit.c	coreInit();	
003dd0   ecbf     call    0x377e, 0        	CALL	_coreInit
003dd2   f01b
                                           ;	.line	30; C:/Users/sarto/Documents/Pd/externals/Fraise/fruit/fruit.c	fraiseInit();
003dd4   ec3a     call    0x3674, 0        	CALL	_fraiseInit
003dd6   f01b
003dd8   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	   10 (0x000a) bytes ( 0.01%)
                                           ;           	    5 (0x0005) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_EEdeclareChar
                                           	global	_EEdeclareInt
                                           	global	_EEdeclareLong
                                           	global	_EEwriteMain
                                           	global	_EEreadMain
                                           	global	_eeaddress
                                           	global	_eeoperation
                                           	global	_EELoadChar
                                           	global	_EELoadInt
                                           	global	_EELoadLong
                                           	global	_EESaveChar
                                           	global	_EESaveInt
                                           	global	_EESaveLong
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrput1
                                           	extern	__gptrget1
                                           	extern	__gptrput2
                                           	extern	__gptrget2
                                           	extern	__gptrput4
                                           	extern	__gptrget4
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_eeWriteByte
                                           	extern	_eeReadByte
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           FSR0L	equ	0xfe9
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           
                                           udata_eeparams_0	udata
                                           _eeaddress	res	2
                                           
                                           udata_eeparams_1	udata
                                           _eeoperation	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_eeparams__EEreadMain	code
                                           _EEreadMain:
003db4   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	112; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	eeoperation=EE_RD;
003db6   6b37     clrf    0x37, 0x1        	CLRF	_eeoperation, B
                                           ;	.line	113; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	eeaddress=EEUSER;
003db8   0e1c     movlw   0x1c             	MOVLW	0x1c
003dba   010a     movlb   0xa              	BANKSEL	_eeaddress
003dbc   6f47     movwf   0x47, 0x1        	MOVWF	_eeaddress, B
                                           ; removed redundant BANKSEL
003dbe   6b48     clrf    0x48, 0x1        	CLRF	(_eeaddress + 1), B
003dc0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEwriteMain	code
                                           _EEwriteMain:
                                           ;	.line	103; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	eeoperation=EE_WR;
003da4   0e01     movlw   0x1              	MOVLW	0x01
003da6   0104     movlb   0x4              	BANKSEL	_eeoperation
003da8   6f37     movwf   0x37, 0x1        	MOVWF	_eeoperation, B
                                           ;	.line	104; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	eeaddress=EEUSER;
003daa   0e1c     movlw   0x1c             	MOVLW	0x1c
003dac   010a     movlb   0xa              	BANKSEL	_eeaddress
003dae   6f47     movwf   0x47, 0x1        	MOVWF	_eeaddress, B
                                           ; removed redundant BANKSEL
003db0   6b48     clrf    0x48, 0x1        	CLRF	(_eeaddress + 1), B
003db2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEdeclareLong	code
                                           _EEdeclareLong:
                                           ;	.line	92; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EEdeclareLong(unsigned long *data)
002a00   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002a02   ffe5
002a04   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002a06   ffd9
002a08   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002a0a   ffe5
002a0c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002a0e   ffe5
002a10   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002a12   ffe5
002a14   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002a16   ffe5
002a18   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002a1a   ffe5
002a1c   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002a1e   ffe5
002a20   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002a22   ffe5
002a24   0e02     movlw   0x2              	MOVLW	0x02
002a26   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002a28   f000
002a2a   0e03     movlw   0x3              	MOVLW	0x03
002a2c   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002a2e   f001
002a30   0e04     movlw   0x4              	MOVLW	0x04
002a32   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002a34   f002
002a36   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	94; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	if(eeoperation==EE_RD) *data=EELoadLong();
002a38   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
002a3a   e119     bnz     0x2a6e           	BNZ	_00176_DS_
002a3c   ec76     call    0x1eec, 0        	CALL	_EELoadLong
002a3e   f00f
002a40   6e03     movwf   0x3, 0           	MOVWF	r0x03
002a42   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
002a44   f004
002a46   cff4     movff   0xff4, 0x5       	MOVFF	PRODH, r0x05
002a48   f005
002a4a   cfe9     movff   0xfe9, 0x6       	MOVFF	FSR0L, r0x06
002a4c   f006
002a4e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002a50   ffe5
002a52   c004     movff   0x4, 0xff4       	MOVFF	r0x04, PRODH
002a54   fff4
002a56   c005     movff   0x5, 0xff6       	MOVFF	r0x05, TBLPTRL
002a58   fff6
002a5a   c006     movff   0x6, 0xff7       	MOVFF	r0x06, TBLPTRH
002a5c   fff7
002a5e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002a60   ffe9
002a62   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
002a64   fff3
002a66   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002a68   ec2d     call    0x3c5a, 0        	CALL	__gptrput4
002a6a   f01e
002a6c   d01e     bra     0x2aaa           	BRA	_00178_DS_
                                           _00176_DS_:
002a6e   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	95; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	else if(eeoperation==EE_WR) EESaveLong(*data);
002a70   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
002a72   0a01     xorlw   0x1              	XORLW	0x01
002a74   e11a     bnz     0x2aaa           	BNZ	_00178_DS_
002a76   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002a78   ffe9
002a7a   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
002a7c   fff3
002a7e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002a80   ec7e     call    0x38fc, 0        	CALL	__gptrget4
002a82   f01c
002a84   6e00     movwf   0, 0             	MOVWF	r0x00
002a86   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
002a88   f001
002a8a   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
002a8c   f002
002a8e   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
002a90   f003
002a92   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002a94   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002a96   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002a98   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002a9a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002a9c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002a9e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002aa0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002aa2   ec93     call    0x2926, 0        	CALL	_EESaveLong
002aa4   f014
002aa6   0e04     movlw   0x4              	MOVLW	0x04
002aa8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00178_DS_:
002aaa   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002aac   f006
002aae   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002ab0   f005
002ab2   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002ab4   f004
002ab6   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002ab8   f003
002aba   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002abc   f002
002abe   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002ac0   f001
002ac2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002ac4   f000
002ac6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002ac8   ffd9
002aca   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEdeclareInt	code
                                           _EEdeclareInt:
                                           ;	.line	86; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EEdeclareInt(unsigned int *data)
002e72   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002e74   ffe5
002e76   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002e78   ffd9
002e7a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002e7c   ffe5
002e7e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002e80   ffe5
002e82   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002e84   ffe5
002e86   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002e88   ffe5
002e8a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002e8c   ffe5
002e8e   0e02     movlw   0x2              	MOVLW	0x02
002e90   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002e92   f000
002e94   0e03     movlw   0x3              	MOVLW	0x03
002e96   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002e98   f001
002e9a   0e04     movlw   0x4              	MOVLW	0x04
002e9c   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002e9e   f002
002ea0   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	88; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	if(eeoperation==EE_RD) *data=EELoadInt();
002ea2   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
002ea4   e111     bnz     0x2ec8           	BNZ	_00157_DS_
002ea6   ecd5     call    0x35aa, 0        	CALL	_EELoadInt
002ea8   f01a
002eaa   6e03     movwf   0x3, 0           	MOVWF	r0x03
002eac   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
002eae   f004
002eb0   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002eb2   ffe5
002eb4   c004     movff   0x4, 0xff4       	MOVFF	r0x04, PRODH
002eb6   fff4
002eb8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002eba   ffe9
002ebc   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
002ebe   fff3
002ec0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002ec2   ec86     call    0x3d0c, 0        	CALL	__gptrput2
002ec4   f01e
002ec6   d016     bra     0x2ef4           	BRA	_00159_DS_
                                           _00157_DS_:
002ec8   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	89; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	else if(eeoperation==EE_WR) EESaveInt(*data);
002eca   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
002ecc   0a01     xorlw   0x1              	XORLW	0x01
002ece   e112     bnz     0x2ef4           	BNZ	_00159_DS_
002ed0   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002ed2   ffe9
002ed4   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
002ed6   fff3
002ed8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002eda   ecb7     call    0x3b6e, 0        	CALL	__gptrget2
002edc   f01d
002ede   6e00     movwf   0, 0             	MOVWF	r0x00
002ee0   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
002ee2   f001
002ee4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002ee6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002ee8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002eea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002eec   ece7     call    0x33ce, 0        	CALL	_EESaveInt
002eee   f019
002ef0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002ef2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00159_DS_:
002ef4   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002ef6   f004
002ef8   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002efa   f003
002efc   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002efe   f002
002f00   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002f02   f001
002f04   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002f06   f000
002f08   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002f0a   ffd9
002f0c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEdeclareChar	code
                                           _EEdeclareChar:
                                           ;	.line	80; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EEdeclareChar(unsigned char *data)
0032d6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0032d8   ffe5
0032da   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0032dc   ffd9
0032de   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0032e0   ffe5
0032e2   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0032e4   ffe5
0032e6   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0032e8   ffe5
0032ea   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0032ec   ffe5
0032ee   0e02     movlw   0x2              	MOVLW	0x02
0032f0   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0032f2   f000
0032f4   0e03     movlw   0x3              	MOVLW	0x03
0032f6   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0032f8   f001
0032fa   0e04     movlw   0x4              	MOVLW	0x04
0032fc   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0032fe   f002
003300   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	82; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	if(eeoperation==EE_RD) *data=EELoadChar();
003302   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
003304   e10d     bnz     0x3320           	BNZ	_00138_DS_
003306   ec8b     call    0x3b16, 0        	CALL	_EELoadChar
003308   f01d
00330a   6e03     movwf   0x3, 0           	MOVWF	r0x03
00330c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00330e   ffe5
003310   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003312   ffe9
003314   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003316   fff3
003318   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00331a   ecb4     call    0x3d68, 0        	CALL	__gptrput1
00331c   f01e
00331e   d00f     bra     0x333e           	BRA	_00140_DS_
                                           _00138_DS_:
003320   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	83; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	else if(eeoperation==EE_WR) EESaveChar(*data);
003322   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
003324   0a01     xorlw   0x1              	XORLW	0x01
003326   e10b     bnz     0x333e           	BNZ	_00140_DS_
003328   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00332a   ffe9
00332c   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00332e   fff3
003330   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003332   ec1c     call    0x3c38, 0        	CALL	__gptrget1
003334   f01e
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003336   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003338   ec34     call    0x3868, 0        	CALL	_EESaveChar
00333a   f01c
00333c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00140_DS_:
00333e   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003340   f003
003342   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003344   f002
003346   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003348   f001
00334a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00334c   f000
00334e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003350   ffd9
003352   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EESaveLong	code
                                           _EESaveLong:
                                           ;	.line	69; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EESaveLong(long data) //untested
002926   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002928   ffe5
00292a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00292c   ffd9
00292e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002930   ffe5
002932   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002934   ffe5
002936   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002938   ffe5
00293a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00293c   ffe5
00293e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002940   ffe5
002942   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002944   ffe5
002946   0e02     movlw   0x2              	MOVLW	0x02
002948   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00294a   f000
00294c   0e03     movlw   0x3              	MOVLW	0x03
00294e   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002950   f001
002952   0e04     movlw   0x4              	MOVLW	0x04
002954   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002956   f002
002958   0e05     movlw   0x5              	MOVLW	0x05
00295a   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
00295c   f003
                                           ;	.line	71; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>24);
00295e   ca47     movff   0xa47, 0x4       	MOVFF	_eeaddress, r0x04
002960   f004
002962   ca48     movff   0xa48, 0x5       	MOVFF	(_eeaddress + 1), r0x05
002964   f005
002966   010a     movlb   0xa              	BANKSEL	_eeaddress
002968   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
00296a   d001     bra     0x296e           	BRA	_10197_DS_
                                           ; removed redundant BANKSEL
00296c   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _10197_DS_:
00296e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002970   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002972   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002974   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002976   ec5a     call    0x38b4, 0        	CALL	_eeWriteByte
002978   f01c
00297a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00297c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	72; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>16);
00297e   ca47     movff   0xa47, 0x4       	MOVFF	_eeaddress, r0x04
002980   f004
002982   ca48     movff   0xa48, 0x5       	MOVFF	(_eeaddress + 1), r0x05
002984   f005
002986   010a     movlb   0xa              	BANKSEL	_eeaddress
002988   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
00298a   d001     bra     0x298e           	BRA	_20198_DS_
                                           ; removed redundant BANKSEL
00298c   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _20198_DS_:
                                           ; #	MOVF	r0x02, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
00298e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002990   6e05     movwf   0x5, 0           	MOVWF	r0x05
002992   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002994   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002996   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002998   ec5a     call    0x38b4, 0        	CALL	_eeWriteByte
00299a   f01c
00299c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00299e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	73; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>8);
0029a0   ca47     movff   0xa47, 0x4       	MOVFF	_eeaddress, r0x04
0029a2   f004
0029a4   ca48     movff   0xa48, 0x5       	MOVFF	(_eeaddress + 1), r0x05
0029a6   f005
0029a8   010a     movlb   0xa              	BANKSEL	_eeaddress
0029aa   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0029ac   d001     bra     0x29b0           	BRA	_30199_DS_
                                           ; removed redundant BANKSEL
0029ae   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _30199_DS_:
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
0029b0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0029b2   6e05     movwf   0x5, 0           	MOVWF	r0x05
0029b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0029b6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0029b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0029ba   ec5a     call    0x38b4, 0        	CALL	_eeWriteByte
0029bc   f01c
0029be   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0029c0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	74; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data);
0029c2   ca47     movff   0xa47, 0x4       	MOVFF	_eeaddress, r0x04
0029c4   f004
0029c6   ca48     movff   0xa48, 0x5       	MOVFF	(_eeaddress + 1), r0x05
0029c8   f005
0029ca   010a     movlb   0xa              	BANKSEL	_eeaddress
0029cc   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0029ce   d001     bra     0x29d2           	BRA	_40200_DS_
                                           ; removed redundant BANKSEL
0029d0   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _40200_DS_:
0029d2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0029d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0029d6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0029d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0029da   ec5a     call    0x38b4, 0        	CALL	_eeWriteByte
0029dc   f01c
0029de   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0029e0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0029e2   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0029e4   f005
0029e6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0029e8   f004
0029ea   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0029ec   f003
0029ee   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0029f0   f002
0029f2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0029f4   f001
0029f6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0029f8   f000
0029fa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0029fc   ffd9
0029fe   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EESaveInt	code
                                           _EESaveInt:
                                           ;	.line	63; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EESaveInt(int data)
0033ce   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0033d0   ffe5
0033d2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0033d4   ffd9
0033d6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0033d8   ffe5
0033da   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0033dc   ffe5
0033de   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0033e0   ffe5
0033e2   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0033e4   ffe5
0033e6   0e02     movlw   0x2              	MOVLW	0x02
0033e8   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0033ea   f000
0033ec   0e03     movlw   0x3              	MOVLW	0x03
0033ee   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0033f0   f001
                                           ;	.line	65; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>8);
0033f2   ca47     movff   0xa47, 0x2       	MOVFF	_eeaddress, r0x02
0033f4   f002
0033f6   ca48     movff   0xa48, 0x3       	MOVFF	(_eeaddress + 1), r0x03
0033f8   f003
0033fa   010a     movlb   0xa              	BANKSEL	_eeaddress
0033fc   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0033fe   d001     bra     0x3402           	BRA	_50201_DS_
                                           ; removed redundant BANKSEL
003400   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _50201_DS_:
003402   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003404   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003406   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003408   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00340a   ec5a     call    0x38b4, 0        	CALL	_eeWriteByte
00340c   f01c
00340e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003410   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	66; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data&255);
003412   ca47     movff   0xa47, 0x2       	MOVFF	_eeaddress, r0x02
003414   f002
003416   ca48     movff   0xa48, 0x3       	MOVFF	(_eeaddress + 1), r0x03
003418   f003
00341a   010a     movlb   0xa              	BANKSEL	_eeaddress
00341c   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
00341e   d001     bra     0x3422           	BRA	_60202_DS_
                                           ; removed redundant BANKSEL
003420   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _60202_DS_:
003422   5000     movf    0, 0, 0          	MOVF	r0x00, W
003424   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003426   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003428   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00342a   ec5a     call    0x38b4, 0        	CALL	_eeWriteByte
00342c   f01c
00342e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003430   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003432   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003434   f003
003436   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003438   f002
00343a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00343c   f001
00343e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003440   f000
003442   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003444   ffd9
003446   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EESaveChar	code
                                           _EESaveChar:
                                           ;	.line	58; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EESaveChar(unsigned char data)
003868   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00386a   ffe5
00386c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00386e   ffd9
003870   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003872   ffe5
003874   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003876   ffe5
003878   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00387a   ffe5
00387c   0e02     movlw   0x2              	MOVLW	0x02
00387e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003880   f000
                                           ;	.line	60; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data);
003882   ca47     movff   0xa47, 0x1       	MOVFF	_eeaddress, r0x01
003884   f001
003886   ca48     movff   0xa48, 0x2       	MOVFF	(_eeaddress + 1), r0x02
003888   f002
00388a   010a     movlb   0xa              	BANKSEL	_eeaddress
00388c   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
00388e   d001     bra     0x3892           	BRA	_70203_DS_
                                           ; removed redundant BANKSEL
003890   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _70203_DS_:
003892   5000     movf    0, 0, 0          	MOVF	r0x00, W
003894   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003896   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003898   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00389a   ec5a     call    0x38b4, 0        	CALL	_eeWriteByte
00389c   f01c
00389e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0038a0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0038a2   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0038a4   f002
0038a6   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0038a8   f001
0038aa   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0038ac   f000
0038ae   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0038b0   ffd9
0038b2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EELoadLong	code
                                           _EELoadLong:
                                           ;	.line	50; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	long EELoadLong() //untested
001eec   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
001eee   ffe5
001ef0   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
001ef2   ffe5
001ef4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
001ef6   ffe5
001ef8   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
001efa   ffe5
001efc   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
001efe   ffe5
001f00   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
001f02   ffe5
001f04   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
001f06   ffe5
001f08   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
001f0a   ffe5
001f0c   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
001f0e   ffe5
001f10   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
001f12   ffe5
001f14   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
001f16   ffe5
                                           ;	.line	52; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	return ((unsigned long)EE_READBYTE_NEXT()<<24)|((unsigned long)EE_READBYTE_NEXT()<<16)|(EE_READBYTE_NEXT()<<8)|EE_READBYTE_NEXT();
001f18   ca47     movff   0xa47, 0         	MOVFF	_eeaddress, r0x00
001f1a   f000
001f1c   ca48     movff   0xa48, 0x1       	MOVFF	(_eeaddress + 1), r0x01
001f1e   f001
001f20   010a     movlb   0xa              	BANKSEL	_eeaddress
001f22   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
001f24   d001     bra     0x1f28           	BRA	_80204_DS_
                                           ; removed redundant BANKSEL
001f26   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _80204_DS_:
001f28   5000     movf    0, 0, 0          	MOVF	r0x00, W
001f2a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f2c   ec5c     call    0x3cb8, 0        	CALL	_eeReadByte
001f2e   f01e
001f30   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001f32   6e07     movwf   0x7, 0           	MOVWF	r0x07
001f34   6a04     clrf    0x4, 0           	CLRF	r0x04
001f36   6a05     clrf    0x5, 0           	CLRF	r0x05
001f38   6a06     clrf    0x6, 0           	CLRF	r0x06
001f3a   ca47     movff   0xa47, 0         	MOVFF	_eeaddress, r0x00
001f3c   f000
001f3e   ca48     movff   0xa48, 0x1       	MOVFF	(_eeaddress + 1), r0x01
001f40   f001
001f42   010a     movlb   0xa              	BANKSEL	_eeaddress
001f44   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
001f46   d001     bra     0x1f4a           	BRA	_90205_DS_
                                           ; removed redundant BANKSEL
001f48   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _90205_DS_:
001f4a   5000     movf    0, 0, 0          	MOVF	r0x00, W
001f4c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f4e   ec5c     call    0x3cb8, 0        	CALL	_eeReadByte
001f50   f01e
001f52   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001f54   6a0b     clrf    0xb, 0           	CLRF	r0x0b
001f56   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
001f58   6a08     clrf    0x8, 0           	CLRF	r0x08
001f5a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
001f5c   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
001f5e   1205     iorwf   0x5, 0x1, 0      	IORWF	r0x05, F
001f60   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
001f62   1206     iorwf   0x6, 0x1, 0      	IORWF	r0x06, F
001f64   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
001f66   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
001f68   ca47     movff   0xa47, 0         	MOVFF	_eeaddress, r0x00
001f6a   f000
001f6c   ca48     movff   0xa48, 0x1       	MOVFF	(_eeaddress + 1), r0x01
001f6e   f001
001f70   010a     movlb   0xa              	BANKSEL	_eeaddress
001f72   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
001f74   d001     bra     0x1f78           	BRA	_100206_DS_
                                           ; removed redundant BANKSEL
001f76   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _100206_DS_:
001f78   5000     movf    0, 0, 0          	MOVF	r0x00, W
001f7a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f7c   ec5c     call    0x3cb8, 0        	CALL	_eeReadByte
001f7e   f01e
001f80   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001f82   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ; =DF= MOVFF: replaced by CRLF/SETF
001f84   6a00     clrf    0, 0             	CLRF	r0x00
001f86   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
001f88   f001
001f8a   6ae8     clrf    0xe8, 0          	CLRF	WREG
001f8c   be03     btfsc   0x3, 0x7, 0      	BTFSC	r0x03, 7
001f8e   0eff     movlw   0xff             	MOVLW	0xff
001f90   6e08     movwf   0x8, 0           	MOVWF	r0x08
001f92   6e09     movwf   0x9, 0           	MOVWF	r0x09
001f94   5000     movf    0, 0, 0          	MOVF	r0x00, W
001f96   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
001f98   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001f9a   1205     iorwf   0x5, 0x1, 0      	IORWF	r0x05, F
001f9c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
001f9e   1206     iorwf   0x6, 0x1, 0      	IORWF	r0x06, F
001fa0   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
001fa2   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
001fa4   ca47     movff   0xa47, 0         	MOVFF	_eeaddress, r0x00
001fa6   f000
001fa8   ca48     movff   0xa48, 0x1       	MOVFF	(_eeaddress + 1), r0x01
001faa   f001
001fac   010a     movlb   0xa              	BANKSEL	_eeaddress
001fae   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
001fb0   d001     bra     0x1fb4           	BRA	_110207_DS_
                                           ; removed redundant BANKSEL
001fb2   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _110207_DS_:
001fb4   5000     movf    0, 0, 0          	MOVF	r0x00, W
001fb6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001fb8   ec5c     call    0x3cb8, 0        	CALL	_eeReadByte
001fba   f01e
001fbc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001fbe   6a01     clrf    0x1, 0           	CLRF	r0x01
001fc0   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
001fc2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001fc4   1205     iorwf   0x5, 0x1, 0      	IORWF	r0x05, F
001fc6   1206     iorwf   0x6, 0x1, 0      	IORWF	r0x06, F
001fc8   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
001fca   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
001fcc   ffe9
001fce   c006     movff   0x6, 0xff4       	MOVFF	r0x06, PRODH
001fd0   fff4
001fd2   c005     movff   0x5, 0xff3       	MOVFF	r0x05, PRODL
001fd4   fff3
001fd6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001fd8   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
001fda   f00b
001fdc   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
001fde   f00a
001fe0   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
001fe2   f009
001fe4   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
001fe6   f008
001fe8   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
001fea   f007
001fec   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
001fee   f006
001ff0   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
001ff2   f005
001ff4   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
001ff6   f004
001ff8   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
001ffa   f003
001ffc   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
001ffe   f001
002000   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002002   f000
002004   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EELoadInt	code
                                           _EELoadInt:
                                           ;	.line	45; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	int EELoadInt()
0035aa   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0035ac   ffe5
0035ae   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0035b0   ffe5
0035b2   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0035b4   ffe5
0035b6   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0035b8   ffe5
                                           ;	.line	47; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	return (EE_READBYTE_NEXT()<<8)|EE_READBYTE_NEXT();
0035ba   ca47     movff   0xa47, 0         	MOVFF	_eeaddress, r0x00
0035bc   f000
0035be   ca48     movff   0xa48, 0x1       	MOVFF	(_eeaddress + 1), r0x01
0035c0   f001
0035c2   010a     movlb   0xa              	BANKSEL	_eeaddress
0035c4   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0035c6   d001     bra     0x35ca           	BRA	_120208_DS_
                                           ; removed redundant BANKSEL
0035c8   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _120208_DS_:
0035ca   5000     movf    0, 0, 0          	MOVF	r0x00, W
0035cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0035ce   ec5c     call    0x3cb8, 0        	CALL	_eeReadByte
0035d0   f01e
0035d2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0035d4   6e03     movwf   0x3, 0           	MOVWF	r0x03
0035d6   6a02     clrf    0x2, 0           	CLRF	r0x02
0035d8   ca47     movff   0xa47, 0         	MOVFF	_eeaddress, r0x00
0035da   f000
0035dc   ca48     movff   0xa48, 0x1       	MOVFF	(_eeaddress + 1), r0x01
0035de   f001
0035e0   010a     movlb   0xa              	BANKSEL	_eeaddress
0035e2   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0035e4   d001     bra     0x35e8           	BRA	_130209_DS_
                                           ; removed redundant BANKSEL
0035e6   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _130209_DS_:
0035e8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0035ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0035ec   ec5c     call    0x3cb8, 0        	CALL	_eeReadByte
0035ee   f01e
0035f0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0035f2   6a01     clrf    0x1, 0           	CLRF	r0x01
0035f4   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
0035f6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0035f8   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
0035fa   c003     movff   0x3, 0xff3       	MOVFF	r0x03, PRODL
0035fc   fff3
0035fe   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003600   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003602   f003
003604   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003606   f002
003608   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00360a   f001
00360c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00360e   f000
003610   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EELoadChar	code
                                           _EELoadChar:
                                           ;	.line	40; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	char EELoadChar()
003b16   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003b18   ffe5
003b1a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003b1c   ffe5
                                           ;	.line	42; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	return EE_READBYTE_NEXT();
003b1e   ca47     movff   0xa47, 0         	MOVFF	_eeaddress, r0x00
003b20   f000
003b22   ca48     movff   0xa48, 0x1       	MOVFF	(_eeaddress + 1), r0x01
003b24   f001
003b26   010a     movlb   0xa              	BANKSEL	_eeaddress
003b28   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
003b2a   d001     bra     0x3b2e           	BRA	_140210_DS_
                                           ; removed redundant BANKSEL
003b2c   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _140210_DS_:
003b2e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003b30   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b32   ec5c     call    0x3cb8, 0        	CALL	_eeReadByte
003b34   f01e
003b36   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003b38   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003b3a   f001
003b3c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003b3e   f000
003b40   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 1362 (0x0552) bytes ( 1.04%)
                                           ;           	  681 (0x02a9) words
                                           ; udata size:	    3 (0x0003) bytes ( 0.08%)
                                           ; access size:	   12 (0x000c) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           	CONFIG	XINST=OFF
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_eeWriteByte
                                           	global	_eeReadByte
                                           	global	_coreInit
                                           	global	_time
                                           	global	_TMR0U
                                           	global	_Now
                                           	global	_PORTZ
                                           	global	_PORTZbits
                                           	global	_LATZ
                                           	global	_LATZbits
                                           	global	_TRICZ
                                           	global	_TRISZbits
                                           	global	_ANSELZ
                                           	global	_ANSELZbits
                                           	global	_main
                                           	global	_high_ISR
                                           	global	_low_ISR
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_setup
                                           	extern	_loop
                                           	extern	_Setup
                                           	extern	_fraiseISR
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _TMR0U	db	0x00, 0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           
                                           udata_core_0	udata
                                           _Now	res	4
                                           
                                           udata_core_1	udata
                                           _time_now_1_76	res	4
                                           
                                           
                                           ustat_core_00	udata	0X0438
                                           _ANSELZ        
                                           _ANSELZbits    	res	1
                                           
                                           
                                           ustat_core_01	udata	0X0480
                                           _PORTZ         
                                           _PORTZbits     	res	1
                                           
                                           
                                           ustat_core_02	udata	0X0489
                                           _LATZ          
                                           _LATZbits      	res	1
                                           
                                           
                                           ustat_core_03	udata	0X0492
                                           _TRICZ         
                                           _TRISZbits     	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_core_ivec_0x1_high_ISR	code	0X000008
                                           ivec_0x1_high_ISR:
000008   ef2c     goto    0x2c58           	GOTO	_high_ISR
00000a   f016
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_core_ivec_0x2_low_ISR	code	0X000018
                                           ivec_0x2_low_ISR:
000018   efaa     goto    0x3154           	GOTO	_low_ISR
00001a   f018
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_core__main	code
                                           _main:
                                           ;	.line	112; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	setup();
00000c   ec7e     call    0x10fc, 0        	CALL	_setup
00000e   f008
                                           _00124_DS_:
                                           ;	.line	116; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	while(1) loop();
000010   ecd5     call    0x2faa, 0        	CALL	_loop
000012   f017
000014   d7fd     bra     0x10             	BRA	_00124_DS_
000016   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__time	code
                                           _time:
0036d6   010a     movlb   0xa              	BANKSEL	_TMR0U
                                           ;	.line	176; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	now.word1= TMR0U;
0036d8   5120     movf    0x20, 0, 0x1     	MOVF	_TMR0U, W, B
0036da   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 2)
0036dc   6f7b     movwf   0x7b, 0x1        	MOVWF	(_time_now_1_76 + 2), B
0036de   010a     movlb   0xa              	BANKSEL	(_TMR0U + 1)
0036e0   5121     movf    0x21, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
0036e2   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 3)
0036e4   6f7c     movwf   0x7c, 0x1        	MOVWF	(_time_now_1_76 + 3), B
                                           ;	.line	178; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_LSB(now)=TMR0L;
0036e6   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
0036e8   6f79     movwf   0x79, 0x1        	MOVWF	_time_now_1_76, B
                                           ;	.line	179; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_MSB(now)=TMR0H;
0036ea   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
0036ec   6f7a     movwf   0x7a, 0x1        	MOVWF	(_time_now_1_76 + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	181; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	if(now.word1 != TMR0U) { //a rollover occured : do read again
0036ee   517b     movf    0x7b, 0, 0x1     	MOVF	(_time_now_1_76 + 2), W, B
0036f0   010a     movlb   0xa              	BANKSEL	_TMR0U
0036f2   1920     xorwf   0x20, 0, 0x1     	XORWF	_TMR0U, W, B
0036f4   e105     bnz     0x3700           	BNZ	_00151_DS_
0036f6   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 3)
0036f8   517c     movf    0x7c, 0, 0x1     	MOVF	(_time_now_1_76 + 3), W, B
0036fa   010a     movlb   0xa              	BANKSEL	(_TMR0U + 1)
0036fc   1921     xorwf   0x21, 0, 0x1     	XORWF	(_TMR0U + 1), W, B
0036fe   e00c     bz      0x3718           	BZ	_00144_DS_
                                           _00151_DS_:
003700   010a     movlb   0xa              	BANKSEL	_TMR0U
                                           ;	.line	182; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	now.word1= TMR0U;
003702   5120     movf    0x20, 0, 0x1     	MOVF	_TMR0U, W, B
003704   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 2)
003706   6f7b     movwf   0x7b, 0x1        	MOVWF	(_time_now_1_76 + 2), B
003708   010a     movlb   0xa              	BANKSEL	(_TMR0U + 1)
00370a   5121     movf    0x21, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
00370c   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 3)
00370e   6f7c     movwf   0x7c, 0x1        	MOVWF	(_time_now_1_76 + 3), B
                                           ;	.line	183; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_LSB(now)=TMR0L;
003710   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
003712   6f79     movwf   0x79, 0x1        	MOVWF	_time_now_1_76, B
                                           ;	.line	184; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_MSB(now)=TMR0H;
003714   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
003716   6f7a     movwf   0x7a, 0x1        	MOVWF	(_time_now_1_76 + 1), B
                                           _00144_DS_:
                                           ;	.line	187; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	return now._dword;
003718   c47c     movff   0x47c, 0xfe9     	MOVFF	(_time_now_1_76 + 3), FSR0L
00371a   ffe9
00371c   c47b     movff   0x47b, 0xff4     	MOVFF	(_time_now_1_76 + 2), PRODH
00371e   fff4
003720   c47a     movff   0x47a, 0xff3     	MOVFF	(_time_now_1_76 + 1), PRODL
003722   fff3
003724   0104     movlb   0x4              	BANKSEL	_time_now_1_76
003726   5179     movf    0x79, 0, 0x1     	MOVF	_time_now_1_76, W, B
003728   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__low_ISR	code
                                           _low_ISR:
                                           ;	.line	155; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	void low_ISR(void) 
003154   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
003156   ffe5
003158   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
00315a   ffe5
00315c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00315e   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
003160   ffe5
003162   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
003164   ffe5
003166   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
003168   ffe5
00316a   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
00316c   ffe5
00316e   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
003170   ffe5
003172   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
003174   ffe5
                                           ;	.line	160; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	SAVETBLPRT();
003176   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTR, _POSTDEC1
003178   ffe5
00317a   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, _POSTDEC1
00317c   ffe5
00317e   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, _POSTDEC1
003180   ffe5
003182   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, _POSTDEC1
003184   ffe5
003186   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, _POSTDEC1
003188   ffe5
00318a   cfe1     movff   0xfe1, 0xfe5     	MOVFF	_FSR1L, _POSTDEC1
00318c   ffe5
00318e   cfe2     movff   0xfe2, 0xfe5     	MOVFF	_FSR1H, _POSTDEC1
003190   ffe5
                                           ;	.line	161; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	fraiseISR();
003192   ec69     call    0x18d2, 0        	CALL	_fraiseISR
003194   f00c
                                           ;	.line	166; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	RESTORETBLPRT();
003196   cfe4     movff   0xfe4, 0xfe2     	MOVFF	_PREINC1, _FSR1H
003198   ffe2
00319a   cfe4     movff   0xfe4, 0xfe1     	MOVFF	_PREINC1, _FSR1L
00319c   ffe1
00319e   cfe4     movff   0xfe4, 0xff5     	MOVFF	_PREINC1, _TABLAT
0031a0   fff5
0031a2   cfe4     movff   0xfe4, 0xff8     	MOVFF	_PREINC1, _TBLPTRU
0031a4   fff8
0031a6   cfe4     movff   0xfe4, 0xff7     	MOVFF	_PREINC1, _TBLPTRH
0031a8   fff7
0031aa   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTRL
0031ac   fff6
0031ae   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTR
0031b0   fff6
0031b2   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
0031b4   fffb
0031b6   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
0031b8   fffa
0031ba   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
0031bc   ffea
0031be   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
0031c0   ffe9
0031c2   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
0031c4   fff4
0031c6   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
0031c8   fff3
0031ca   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0031cc   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
0031ce   ffe0
0031d0   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
0031d2   ffd8
0031d4   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_core__high_ISR	code
                                           _high_ISR:
                                           ;	.line	127; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	void high_ISR(void)
002c58   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
002c5a   ffe5
002c5c   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
002c5e   ffe5
002c60   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002c62   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
002c64   ffe5
002c66   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
002c68   ffe5
002c6a   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
002c6c   ffe5
002c6e   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002c70   ffe5
002c72   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
002c74   ffe5
002c76   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
002c78   ffe5
                                           ;	.line	133; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	SAVETBLPRT();
002c7a   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTR, _POSTDEC1
002c7c   ffe5
002c7e   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, _POSTDEC1
002c80   ffe5
002c82   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, _POSTDEC1
002c84   ffe5
002c86   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, _POSTDEC1
002c88   ffe5
002c8a   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, _POSTDEC1
002c8c   ffe5
002c8e   cfe1     movff   0xfe1, 0xfe5     	MOVFF	_FSR1L, _POSTDEC1
002c90   ffe5
002c92   cfe2     movff   0xfe2, 0xfe5     	MOVFF	_FSR1H, _POSTDEC1
002c94   ffe5
002c96   010a     movlb   0xa              	BANKSEL	_TMR0U
                                           ;	.line	135; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	Now.word1= TMR0U;
002c98   5120     movf    0x20, 0, 0x1     	MOVF	_TMR0U, W, B
002c9a   010f     movlb   0xf              	BANKSEL	(_Now + 2)
002c9c   6f35     movwf   0x35, 0x1        	MOVWF	(_Now + 2), B
002c9e   010a     movlb   0xa              	BANKSEL	(_TMR0U + 1)
002ca0   5121     movf    0x21, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
002ca2   010f     movlb   0xf              	BANKSEL	(_Now + 3)
002ca4   6f36     movwf   0x36, 0x1        	MOVWF	(_Now + 3), B
                                           ;	.line	136; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_LSB(Now)=TMR0L;
002ca6   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
002ca8   6f33     movwf   0x33, 0x1        	MOVWF	_Now, B
                                           ;	.line	137; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_MSB(Now)=TMR0H;
002caa   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
002cac   6f34     movwf   0x34, 0x1        	MOVWF	(_Now + 1), B
                                           ;	.line	139; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	if(INTCONbits.TMR0IF) {
002cae   a4f2     btfss   0xf2, 0x2, 0     	BTFSS	_INTCONbits, 2
002cb0   d011     bra     0x2cd4           	BRA	_00132_DS_
002cb2   010a     movlb   0xa              	BANKSEL	_TMR0U
                                           ;	.line	140; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	TMR0U++;
002cb4   3f20     incfsz  0x20, 0x1, 0x1   	INCFSZ	_TMR0U, F, B
002cb6   d001     bra     0x2cba           	BRA	_10143_DS_
                                           ; removed redundant BANKSEL
002cb8   2b21     incf    0x21, 0x1, 0x1   	INCF	(_TMR0U + 1), F, B
                                           _10143_DS_:
                                           ;	.line	141; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.TMR0IF=0;
002cba   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
002cbc   010a     movlb   0xa              	BANKSEL	_TMR0U
                                           ;	.line	142; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	Now.word1= TMR0U;
002cbe   5120     movf    0x20, 0, 0x1     	MOVF	_TMR0U, W, B
002cc0   010f     movlb   0xf              	BANKSEL	(_Now + 2)
002cc2   6f35     movwf   0x35, 0x1        	MOVWF	(_Now + 2), B
002cc4   010a     movlb   0xa              	BANKSEL	(_TMR0U + 1)
002cc6   5121     movf    0x21, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
002cc8   010f     movlb   0xf              	BANKSEL	(_Now + 3)
002cca   6f36     movwf   0x36, 0x1        	MOVWF	(_Now + 3), B
                                           ;	.line	143; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_LSB(Now)=TMR0L;
002ccc   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
002cce   6f33     movwf   0x33, 0x1        	MOVWF	_Now, B
                                           ;	.line	144; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_MSB(Now)=TMR0H;
002cd0   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
002cd2   6f34     movwf   0x34, 0x1        	MOVWF	(_Now + 1), B
                                           _00132_DS_:
                                           ;	.line	150; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	RESTORETBLPRT();
002cd4   cfe4     movff   0xfe4, 0xfe2     	MOVFF	_PREINC1, _FSR1H
002cd6   ffe2
002cd8   cfe4     movff   0xfe4, 0xfe1     	MOVFF	_PREINC1, _FSR1L
002cda   ffe1
002cdc   cfe4     movff   0xfe4, 0xff5     	MOVFF	_PREINC1, _TABLAT
002cde   fff5
002ce0   cfe4     movff   0xfe4, 0xff8     	MOVFF	_PREINC1, _TBLPTRU
002ce2   fff8
002ce4   cfe4     movff   0xfe4, 0xff7     	MOVFF	_PREINC1, _TBLPTRH
002ce6   fff7
002ce8   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTRL
002cea   fff6
002cec   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTR
002cee   fff6
002cf0   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002cf2   fffb
002cf4   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
002cf6   fffa
002cf8   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002cfa   ffea
002cfc   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002cfe   ffe9
002d00   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002d02   fff4
002d04   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
002d06   fff3
002d08   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002d0a   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002d0c   ffe0
002d0e   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002d10   ffd8
002d12   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_core__coreInit	code
                                           _coreInit:
                                           ;	.line	72; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	void coreInit(void)
00377e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003780   ffe5
                                           ;	.line	75; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	Setup();
003782   ecf1     call    0x3de2, 0        	CALL	_Setup
003784   f01e
003786   0104     movlb   0x4              	BANKSEL	_LATZ
                                           ;	.line	79; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	PORTZ = LATZ = 0;
003788   6b89     clrf    0x89, 0x1        	CLRF	_LATZ, B
                                           ; removed redundant BANKSEL
00378a   6b80     clrf    0x80, 0x1        	CLRF	_PORTZ, B
                                           ; removed redundant BANKSEL
                                           ;	.line	80; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	PORTZbits.RZ1 = LATZbits.LATZ1 = 1;	
00378c   8389     bsf     0x89, 0x1, 0x1   	BSF	_LATZbits, 1, B
00378e   6a00     clrf    0, 0             	CLRF	r0x00
                                           ; removed redundant BANKSEL
003790   b389     btfsc   0x89, 0x1, 0x1   	BTFSC	_LATZbits, 1, B
003792   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
003794   5000     movf    0, 0, 0          	MOVF	r0x00, W
003796   0b01     andlw   0x1              	ANDLW	0x01
003798   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
00379a   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
                                           ; removed redundant BANKSEL
00379c   5180     movf    0x80, 0, 0x1     	MOVF	_PORTZbits, W, B
00379e   0bfd     andlw   0xfd             	ANDLW	0xfd
0037a0   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
0037a2   6f80     movwf   0x80, 0x1        	MOVWF	_PORTZbits, B
                                           ;	.line	83; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.TMR0ON = 1;
0037a4   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	84; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T08BIT = 0;	// 16 bit timer
0037a6   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	85; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T0CS = 0;		// Use internal clock
0037a8   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	86; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T0SE = 1;		// Hi to low
0037aa   88d5     bsf     0xd5, 0x4, 0     	BSF	_T0CONbits, 4
                                           ;	.line	87; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.PSA = 0;		// Use the prescaler
0037ac   96d5     bcf     0xd5, 0x3, 0     	BCF	_T0CONbits, 3
                                           ;	.line	88; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T0PS2 = 0;	// 
0037ae   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	89; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T0PS1 = 1;	// 1/16 prescaler: 
0037b0   82d5     bsf     0xd5, 0x1, 0     	BSF	_T0CONbits, 1
                                           ;	.line	90; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T0PS0 = 1;	// 
0037b2   80d5     bsf     0xd5, 0, 0       	BSF	_T0CONbits, 0
                                           ;	.line	91; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.TMR0IE=1;	// enable TMR0 interrupt
0037b4   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	92; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCON2bits.TMR0IP=1;	// high priority
0037b6   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	95; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	RCONbits.IPEN = 1;  // enable interrupts priority mode
0037b8   8ed0     bsf     0xd0, 0x7, 0     	BSF	_RCONbits, 7
                                           ;	.line	97; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEH = 1;  // enable interrupts
0037ba   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	98; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEL = 1;  // enable interrupts
0037bc   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	103; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T2CONbits.T2CKPS0=1; //prescaler 4
0037be   80ba     bsf     0xba, 0, 0       	BSF	_T2CONbits, 0
                                           ;	.line	104; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	PR2=255;
0037c0   0eff     movlw   0xff             	MOVLW	0xff
0037c2   68bb     setf    0xbb, 0          	SETF	_PR2
                                           ;	.line	105; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T2CONbits.TMR2ON=1;
0037c4   84ba     bsf     0xba, 0x2, 0     	BSF	_T2CONbits, 2
0037c6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0037c8   f000
0037ca   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__eeReadByte	code
                                           _eeReadByte:
                                           ;	.line	56; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	unsigned char eeReadByte(unsigned char address){
003cb8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003cba   ffe5
003cbc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003cbe   ffd9
003cc0   0e02     movlw   0x2              	MOVLW	0x02
003cc2   cfdb     movff   0xfdb, 0xfa9     	MOVFF	PLUSW2, _EEADR
003cc4   ffa9
                                           ;	.line	58; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.CFGS = 0;
003cc6   9ca6     bcf     0xa6, 0x6, 0     	BCF	_EECON1bits, 6
                                           ;	.line	59; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.EEPGD = 0;
003cc8   9ea6     bcf     0xa6, 0x7, 0     	BCF	_EECON1bits, 7
                                           ;	.line	60; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.RD = 1;
003cca   80a6     bsf     0xa6, 0, 0       	BSF	_EECON1bits, 0
                                           ;	.line	61; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	return EEDATA;
003ccc   50a8     movf    0xa8, 0, 0       	MOVF	_EEDATA, W
003cce   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003cd0   ffd9
003cd2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__eeWriteByte	code
                                           _eeWriteByte:
                                           ;	.line	33; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	void eeWriteByte(unsigned char address, unsigned char value){
0038b4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0038b6   ffe5
0038b8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0038ba   ffd9
0038bc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0038be   ffe5
0038c0   0e02     movlw   0x2              	MOVLW	0x02
0038c2   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0038c4   f000
0038c6   0e03     movlw   0x3              	MOVLW	0x03
0038c8   cfdb     movff   0xfdb, 0xfa8     	MOVFF	PLUSW2, _EEDATA
0038ca   ffa8
                                           ;	.line	36; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EEADR = address;
0038cc   c000     movff   0, 0xfa9         	MOVFF	r0x00, _EEADR
0038ce   ffa9
                                           ;	.line	38; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.EEPGD = 0;
0038d0   9ea6     bcf     0xa6, 0x7, 0     	BCF	_EECON1bits, 7
                                           ;	.line	39; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.CFGS = 0;
0038d2   9ca6     bcf     0xa6, 0x6, 0     	BCF	_EECON1bits, 6
                                           ;	.line	40; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.WREN = 1; // enable writes to data EEPROM
0038d4   84a6     bsf     0xa6, 0x2, 0     	BSF	_EECON1bits, 2
                                           ;	.line	41; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEH = 0;  // disable interrupts
0038d6   9ef2     bcf     0xf2, 0x7, 0     	BCF	_INTCONbits, 7
                                           ;	.line	42; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEL = 0;  // disable interrupts
0038d8   9cf2     bcf     0xf2, 0x6, 0     	BCF	_INTCONbits, 6
                                           ;	.line	43; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON2 = 0x55;
0038da   0e55     movlw   0x55             	MOVLW	0x55
0038dc   6ea7     movwf   0xa7, 0          	MOVWF	_EECON2
                                           ;	.line	44; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON2 = 0x0AA;
0038de   0eaa     movlw   0xaa             	MOVLW	0xaa
0038e0   6ea7     movwf   0xa7, 0          	MOVWF	_EECON2
                                           ;	.line	45; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.WR = 1;   // start writing
0038e2   82a6     bsf     0xa6, 0x1, 0     	BSF	_EECON1bits, 1
                                           _00105_DS_:
                                           ;	.line	46; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	while(EECON1bits.WR){
0038e4   a2a6     btfss   0xa6, 0x1, 0     	BTFSS	_EECON1bits, 1
0038e6   d002     bra     0x38ec           	BRA	_00107_DS_
0038e8   0000     nop                      	nop	
0038ea   d7fc     bra     0x38e4           	BRA	_00105_DS_
                                           _00107_DS_:
                                           ;	.line	51; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.WREN = 0;
0038ec   94a6     bcf     0xa6, 0x2, 0     	BCF	_EECON1bits, 2
                                           ;	.line	52; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEH = 1;  // enable interrupts
0038ee   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	53; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEL = 1;  // enable interrupts
0038f0   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
0038f2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0038f4   f000
0038f6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0038f8   ffd9
0038fa   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  596 (0x0254) bytes ( 0.45%)
                                           ;           	  298 (0x012a) words
                                           ; udata size:	   12 (0x000c) bytes ( 0.33%)
                                           ; access size:	    1 (0x0001) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_FraiseState
                                           	global	_FrTXtries
                                           	global	_fraiseSetID
                                           	global	_fraiseInit
                                           	global	_fraiseSetInterruptEnable
                                           	global	_fraiseGetInterruptEnable
                                           	global	_fraiseSend
                                           	global	_fraiseSendBroadcast
                                           	global	_fraiseISR
                                           	global	_fraiseGetChar
                                           	global	_fraisePeekChar
                                           	global	_fraiseGetLen
                                           	global	_fraiseGetIndex
                                           	global	_fraiseGetAt
                                           	global	_fraiseSendCopy
                                           	global	_fraiseService
                                           	global	_putchar
                                           	global	_FrTXbuf
                                           	global	_FrTXin
                                           	global	_FrTXout
                                           	global	_FrTXbufFree
                                           	global	_FrTXpacket
                                           	global	_FrTXpacket_i
                                           	global	_FrTXpacket_len
                                           	global	_FrTXchksum
                                           	global	_FrRXbuf
                                           	global	_FrRXchksum
                                           	global	_FrRXin
                                           	global	_FrRXin_tmp
                                           	global	_FrRXin_end
                                           	global	_FrRXout
                                           	global	_FrRXout_end
                                           	global	_FrRXout_len
                                           	global	_FrRXout_first
                                           	global	_FraiseStatus
                                           	global	_FrInterruptEnabled
                                           	global	_FrID
                                           	global	_txbuf
                                           	global	_txlen
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrget1
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_printf
                                           	extern	_eeWriteByte
                                           	extern	_eeReadByte
                                           	extern	_fraiseReceiveChar
                                           	extern	__modsint
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           
                                           
                                           	idata
                                           _FrTXin	db	0x00
                                           _FrTXout	db	0x00
                                           _FrTXbufFree	db	0xff
                                           _FrInterruptEnabled	db	0x00
                                           _FrID	db	0x00
                                           _txlen	db	0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           
                                           udata_fraisedevice_0	udata
                                           _FrTXtries	res	1
                                           
                                           udata_fraisedevice_1	udata
                                           _FraiseState	res	1
                                           
                                           udata_fraisedevice_2	udata
                                           _fraiseISR_c_1_112	res	1
                                           
                                           udata_fraisedevice_3	udata
                                           _fraiseISR_c2_1_112	res	1
                                           
                                           udata_fraisedevice_4	udata
                                           _FrRXin	res	1
                                           
                                           udata_fraisedevice_5	udata
                                           _FrRXout	res	1
                                           
                                           udata_fraisedevice_6	udata
                                           _FrTXpacket_len	res	1
                                           
                                           udata_fraisedevice_7	udata
                                           _FraiseStatus	res	1
                                           
                                           udata_fraisedevice_8	udata
                                           _FrTXbuf	res	256
                                           
                                           udata_fraisedevice_9	udata
                                           _FrTXchksum	res	1
                                           
                                           udata_fraisedevice_10	udata
                                           _FrTXpacket_i	res	1
                                           
                                           udata_fraisedevice_11	udata
                                           _fraiseDecodeNextTXPacket_ischar_1_92	res	1
                                           
                                           udata_fraisedevice_12	udata
                                           _FrTXpacket	res	35
                                           
                                           udata_fraisedevice_13	udata
                                           _FrRXchksum	res	1
                                           
                                           udata_fraisedevice_14	udata
                                           _FrRXin_tmp	res	1
                                           
                                           udata_fraisedevice_15	udata
                                           _FrRXin_end	res	1
                                           
                                           udata_fraisedevice_16	udata
                                           _FrRXbuf	res	128
                                           
                                           udata_fraisedevice_17	udata
                                           _FrRXout_end	res	1
                                           
                                           udata_fraisedevice_18	udata
                                           _FrRXout_len	res	1
                                           
                                           udata_fraisedevice_19	udata
                                           _FrRXout_first	res	1
                                           
                                           udata_fraisedevice_20	udata
                                           _txbuf	res	35
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_fraisedevice__putchar	code
                                           _putchar:
                                           ;	.line	780; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	PUTCHAR (c) {
003612   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003614   ffe5
003616   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003618   ffe5
00361a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00361c   ffe5
00361e   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	781; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	txbuf[txlen] = c;
003620   0e00     movlw   0                	MOVLW	LOW(_txbuf)
003622   010a     movlb   0xa              	BANKSEL	_txlen
003624   2527     addwf   0x27, 0, 0x1     	ADDWF	_txlen, W, B
003626   6e01     movwf   0x1, 0           	MOVWF	r0x01
003628   6a02     clrf    0x2, 0           	CLRF	r0x02
00362a   0e0f     movlw   0xf              	MOVLW	HIGH(_txbuf)
00362c   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00362e   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003630   ffe9
003632   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003634   ffea
003636   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
003638   ffef
                                           ;	.line	782; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(txlen < (sizeof(txbuf) - 1)) txlen++;
00363a   0e22     movlw   0x22             	MOVLW	0x22
                                           ; #	SUBWF	_txlen, W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_00807_DS_
                                           ; #	INCF	_txlen, F, B
                                           ; #	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
                                           ;	.line	783; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == '\n') {
00363c   5d27     subwf   0x27, 0, 0x1     	SUBWF	_txlen, W, B
00363e   e201     bc      0x3642           	BC	_10806_DS_
                                           ; removed redundant BANKSEL
003640   2b27     incf    0x27, 0x1, 0x1   	INCF	_txlen, F, B
                                           _10806_DS_:
003642   5000     movf    0, 0, 0          	MOVF	r0x00, W
003644   0a0a     xorlw   0xa              	XORLW	0x0a
003646   e10f     bnz     0x3666           	BNZ	_00810_DS_
                                           _00820_DS_:
003648   010a     movlb   0xa              	BANKSEL	_txlen
                                           ;	.line	784; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSend(txbuf, txlen);
00364a   5127     movf    0x27, 0, 0x1     	MOVF	_txlen, W, B
00364c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00364e   0e80     movlw   0x80             	MOVLW	0x80
003650   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003652   0e0f     movlw   0xf              	MOVLW	HIGH(_txbuf)
003654   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003656   0e00     movlw   0                	MOVLW	LOW(_txbuf)
003658   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00365a   ec33     call    0x2666, 0        	CALL	_fraiseSend
00365c   f013
00365e   0e04     movlw   0x4              	MOVLW	0x04
003660   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003662   010a     movlb   0xa              	BANKSEL	_txlen
                                           ;	.line	785; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	txlen = 0;
003664   6b27     clrf    0x27, 0x1        	CLRF	_txlen, B
                                           _00810_DS_:
003666   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003668   f002
00366a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00366c   f001
00366e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003670   f000
003672   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseService	code
                                           _fraiseService:
                                           ;	.line	696; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseService(void)
00211e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002120   ffe5
002122   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002124   ffe5
002126   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002128   ffe5
00212a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00212c   ffe5
00212e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002130   ffe5
002132   010a     movlb   0xa              	BANKSEL	_FrRXout
                                           ;	.line	700; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXout != FrRXin) //FraiseStatus.RX_FULL
002134   5150     movf    0x50, 0, 0x1     	MOVF	_FrRXout, W, B
002136   010a     movlb   0xa              	BANKSEL	_FrRXin
002138   194f     xorwf   0x4f, 0, 0x1     	XORWF	_FrRXin, W, B
00213a   e101     bnz     0x213e           	BNZ	_00784_DS_
00213c   d05c     bra     0x21f6           	BRA	_00730_DS_
                                           _00784_DS_:
                                           ;	.line	702; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = FrRXout;
00213e   ca50     movff   0xa50, 0         	MOVFF	_FrRXout, r0x00
002140   f000
                                           ;	.line	703; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c += 1;
002142   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
                                           ;	.line	704; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c %= sizeof(FrRXbuf);
002144   9e00     bcf     0, 0x7, 0        	BCF	r0x00, 7
                                           ;	.line	705; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len = FrRXbuf[c];
002146   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
002148   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00214a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00214c   6a02     clrf    0x2, 0           	CLRF	r0x02
00214e   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
002150   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002152   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002154   ffe9
002156   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002158   ffea
00215a   cfef     movff   0xfef, 0xa5a     	MOVFF	INDF0, _FrRXout_len
00215c   fa5a
                                           ;	.line	706; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len &= 31;
00215e   0e1f     movlw   0x1f             	MOVLW	0x1f
002160   010a     movlb   0xa              	BANKSEL	_FrRXout_len
002162   175a     andwf   0x5a, 0x1, 0x1   	ANDWF	_FrRXout_len, F, B
                                           ;	.line	708; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end = FrRXout;
002164   ca50     movff   0xa50, 0xa59     	MOVFF	_FrRXout, _FrRXout_end
002166   fa59
                                           ; removed redundant BANKSEL
                                           ;	.line	709; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end += FrRXout_len;
002168   515a     movf    0x5a, 0, 0x1     	MOVF	_FrRXout_len, W, B
00216a   010a     movlb   0xa              	BANKSEL	_FrRXout_end
00216c   2759     addwf   0x59, 0x1, 0x1   	ADDWF	_FrRXout_end, F, B
                                           ;	.line	710; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end += 2;
00216e   2b59     incf    0x59, 0x1, 0x1   	INCF	_FrRXout_end, F, B
002170   2b59     incf    0x59, 0x1, 0x1   	INCF	_FrRXout_end, F, B
                                           ;	.line	711; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end %= sizeof(FrRXbuf);
002172   9f59     bcf     0x59, 0x7, 0x1   	BCF	_FrRXout_end, 7, B
                                           ;	.line	713; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	isbroadcast = (fraiseGetChar() == 0);
002174   ec95     call    0x372a, 0        	CALL	_fraiseGetChar
002176   f01b
002178   6e01     movwf   0x1, 0           	MOVWF	r0x01
00217a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00217c   e103     bnz     0x2184           	BNZ	_00788_DS_
00217e   6a01     clrf    0x1, 0           	CLRF	r0x01
002180   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
002182   d001     bra     0x2186           	BRA	_00789_DS_
                                           _00788_DS_:
002184   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00789_DS_:
                                           ;	.line	714; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len = fraiseGetChar();
002186   ec95     call    0x372a, 0        	CALL	_fraiseGetChar
002188   f01b
00218a   010a     movlb   0xa              	BANKSEL	_FrRXout_len
00218c   6f5a     movwf   0x5a, 0x1        	MOVWF	_FrRXout_len, B
                                           ;	.line	715; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	ischar = FrRXout_len & 128;
00218e   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
002190   155a     andwf   0x5a, 0, 0x1     	ANDWF	_FrRXout_len, W, B
002192   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	717; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!(FrRXout_len &= 31)){ //packet error
002194   0e1f     movlw   0x1f             	MOVLW	0x1f
                                           ; removed redundant BANKSEL
002196   155a     andwf   0x5a, 0, 0x1     	ANDWF	_FrRXout_len, W, B
002198   6e03     movwf   0x3, 0           	MOVWF	r0x03
00219a   c003     movff   0x3, 0x4         	MOVFF	r0x03, r0x04
00219c   f004
00219e   c003     movff   0x3, 0xa5a       	MOVFF	r0x03, _FrRXout_len
0021a0   fa5a
0021a2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0021a4   e103     bnz     0x21ac           	BNZ	_00709_DS_
                                           ;	.line	718; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout = FrRXin;
0021a6   ca4f     movff   0xa4f, 0xa50     	MOVFF	_FrRXin, _FrRXout
0021a8   fa50
                                           ;	.line	719; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0021aa   d038     bra     0x221c           	BRA	_00739_DS_
                                           _00709_DS_:
                                           ;	.line	722; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(isbroadcast) //Broadcast packet
0021ac   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0021ae   e01b     bz      0x21e6           	BZ	_00726_DS_
                                           ;	.line	724; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(ischar){
0021b0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0021b2   e01f     bz      0x21f2           	BZ	_00728_DS_
                                           ;	.line	725; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetChar();
0021b4   ec95     call    0x372a, 0        	CALL	_fraiseGetChar
0021b6   f01b
0021b8   6e00     movwf   0, 0             	MOVWF	r0x00
0021ba   010a     movlb   0xa              	BANKSEL	_FrRXout_len
                                           ;	.line	726; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len -= 1;
0021bc   075a     decf    0x5a, 0x1, 0x1   	DECF	_FrRXout_len, F, B
                                           ;	.line	727; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if     (c == 'B') {
0021be   5000     movf    0, 0, 0          	MOVF	r0x00, W
0021c0   0a42     xorlw   0x42             	XORLW	0x42
0021c2   e017     bz      0x21f2           	BZ	_00728_DS_
                                           ;	.line	732; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'N') Assign();		/* assign to id if name matchs */
0021c4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0021c6   0a4e     xorlw   0x4e             	XORLW	0x4e
0021c8   e103     bnz     0x21d0           	BNZ	_00716_DS_
0021ca   ec68     call    0x30d0, 0        	CALL	_Assign
0021cc   f018
0021ce   d011     bra     0x21f2           	BRA	_00728_DS_
                                           _00716_DS_:
                                           ;	.line	733; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'F') ResetToBld();	/* goto Fraisebootloader if name matchs */
0021d0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0021d2   0a46     xorlw   0x46             	XORLW	0x46
0021d4   e103     bnz     0x21dc           	BNZ	_00713_DS_
0021d6   ec9e     call    0x3d3c, 0        	CALL	_ResetToBld
0021d8   f01e
0021da   d00b     bra     0x21f2           	BRA	_00728_DS_
                                           _00713_DS_:
                                           ;	.line	734; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'I') __asm reset __endasm; //init
0021dc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0021de   0a49     xorlw   0x49             	XORLW	0x49
0021e0   e108     bnz     0x21f2           	BNZ	_00728_DS_
                                           _00799_DS_:
0021e2   00ff     reset                    	reset	
0021e4   d006     bra     0x21f2           	BRA	_00728_DS_
                                           _00726_DS_:
                                           ;	.line	746; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_first = FrRXout;
0021e6   ca50     movff   0xa50, 0xa5b     	MOVFF	_FrRXout, _FrRXout_first
0021e8   fa5b
                                           ; #	MOVF	r0x02, W
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00728_DS_
                                           ; #	CALL	_fraiseReceiveChar
                                           ; #	MOVFF	_FrRXout_end, _FrRXout
                                           ;	.line	747; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) {
0021ea   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ;	.line	749; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseReceiveChar();
0021ec   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
                                           ;	.line	760; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout = FrRXout_end;
0021ee   ecaa     call    0x3354, 0        	CALL	_fraiseReceiveChar
0021f0   f019
                                           _00728_DS_:
0021f2   ca59     movff   0xa59, 0xa50     	MOVFF	_FrRXout_end, _FrRXout
0021f4   fa50
                                           _00730_DS_:
0021f6   010a     movlb   0xa              	BANKSEL	_FrTXin
                                           ;	.line	763; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if((!FrTXempty) && (!FrTXpacket_len)) { // if there is sth to send to master and nothing in TXpacket :
0021f8   5122     movf    0x22, 0, 0x1     	MOVF	_FrTXin, W, B
0021fa   010a     movlb   0xa              	BANKSEL	_FrTXout
0021fc   1923     xorwf   0x23, 0, 0x1     	XORWF	_FrTXout, W, B
0021fe   e006     bz      0x220c           	BZ	_00736_DS_
                                           _00801_DS_:
002200   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
002202   5151     movf    0x51, 0, 0x1     	MOVF	_FrTXpacket_len, W, B
002204   e103     bnz     0x220c           	BNZ	_00736_DS_
                                           ;	.line	764; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseDecodeNextTXPacket();
002206   eca3     call    0x2346, 0        	CALL	_fraiseDecodeNextTXPacket
002208   f011
00220a   d008     bra     0x221c           	BRA	_00739_DS_
                                           _00736_DS_:
                                           ;	.line	766; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(Serial_Is_Driver() && (!FrTXpacket_len) && TXSTAxbits.TRMT)// security:
00220c   b094     btfsc   0x94, 0, 0       	BTFSC	_TRISCbits, 0
00220e   d006     bra     0x221c           	BRA	_00739_DS_
002210   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
002212   5151     movf    0x51, 0, 0x1     	MOVF	_FrTXpacket_len, W, B
                                           ;	.line	767; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
002214   e103     bnz     0x221c           	BNZ	_00739_DS_
                                           ; #	GOTO	_00739_DS_
                                           ; #	BTFSS	_TXSTAbits, 1
                                           ; #	GOTO	_00739_DS_
                                           ; #	CALL	_Serial_Init_Receiver
                                           ; #; info ==> [localregs] exit begin
                                           
                                           ; #	MOVFF	PREINC1, r0x04
                                           ;	.line	769; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;	
002216   b2ac     btfsc   0xac, 0x1, 0     	BTFSC	_TXSTAbits, 1
002218   ec6a     call    0x3cd4, 0        	CALL	_Serial_Init_Receiver
00221a   f01e
                                           _00739_DS_:
00221c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00221e   f004
002220   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002222   f003
002224   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002226   f002
002228   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00222a   f001
00222c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00222e   f000
002230   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__ResetToBld	code
                                           _ResetToBld:
                                           ;	.line	682; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static void ResetToBld() //"F" command
003d3c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003d3e   ffe5
                                           ;	.line	685; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(CompareName()) {
003d40   ec9b     call    0x3536, 0        	CALL	_CompareName
003d42   f01a
003d44   6e00     movwf   0, 0             	MOVWF	r0x00
003d46   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ;	.line	687; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
003d48   e101     bnz     0x3d4c           	BNZ	_00703_DS_
                                           _00702_DS_:
003d4a   00ff     reset                    	reset	
                                           _00703_DS_:
003d4c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003d4e   f000
003d50   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__Assign	code
                                           _Assign:
                                           ;	.line	664; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static void Assign() //"N" command
0030d0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0030d2   ffe5
0030d4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0030d6   ffe5
0030d8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0030da   ffe5
                                           ;	.line	667; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetChar();
0030dc   ec95     call    0x372a, 0        	CALL	_fraiseGetChar
0030de   f01b
0030e0   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	668; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c2 = fraiseGetChar();
0030e2   ec95     call    0x372a, 0        	CALL	_fraiseGetChar
0030e4   f01b
0030e6   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           ;	.line	669; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c -= '0'; if (c > 9) c -= 'A' - '9' - 1;
0030e8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0030ea   6e02     movwf   0x2, 0           	MOVWF	r0x02
0030ec   0ed0     movlw   0xd0             	MOVLW	0xd0
0030ee   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
0030f0   6e00     movwf   0, 0             	MOVWF	r0x00
0030f2   0e0a     movlw   0xa              	MOVLW	0x0a
0030f4   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0030f6   e305     bnc     0x3102           	BNC	_00671_DS_
0030f8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0030fa   6e02     movwf   0x2, 0           	MOVWF	r0x02
0030fc   0ef9     movlw   0xf9             	MOVLW	0xf9
0030fe   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
003100   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _00671_DS_:
                                           ;	.line	670; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c2 -= '0'; if (c2 > 9) c2 -= 'A' - '9' - 1;
003102   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003104   6e02     movwf   0x2, 0           	MOVWF	r0x02
003106   0ed0     movlw   0xd0             	MOVLW	0xd0
003108   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
00310a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00310c   0e0a     movlw   0xa              	MOVLW	0x0a
00310e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
003110   e305     bnc     0x311c           	BNC	_00673_DS_
003112   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003114   6e02     movwf   0x2, 0           	MOVWF	r0x02
003116   0ef9     movlw   0xf9             	MOVLW	0xf9
003118   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
00311a   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           _00673_DS_:
                                           ;	.line	671; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if((c > 7) || (c2 > 15)) { // bad id... discard
00311c   0e08     movlw   0x8              	MOVLW	0x08
00311e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003120   e212     bc      0x3146           	BC	_00679_DS_
003122   0e10     movlw   0x10             	MOVLW	0x10
                                           ; #	SUBWF	r0x01, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00675_DS_
                                           ; #	GOTO	_00679_DS_
                                           ; #	SWAPF	r0x00, W
                                           ;	.line	672; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return; 
003124   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           ;	.line	674; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	tmpid = c2 + (c << 4);
003126   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
                                           _00674_DS_:
003128   d00e     bra     0x3146           	BRA	_00679_DS_
00312a   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
00312c   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00312e   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
003130   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	676; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(CompareName()) return;
003132   ec9b     call    0x3536, 0        	CALL	_CompareName
003134   f01a
003136   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00678_DS_
                                           ; #	GOTO	_00679_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	678; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSetID(tmpid);
003138   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00313a   e105     bnz     0x3146           	BNZ	_00679_DS_
00313c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00313e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003140   ec2d     call    0x3a5a, 0        	CALL	_fraiseSetID
003142   f01d
003144   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00679_DS_:
                                           ;	.line	679; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
003146   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003148   f002
00314a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00314c   f001
00314e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003150   f000
003152   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__CompareName	code
                                           _CompareName:
                                           ;	.line	632; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static char CompareName() 
003536   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003538   ffe5
00353a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00353c   ffe5
00353e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003540   ffe5
                                           ;	.line	636; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	eei = EE_PREFIX;
003542   0e01     movlw   0x1              	MOVLW	0x01
003544   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _00636_DS_:
                                           ;	.line	637; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(c = fraiseGetChar()){
003546   ec95     call    0x372a, 0        	CALL	_fraiseGetChar
003548   f01b
00354a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00354c   c001     movff   0x1, 0x2         	MOVFF	r0x01, r0x02
00354e   f002
003550   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003552   e023     bz      0x359a           	BZ	_00638_DS_
                                           ;	.line	638; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c2 = eeReadByte(eei);
003554   5000     movf    0, 0, 0          	MOVF	r0x00, W
003556   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003558   ec5c     call    0x3cb8, 0        	CALL	_eeReadByte
00355a   f01e
00355c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00355e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	639; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c2 == 0) { //end of string
003560   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003562   e110     bnz     0x3584           	BNZ	_00631_DS_
                                           ;	.line	640; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(eei < EE_NAME) { //end of prefix
003564   0e0a     movlw   0xa              	MOVLW	0x0a
003566   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003568   e20b     bc      0x3580           	BC	_00628_DS_
                                           ; #	MOVLW	0x0a
                                           ; #	MOVWF	r0x00
                                           ; #	MOVLW	0x0a
                                           ;	.line	641; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	eei = EE_NAME; //goto to name first char
00356a   0e0a     movlw   0xa              	MOVLW	0x0a
                                           ;	.line	642; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c2 = eeReadByte(eei);
00356c   6e00     movwf   0, 0             	MOVWF	r0x00
00356e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003570   ec5c     call    0x3cb8, 0        	CALL	_eeReadByte
003572   f01e
003574   6e01     movwf   0x1, 0           	MOVWF	r0x01
003576   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	643; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c2 == 0) { //no name?!
003578   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00357a   e104     bnz     0x3584           	BNZ	_00631_DS_
                                           ;	.line	644; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return -1; 
00357c   68e8     setf    0xe8, 0          	SETF	WREG
00357e   d00e     bra     0x359c           	BRA	_00639_DS_
                                           _00628_DS_:
                                           ;	.line	648; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return -1; 
003580   68e8     setf    0xe8, 0          	SETF	WREG
003582   d00c     bra     0x359c           	BRA	_00639_DS_
                                           _00631_DS_:
                                           ;	.line	651; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c2 != c) { //spelled name differs from device name; discard.
003584   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003586   1802     xorwf   0x2, 0, 0        	XORWF	r0x02, W
003588   e002     bz      0x358e           	BZ	_00633_DS_
                                           ;	.line	652; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return -1; 
00358a   68e8     setf    0xe8, 0          	SETF	WREG
00358c   d007     bra     0x359c           	BRA	_00639_DS_
                                           _00633_DS_:
                                           ;	.line	654; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	eei++;
00358e   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
                                           ;	.line	655; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(eei > EE_NAMEMAX) { //spelled name too long; discard.
003590   0e1b     movlw   0x1b             	MOVLW	0x1b
003592   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003594   e3d8     bnc     0x3546           	BNC	_00636_DS_
                                           ;	.line	656; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return -1;
003596   68e8     setf    0xe8, 0          	SETF	WREG
003598   d001     bra     0x359c           	BRA	_00639_DS_
                                           _00638_DS_:
                                           ;	.line	660; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return 0;
00359a   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00639_DS_:
00359c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00359e   f002
0035a0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0035a2   f001
0035a4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0035a6   f000
0035a8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSendCopy	code
                                           _fraiseSendCopy:
                                           ;	.line	614; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSendCopy()
002dce   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002dd0   ffe5
002dd2   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002dd4   ffe5
002dd6   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002dd8   ffe5
002dda   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002ddc   ffe5
                                           ;	.line	618; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	l = (FrRXout - FrRXout_first)%sizeof(FrRXbuf);
002dde   ca50     movff   0xa50, 0         	MOVFF	_FrRXout, r0x00
002de0   f000
002de2   6a01     clrf    0x1, 0           	CLRF	r0x01
002de4   ca5b     movff   0xa5b, 0x2       	MOVFF	_FrRXout_first, r0x02
002de6   f002
002de8   6a03     clrf    0x3, 0           	CLRF	r0x03
002dea   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002dec   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
002dee   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002df0   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
002df2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002df4   0e80     movlw   0x80             	MOVLW	0x80
002df6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002df8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002dfa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002dfc   5000     movf    0, 0, 0          	MOVF	r0x00, W
002dfe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002e00   ec25     call    0x284a, 0        	CALL	__modsint
002e02   f014
002e04   6e00     movwf   0, 0             	MOVWF	r0x00
002e06   0e04     movlw   0x4              	MOVLW	0x04
002e08   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	619; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	l--;
002e0a   0600     decf    0, 0x1, 0        	DECF	r0x00, F
                                           ;	.line	620; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	i = FrRXout_first;
002e0c   ca5b     movff   0xa5b, 0x1       	MOVFF	_FrRXout_first, r0x01
002e0e   f001
                                           ;	.line	621; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	putchar('C'); putchar(' '); 
002e10   0e43     movlw   0x43             	MOVLW	0x43
002e12   ec09     call    0x3612, 0        	CALL	_putchar
002e14   f01b
002e16   0e20     movlw   0x20             	MOVLW	0x20
002e18   ec09     call    0x3612, 0        	CALL	_putchar
002e1a   f01b
                                           _00604_DS_:
                                           ;	.line	623; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(l > 0) {
002e1c   5000     movf    0, 0, 0          	MOVF	r0x00, W
002e1e   e020     bz      0x2e60           	BZ	_00607_DS_
                                           ;	.line	624; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	printf("%d ", FrRXbuf[i]);
002e20   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
002e22   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002e24   6e02     movwf   0x2, 0           	MOVWF	r0x02
002e26   6a03     clrf    0x3, 0           	CLRF	r0x03
002e28   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
002e2a   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
002e2c   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
002e2e   ffe9
002e30   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
002e32   ffea
002e34   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
002e36   f002
002e38   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002e3a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002e3c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002e3e   0e00     movlw   0                	MOVLW	UPPER(___str_0)
002e40   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002e42   0e3c     movlw   0x3c             	MOVLW	HIGH(___str_0)
002e44   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002e46   0eec     movlw   0xec             	MOVLW	LOW(___str_0)
002e48   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002e4a   ec2b     call    0x3256, 0        	CALL	_printf
002e4c   f019
002e4e   0e05     movlw   0x5              	MOVLW	0x05
002e50   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	625; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	i++;
002e52   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
                                           ;	.line	626; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(i == sizeof(FrRXbuf)) i = 0;
002e54   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002e56   0a80     xorlw   0x80             	XORLW	0x80
002e58   e101     bnz     0x2e5c           	BNZ	_00603_DS_
002e5a   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00603_DS_:
                                           ;	.line	627; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	l--;
002e5c   0600     decf    0, 0x1, 0        	DECF	r0x00, F
002e5e   d7de     bra     0x2e1c           	BRA	_00604_DS_
                                           _00607_DS_:
002e60   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002e62   f003
002e64   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002e66   f002
002e68   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002e6a   f001
002e6c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002e6e   f000
002e70   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetAt	code
                                           _fraiseGetAt:
                                           ;	.line	609; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	unsigned char fraiseGetAt(unsigned char i)
0034c0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0034c2   ffe5
0034c4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0034c6   ffd9
0034c8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0034ca   ffe5
0034cc   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0034ce   ffe5
0034d0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0034d2   ffe5
0034d4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0034d6   ffe5
0034d8   0e02     movlw   0x2              	MOVLW	0x02
0034da   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0034dc   f000
                                           ;	.line	611; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return FrRXbuf[(i + FrRXout_first)%sizeof(FrRXbuf)];
0034de   6a01     clrf    0x1, 0           	CLRF	r0x01
0034e0   ca5b     movff   0xa5b, 0x2       	MOVFF	_FrRXout_first, r0x02
0034e2   f002
0034e4   6a03     clrf    0x3, 0           	CLRF	r0x03
0034e6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0034e8   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0034ea   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0034ec   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0034ee   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0034f0   0e80     movlw   0x80             	MOVLW	0x80
0034f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0034f4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0034f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0034f8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0034fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0034fc   ec25     call    0x284a, 0        	CALL	__modsint
0034fe   f014
003500   6e00     movwf   0, 0             	MOVWF	r0x00
003502   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003504   f001
003506   0e04     movlw   0x4              	MOVLW	0x04
003508   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00350a   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
00350c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00350e   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
003510   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003512   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003514   ffe9
003516   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
003518   ffea
00351a   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
00351c   f000
00351e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003520   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003522   f003
003524   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003526   f002
003528   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00352a   f001
00352c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00352e   f000
003530   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003532   ffd9
003534   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetIndex	code
                                           _fraiseGetIndex:
003de8   010a     movlb   0xa              	BANKSEL	_FrRXout
                                           ;	.line	606; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return FrRXout;
003dea   5150     movf    0x50, 0, 0x1     	MOVF	_FrRXout, W, B
003dec   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetLen	code
                                           _fraiseGetLen:
003dee   010a     movlb   0xa              	BANKSEL	_FrRXout_len
                                           ;	.line	601; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return FrRXout_len;
003df0   515a     movf    0x5a, 0, 0x1     	MOVF	_FrRXout_len, W, B
003df2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraisePeekChar	code
                                           _fraisePeekChar:
                                           ;	.line	594; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	unsigned char fraisePeekChar()
003aba   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003abc   ffe5
003abe   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003ac0   ffe5
                                           ;	.line	596; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return FrRXbuf[FrRXout];
003ac2   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
003ac4   010a     movlb   0xa              	BANKSEL	_FrRXout
003ac6   2550     addwf   0x50, 0, 0x1     	ADDWF	_FrRXout, W, B
003ac8   6e00     movwf   0, 0             	MOVWF	r0x00
003aca   6a01     clrf    0x1, 0           	CLRF	r0x01
003acc   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
003ace   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003ad0   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003ad2   ffe9
003ad4   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
003ad6   ffea
003ad8   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
003ada   f000
003adc   5000     movf    0, 0, 0          	MOVF	r0x00, W
003ade   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003ae0   f001
003ae2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003ae4   f000
003ae6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetChar	code
                                           _fraiseGetChar:
                                           ;	.line	584; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	unsigned char fraiseGetChar()
00372a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00372c   ffe5
00372e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003730   ffe5
003732   010a     movlb   0xa              	BANKSEL	_FrRXout
                                           ;	.line	588; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if((FrRXout == FrRXout_end) || (FrRXout == FrRXin)) return 0; //underflow error
003734   5150     movf    0x50, 0, 0x1     	MOVF	_FrRXout, W, B
003736   010a     movlb   0xa              	BANKSEL	_FrRXout_end
003738   1959     xorwf   0x59, 0, 0x1     	XORWF	_FrRXout_end, W, B
00373a   e005     bz      0x3746           	BZ	_00559_DS_
                                           _00573_DS_:
00373c   010a     movlb   0xa              	BANKSEL	_FrRXout
00373e   5150     movf    0x50, 0, 0x1     	MOVF	_FrRXout, W, B
003740   010a     movlb   0xa              	BANKSEL	_FrRXin
003742   194f     xorwf   0x4f, 0, 0x1     	XORWF	_FrRXin, W, B
003744   e102     bnz     0x374a           	BNZ	_00560_DS_
                                           _00559_DS_:
003746   6ae8     clrf    0xe8, 0          	CLRF	WREG
003748   d015     bra     0x3774           	BRA	_00564_DS_
                                           _00560_DS_:
                                           ;	.line	589; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = FrRXbuf[FrRXout++];
00374a   ca50     movff   0xa50, 0         	MOVFF	_FrRXout, r0x00
00374c   f000
00374e   010a     movlb   0xa              	BANKSEL	_FrRXout
003750   2b50     incf    0x50, 0x1, 0x1   	INCF	_FrRXout, F, B
003752   6a01     clrf    0x1, 0           	CLRF	r0x01
003754   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
003756   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003758   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
00375a   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00375c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00375e   ffe9
003760   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
003762   ffea
003764   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
003766   f000
                                           ; removed redundant BANKSEL
                                           ;	.line	590; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXout == sizeof(FrRXbuf)) FrRXout = 0;
003768   5150     movf    0x50, 0, 0x1     	MOVF	_FrRXout, W, B
00376a   0a80     xorlw   0x80             	XORLW	0x80
00376c   e102     bnz     0x3772           	BNZ	_00563_DS_
                                           _00577_DS_:
00376e   010a     movlb   0xa              	BANKSEL	_FrRXout
003770   6b50     clrf    0x50, 0x1        	CLRF	_FrRXout, B
                                           _00563_DS_:
                                           ;	.line	591; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return c;
003772   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           _00564_DS_:
003774   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003776   f001
003778   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00377a   f000
00377c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseISR	code
                                           _fraiseISR:
                                           ;	.line	467; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseISR(void)
0018d2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0018d4   ffe5
0018d6   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0018d8   ffe5
                                           ; #	MOVF	_FrInterruptEnabled, W, B
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00391_DS_
                                           ; #	GOTO	_00457_DS_
                                           ; #	BTFSS	_PIE1bits, 4
0018da   010a     movlb   0xa              	BANKSEL	_FrInterruptEnabled
                                           ;	.line	471; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrInterruptEnabled == 0) return;
0018dc   5125     movf    0x25, 0, 0x1     	MOVF	_FrInterruptEnabled, W, B
                                           ;	.line	473; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(TXxIE && TXxIF) {
0018de   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
0018e0   d0f7     bra     0x1ad0           	BRA	_00457_DS_
0018e2   a89d     btfss   0x9d, 0x4, 0     	BTFSS	_PIE1bits, 4
0018e4   d01d     bra     0x1920           	BRA	_00395_DS_
0018e6   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
0018e8   d01b     bra     0x1920           	BRA	_00395_DS_
0018ea   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
                                           ;	.line	474; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrTXpacket_i == FrTXpacket_len) { //if end of the packet:
0018ec   5154     movf    0x54, 0, 0x1     	MOVF	_FrTXpacket_i, W, B
0018ee   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
0018f0   1951     xorwf   0x51, 0, 0x1     	XORWF	_FrTXpacket_len, W, B
0018f2   e105     bnz     0x18fe           	BNZ	_00393_DS_
                                           ;	.line	475; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0018f4   ec6a     call    0x3cd4, 0        	CALL	_Serial_Init_Receiver
0018f6   f01e
0018f8   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
                                           ;	.line	476; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXpacket_len = 0;
0018fa   6b51     clrf    0x51, 0x1        	CLRF	_FrTXpacket_len, B
                                           ;	.line	477; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0018fc   d0e9     bra     0x1ad0           	BRA	_00457_DS_
                                           _00393_DS_:
                                           ;	.line	479; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = FrTXpacket[FrTXpacket_i];
0018fe   0e00     movlw   0                	MOVLW	LOW(_FrTXpacket)
001900   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
001902   2554     addwf   0x54, 0, 0x1     	ADDWF	_FrTXpacket_i, W, B
001904   6e00     movwf   0, 0             	MOVWF	r0x00
001906   6a01     clrf    0x1, 0           	CLRF	r0x01
001908   0e04     movlw   0x4              	MOVLW	HIGH(_FrTXpacket)
00190a   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00190c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00190e   ffe9
001910   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001912   ffea
001914   cfef     movff   0xfef, 0xa4d     	MOVFF	INDF0, _fraiseISR_c_1_112
001916   fa4d
                                           ; removed redundant BANKSEL
                                           ;	.line	480; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXpacket_i++;
001918   2b54     incf    0x54, 0x1, 0x1   	INCF	_FrTXpacket_i, F, B
                                           ;	.line	481; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = c; // send next byte
00191a   ca4d     movff   0xa4d, 0xfad     	MOVFF	_fraiseISR_c_1_112, _TXREG
00191c   ffad
                                           ;	.line	483; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
00191e   d0d8     bra     0x1ad0           	BRA	_00457_DS_
                                           _00395_DS_:
                                           ;	.line	486; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(RCxIE && RCxIF) {
001920   aa9d     btfss   0x9d, 0x5, 0     	BTFSS	_PIE1bits, 5
001922   d0d6     bra     0x1ad0           	BRA	_00457_DS_
001924   aa9e     btfss   0x9e, 0x5, 0     	BTFSS	_PIR1bits, 5
001926   d0d4     bra     0x1ad0           	BRA	_00457_DS_
                                           ;	.line	487; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(RCSTAxbits.OERR){
001928   a2ab     btfss   0xab, 0x1, 0     	BTFSS	_RCSTAbits, 1
00192a   d005     bra     0x1936           	BRA	_00398_DS_
00192c   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	488; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_OERR = 1;
00192e   8152     bsf     0x52, 0, 0x1     	BSF	_FraiseStatus, 0, B
                                           ;	.line	489; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
001930   ec6a     call    0x3cd4, 0        	CALL	_Serial_Init_Receiver
001932   f01e
                                           ;	.line	490; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001934   d0cd     bra     0x1ad0           	BRA	_00457_DS_
                                           _00398_DS_:
                                           ;	.line	492; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(RCSTAxbits.FERR){
001936   a4ab     btfss   0xab, 0x2, 0     	BTFSS	_RCSTAbits, 2
001938   d005     bra     0x1944           	BRA	_00400_DS_
00193a   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	493; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_FERR = 1;
00193c   8352     bsf     0x52, 0x1, 0x1   	BSF	_FraiseStatus, 1, B
                                           ;	.line	494; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
00193e   ec6a     call    0x3cd4, 0        	CALL	_Serial_Init_Receiver
001940   f01e
                                           ;	.line	495; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001942   d0c6     bra     0x1ad0           	BRA	_00457_DS_
                                           _00400_DS_:
                                           ;	.line	498; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if (RCSTAxbits.RX9D) { // -------  address : 
001944   a0ab     btfss   0xab, 0, 0       	BTFSS	_RCSTAbits, 0
001946   d03e     bra     0x19c4           	BRA	_00412_DS_
                                           ;	.line	499; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = RCREGx; // get byte
001948   cfae     movff   0xfae, 0xa4d     	MOVFF	_RCREG, _fraiseISR_c_1_112
00194a   fa4d
                                           ;	.line	500; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == (FrID | 128)) { // poll signal
00194c   0e80     movlw   0x80             	MOVLW	0x80
00194e   010a     movlb   0xa              	BANKSEL	_FrID
001950   1126     iorwf   0x26, 0, 0x1     	IORWF	_FrID, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	_fraiseISR_c_1_112, W, B
                                           ; #	XORWF	r0x00, W
001952   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
001954   194d     xorwf   0x4d, 0, 0x1     	XORWF	_fraiseISR_c_1_112, W, B
001956   e104     bnz     0x1960           	BNZ	_00402_DS_
                                           _00535_DS_:
001958   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	501; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_POLL = 1;
00195a   8952     bsf     0x52, 0x4, 0x1   	BSF	_FraiseStatus, 4, B
                                           ;	.line	502; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 0;
00195c   96ab     bcf     0xab, 0x3, 0     	BCF	_RCSTAbits, 3
                                           ;	.line	503; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
00195e   d0b8     bra     0x1ad0           	BRA	_00457_DS_
                                           _00402_DS_:
001960   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
                                           ;	.line	505; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if ((c == 0) || (c == FrID)) {
001962   514d     movf    0x4d, 0, 0x1     	MOVF	_fraiseISR_c_1_112, W, B
001964   e004     bz      0x196e           	BZ	_00408_DS_
                                           ; removed redundant BANKSEL
001966   514d     movf    0x4d, 0, 0x1     	MOVF	_fraiseISR_c_1_112, W, B
001968   010a     movlb   0xa              	BANKSEL	_FrID
00196a   1926     xorwf   0x26, 0, 0x1     	XORWF	_FrID, W, B
00196c   e127     bnz     0x19bc           	BNZ	_00409_DS_
                                           _00408_DS_:
00196e   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	506; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_POLL = 0;
001970   9952     bcf     0x52, 0x4, 0x1   	BCF	_FraiseStatus, 4, B
                                           ;	.line	507; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 0;
001972   96ab     bcf     0xab, 0x3, 0     	BCF	_RCSTAbits, 3
001974   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
                                           ;	.line	508; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c) FraiseStatus.RX_BRDCST = 0;
001976   514d     movf    0x4d, 0, 0x1     	MOVF	_fraiseISR_c_1_112, W, B
001978   e003     bz      0x1980           	BZ	_00404_DS_
00197a   010a     movlb   0xa              	BANKSEL	_FraiseStatus
00197c   9752     bcf     0x52, 0x3, 0x1   	BCF	_FraiseStatus, 3, B
00197e   d002     bra     0x1984           	BRA	_00405_DS_
                                           _00404_DS_:
001980   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	509; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else FraiseStatus.RX_BRDCST = 1;
001982   8752     bsf     0x52, 0x3, 0x1   	BSF	_FraiseStatus, 3, B
                                           _00405_DS_:
                                           ;	.line	511; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXchksum = c;
001984   ca4d     movff   0xa4d, 0xa56     	MOVFF	_fraiseISR_c_1_112, _FrRXchksum
001986   fa56
                                           ;	.line	512; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_tmp = FrRXin;
001988   ca4f     movff   0xa4f, 0xa57     	MOVFF	_FrRXin, _FrRXin_tmp
00198a   fa57
00198c   010a     movlb   0xa              	BANKSEL	_FrRXin
                                           ;	.line	513; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end = FrRXin - 1; // protect FrRXin_end
00198e   054f     decf    0x4f, 0, 0x1     	DECF	_FrRXin, W, B
001990   010a     movlb   0xa              	BANKSEL	_FrRXin_end
001992   6f58     movwf   0x58, 0x1        	MOVWF	_FrRXin_end, B
                                           ;	.line	514; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXbuf[FrRXin_tmp] = c;
001994   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
001996   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
001998   2557     addwf   0x57, 0, 0x1     	ADDWF	_FrRXin_tmp, W, B
00199a   6e00     movwf   0, 0             	MOVWF	r0x00
00199c   6a01     clrf    0x1, 0           	CLRF	r0x01
00199e   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
0019a0   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0019a2   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0019a4   ffe9
0019a6   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0019a8   ffea
0019aa   ca4d     movff   0xa4d, 0xfef     	MOVFF	_fraiseISR_c_1_112, INDF0
0019ac   ffef
                                           ; removed redundant BANKSEL
                                           ;	.line	515; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_tmp++;
0019ae   2b57     incf    0x57, 0x1, 0x1   	INCF	_FrRXin_tmp, F, B
                                           ;	.line	516; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == sizeof(FrRXbuf)) FrRXin_tmp = 0;
0019b0   5157     movf    0x57, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
0019b2   0a80     xorlw   0x80             	XORLW	0x80
0019b4   e102     bnz     0x19ba           	BNZ	_00407_DS_
                                           _00539_DS_:
0019b6   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
0019b8   6b57     clrf    0x57, 0x1        	CLRF	_FrRXin_tmp, B
                                           _00407_DS_:
                                           ;	.line	517; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0019ba   d08a     bra     0x1ad0           	BRA	_00457_DS_
                                           _00409_DS_:
0019bc   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	519; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_POLL= 0;
0019be   9952     bcf     0x52, 0x4, 0x1   	BCF	_FraiseStatus, 4, B
                                           ;	.line	520; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1;
0019c0   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	521; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0019c2   d086     bra     0x1ad0           	BRA	_00457_DS_
                                           _00412_DS_:
                                           ;	.line	524; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = RCREGx; // get byte
0019c4   cfae     movff   0xfae, 0xa4d     	MOVFF	_RCREG, _fraiseISR_c_1_112
0019c6   fa4d
0019c8   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	525; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FraiseStatus.RX_POLL) { // had a poll signal
0019ca   a952     btfss   0x52, 0x4, 0x1   	BTFSS	_FraiseStatus, 4, B
0019cc   d019     bra     0x1a00           	BRA	_00425_DS_
                                           ;	.line	526; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == (FrID | 128)){ 	// confirmation byte of poll signal:
0019ce   0e80     movlw   0x80             	MOVLW	0x80
0019d0   010a     movlb   0xa              	BANKSEL	_FrID
0019d2   1126     iorwf   0x26, 0, 0x1     	IORWF	_FrID, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	_fraiseISR_c_1_112, W, B
                                           ; #	XORWF	r0x00, W
0019d4   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
0019d6   194d     xorwf   0x4d, 0, 0x1     	XORWF	_fraiseISR_c_1_112, W, B
0019d8   e111     bnz     0x19fc           	BNZ	_00423_DS_
                                           ;	.line	528; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
0019da   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
0019dc   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
0019de   9094     bcf     0x94, 0, 0       	BCF	_TRISCbits, 0
0019e0   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
                                           ;	.line	529; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrTXpacket_len == 0) {
0019e2   5151     movf    0x51, 0, 0x1     	MOVF	_FrTXpacket_len, W, B
0019e4   e104     bnz     0x19ee           	BNZ	_00420_DS_
                                           ;	.line	530; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = 0;
0019e6   6aad     clrf    0xad, 0          	CLRF	_TXREG
                                           ;	.line	531; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0019e8   ec6a     call    0x3cd4, 0        	CALL	_Serial_Init_Receiver
0019ea   f01e
0019ec   d007     bra     0x19fc           	BRA	_00423_DS_
                                           _00420_DS_:
                                           ;	.line	533; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendLaunch();
0019ee   c400     movff   0x400, 0xfad     	MOVFF	_FrTXpacket, _TXREG
0019f0   ffad
0019f2   0e01     movlw   0x1              	MOVLW	0x01
0019f4   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
0019f6   6f54     movwf   0x54, 0x1        	MOVWF	_FrTXpacket_i, B
0019f8   889d     bsf     0x9d, 0x4, 0     	BSF	_PIE1bits, 4
                                           ;	.line	534; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0019fa   d06a     bra     0x1ad0           	BRA	_00457_DS_
                                           _00423_DS_:
                                           ;	.line	537; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1;
0019fc   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	538; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0019fe   d068     bra     0x1ad0           	BRA	_00457_DS_
                                           _00425_DS_:
001a00   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
                                           ;	.line	541; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXchksum += c;
001a02   514d     movf    0x4d, 0, 0x1     	MOVF	_fraiseISR_c_1_112, W, B
001a04   010a     movlb   0xa              	BANKSEL	_FrRXchksum
001a06   2756     addwf   0x56, 0x1, 0x1   	ADDWF	_FrRXchksum, F, B
001a08   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
                                           ;	.line	543; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == FrRXin_end) {// RX packet complete
001a0a   5157     movf    0x57, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
001a0c   010a     movlb   0xa              	BANKSEL	_FrRXin_end
001a0e   1958     xorwf   0x58, 0, 0x1     	XORWF	_FrRXin_end, W, B
001a10   e11b     bnz     0x1a48           	BNZ	_00446_DS_
                                           _00544_DS_:
001a12   010a     movlb   0xa              	BANKSEL	_FrRXchksum
                                           ;	.line	544; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!FrRXchksum) { // RX packet checksum ok 
001a14   5156     movf    0x56, 0, 0x1     	MOVF	_FrRXchksum, W, B
001a16   e10c     bnz     0x1a30           	BNZ	_00443_DS_
                                           ;	.line	545; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin = FrRXin_tmp; //validation of packet
001a18   ca57     movff   0xa57, 0xa4f     	MOVFF	_FrRXin_tmp, _FrRXin
001a1a   fa4f
001a1c   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	546; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!FraiseStatus.RX_BRDCST){
001a1e   b752     btfsc   0x52, 0x3, 0x1   	BTFSC	_FraiseStatus, 3, B
001a20   d012     bra     0x1a46           	BRA	_00444_DS_
                                           ;	.line	547; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
001a22   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
001a24   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
001a26   9094     bcf     0x94, 0, 0       	BCF	_TRISCbits, 0
                                           ;	.line	548; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = 0; //Acknowldge
001a28   6aad     clrf    0xad, 0          	CLRF	_TXREG
                                           ;	.line	549; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
001a2a   ec6a     call    0x3cd4, 0        	CALL	_Serial_Init_Receiver
001a2c   f01e
001a2e   d00b     bra     0x1a46           	BRA	_00444_DS_
                                           _00443_DS_:
001a30   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	553; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_SERR = 1;
001a32   8552     bsf     0x52, 0x2, 0x1   	BSF	_FraiseStatus, 2, B
                                           ;	.line	554; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!FraiseStatus.RX_BRDCST){
001a34   b752     btfsc   0x52, 0x3, 0x1   	BTFSC	_FraiseStatus, 3, B
001a36   d007     bra     0x1a46           	BRA	_00444_DS_
                                           ;	.line	555; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
001a38   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
001a3a   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
001a3c   9094     bcf     0x94, 0, 0       	BCF	_TRISCbits, 0
                                           ;	.line	556; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = 1; //Checksum nack
001a3e   0e01     movlw   0x1              	MOVLW	0x01
001a40   6ead     movwf   0xad, 0          	MOVWF	_TXREG
                                           ;	.line	557; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
001a42   ec6a     call    0x3cd4, 0        	CALL	_Serial_Init_Receiver
001a44   f01e
                                           _00444_DS_:
                                           ;	.line	560; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001a46   d044     bra     0x1ad0           	BRA	_00457_DS_
                                           _00446_DS_:
001a48   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
                                           ;	.line	563; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if((FrRXin_tmp == FrRXout)&&(FrRXout != FrRXin)) { //collision case : RX buffer full !
001a4a   5157     movf    0x57, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
001a4c   010a     movlb   0xa              	BANKSEL	_FrRXout
001a4e   1950     xorwf   0x50, 0, 0x1     	XORWF	_FrRXout, W, B
001a50   e108     bnz     0x1a62           	BNZ	_00448_DS_
                                           _00546_DS_:
001a52   010a     movlb   0xa              	BANKSEL	_FrRXout
001a54   5150     movf    0x50, 0, 0x1     	MOVF	_FrRXout, W, B
001a56   010a     movlb   0xa              	BANKSEL	_FrRXin
001a58   194f     xorwf   0x4f, 0, 0x1     	XORWF	_FrRXin, W, B
001a5a   e003     bz      0x1a62           	BZ	_00448_DS_
                                           ;	.line	564; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver(); // discard current packet... TODO:send an buffer full nack (2)
001a5c   ec6a     call    0x3cd4, 0        	CALL	_Serial_Init_Receiver
001a5e   f01e
                                           ;	.line	565; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001a60   d037     bra     0x1ad0           	BRA	_00457_DS_
                                           _00448_DS_:
                                           ;	.line	568; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c2 = (FrRXin + 1) % sizeof(FrRXbuf);
001a62   ca4f     movff   0xa4f, 0         	MOVFF	_FrRXin, r0x00
001a64   f000
001a66   6a01     clrf    0x1, 0           	CLRF	r0x01
001a68   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
001a6a   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
001a6c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
001a6e   0e80     movlw   0x80             	MOVLW	0x80
001a70   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a72   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001a74   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a76   5000     movf    0, 0, 0          	MOVF	r0x00, W
001a78   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a7a   ec25     call    0x284a, 0        	CALL	__modsint
001a7c   f014
001a7e   6e00     movwf   0, 0             	MOVWF	r0x00
001a80   0e04     movlw   0x4              	MOVLW	0x04
001a82   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001a84   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; #	MOVWF	_fraiseISR_c2_1_112, B
                                           ; #	MOVF	_FrRXin_tmp, W, B
                                           ; #	XORWF	_fraiseISR_c2_1_112, W, B
001a86   010a     movlb   0xa              	BANKSEL	_fraiseISR_c2_1_112
                                           ;	.line	569; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == c2) { //FrRXin_tmp == (FrRXin + 1): first byte following address = data length...
001a88   6f4e     movwf   0x4e, 0x1        	MOVWF	_fraiseISR_c2_1_112, B
001a8a   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
001a8c   1957     xorwf   0x57, 0, 0x1     	XORWF	_FrRXin_tmp, W, B
001a8e   e10c     bnz     0x1aa8           	BNZ	_00451_DS_
                                           ;	.line	570; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end = (c & 31);
001a90   0e1f     movlw   0x1f             	MOVLW	0x1f
001a92   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
001a94   154d     andwf   0x4d, 0, 0x1     	ANDWF	_fraiseISR_c_1_112, W, B
001a96   010a     movlb   0xa              	BANKSEL	_FrRXin_end
001a98   6f58     movwf   0x58, 0x1        	MOVWF	_FrRXin_end, B
                                           ;	.line	571; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end += 2;
001a9a   2b58     incf    0x58, 0x1, 0x1   	INCF	_FrRXin_end, F, B
001a9c   2b58     incf    0x58, 0x1, 0x1   	INCF	_FrRXin_end, F, B
001a9e   010a     movlb   0xa              	BANKSEL	_FrRXin
                                           ;	.line	572; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end += FrRXin;
001aa0   514f     movf    0x4f, 0, 0x1     	MOVF	_FrRXin, W, B
001aa2   010a     movlb   0xa              	BANKSEL	_FrRXin_end
001aa4   2758     addwf   0x58, 0x1, 0x1   	ADDWF	_FrRXin_end, F, B
                                           ;	.line	573; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end %= sizeof(FrRXbuf);
001aa6   9f58     bcf     0x58, 0x7, 0x1   	BCF	_FrRXin_end, 7, B
                                           _00451_DS_:
                                           ;	.line	576; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXbuf[FrRXin_tmp++] = c;
001aa8   ca57     movff   0xa57, 0         	MOVFF	_FrRXin_tmp, r0x00
001aaa   f000
001aac   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
001aae   2b57     incf    0x57, 0x1, 0x1   	INCF	_FrRXin_tmp, F, B
001ab0   6a01     clrf    0x1, 0           	CLRF	r0x01
001ab2   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
001ab4   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
001ab6   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
001ab8   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
001aba   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001abc   ffe9
001abe   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001ac0   ffea
001ac2   ca4d     movff   0xa4d, 0xfef     	MOVFF	_fraiseISR_c_1_112, INDF0
001ac4   ffef
                                           ; removed redundant BANKSEL
                                           ;	.line	577; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == sizeof(FrRXbuf)) FrRXin_tmp = 0; //ring buffer index
001ac6   5157     movf    0x57, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
001ac8   0a80     xorlw   0x80             	XORLW	0x80
001aca   e102     bnz     0x1ad0           	BNZ	_00457_DS_
                                           _00554_DS_:
001acc   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
001ace   6b57     clrf    0x57, 0x1        	CLRF	_FrRXin_tmp, B
                                           _00457_DS_:
                                           ;	.line	578; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001ad0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
001ad2   f001
001ad4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
001ad6   f000
001ad8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSendBroadcast	code
                                           _fraiseSendBroadcast:
                                           ;	.line	420; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSendBroadcast(const unsigned char *buf, unsigned char len)
002458   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00245a   ffe5
00245c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00245e   ffd9
002460   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002462   ffe5
002464   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002466   ffe5
002468   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00246a   ffe5
00246c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00246e   ffe5
002470   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002472   ffe5
002474   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002476   ffe5
002478   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
00247a   ffe5
00247c   0e02     movlw   0x2              	MOVLW	0x02
00247e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002480   f000
002482   0e03     movlw   0x3              	MOVLW	0x03
002484   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002486   f001
002488   0e04     movlw   0x4              	MOVLW	0x04
00248a   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
00248c   f002
00248e   0e05     movlw   0x5              	MOVLW	0x05
002490   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
002492   f003
                                           ;	.line	422; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	unsigned char i = len;
002494   c003     movff   0x3, 0x4         	MOVFF	r0x03, r0x04
002496   f004
                                           ;	.line	423; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	unsigned char ischar = 0;
002498   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           ; #	MOVF	r0x03, W
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00294_DS_
                                           ; #	GOTO	_00327_DS_
                                           ; #	MOVFF	r0x00, FSR0L
                                           ;	.line	426; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!i) return;
00249a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ;	.line	427; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(*buf == 'C') {
00249c   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
00249e   d04f     bra     0x253e           	BRA	_00327_DS_
0024a0   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0024a2   ffe9
0024a4   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0024a6   fff3
0024a8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0024aa   ec1c     call    0x3c38, 0        	CALL	__gptrget1
0024ac   f01e
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
0024ae   6e06     movwf   0x6, 0           	MOVWF	r0x06
0024b0   0a43     xorlw   0x43             	XORLW	0x43
0024b2   e103     bnz     0x24ba           	BNZ	_00296_DS_
                                           ;	.line	428; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	ischar = 1;
0024b4   0e01     movlw   0x1              	MOVLW	0x01
0024b6   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           ;	.line	429; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	len |= 128;
0024b8   8e03     bsf     0x3, 0x7, 0      	BSF	r0x03, 7
                                           _00296_DS_:
                                           ;	.line	432; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	i--;
0024ba   0604     decf    0x4, 0x1, 0      	DECF	r0x04, F
                                           ;	.line	433; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	buf++;
0024bc   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0024be   e302     bnc     0x24c4           	BNC	_00384_DS_
0024c0   4a01     infsnz  0x1, 0x1, 0      	INFSNZ	r0x01, F
0024c2   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
                                           _00384_DS_:
                                           ;	.line	434; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
0024c4   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
0024c6   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
0024c8   9094     bcf     0x94, 0, 0       	BCF	_TRISCbits, 0
                                           ;	.line	435; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
0024ca   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           _00303_DS_:
                                           ;	.line	437; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(TXxIF == 0);
0024cc   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
0024ce   d7fe     bra     0x24cc           	BRA	_00303_DS_
                                           ;	.line	439; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9D = 1; 	// address byte
0024d0   80ac     bsf     0xac, 0, 0       	BSF	_TXSTAbits, 0
                                           ;	.line	440; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	chksum += (TXREGx = 0);	// adress is null = broadcast
0024d2   6aad     clrf    0xad, 0          	CLRF	_TXREG
0024d4   0000     nop                      	nop	
                                           _00306_DS_:
0024d6   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
0024d8   d7fe     bra     0x24d6           	BRA	_00306_DS_
                                           ;	.line	443; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9D = 0;
0024da   90ac     bcf     0xac, 0, 0       	BCF	_TXSTAbits, 0
                                           ;	.line	445; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	chksum += (TXREGx = len);
0024dc   c003     movff   0x3, 0xfad       	MOVFF	r0x03, _TXREG
0024de   ffad
0024e0   0000     nop                      	nop	
                                           _00309_DS_:
0024e2   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
0024e4   d7fe     bra     0x24e2           	BRA	_00309_DS_
                                           ;	.line	448; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) chksum += (TXREGx = 'B');
0024e6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0024e8   e004     bz      0x24f2           	BZ	_00313_DS_
                                           ; #	MOVLW	0x42
                                           ; #	MOVWF	_TXREG
                                           ; #	MOVLW	0x42
0024ea   0e42     movlw   0x42             	MOVLW	0x42
0024ec   6ead     movwf   0xad, 0          	MOVWF	_TXREG
0024ee   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0024f0   d004     bra     0x24fa           	BRA	_00318_DS_
                                           _00313_DS_:
                                           ;	.line	449; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else chksum += (TXREGx = 'b');
0024f2   0e62     movlw   0x62             	MOVLW	0x62
0024f4   6ead     movwf   0xad, 0          	MOVWF	_TXREG
0024f6   0e62     movlw   0x62             	MOVLW	0x62
0024f8   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
                                           _00318_DS_:
                                           ;	.line	451; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(i) {
0024fa   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0024fc   e015     bz      0x2528           	BZ	_00320_DS_
0024fe   0000     nop                      	nop	
                                           _00315_DS_:
002500   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
002502   d7fe     bra     0x2500           	BRA	_00315_DS_
                                           ;	.line	453; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	chksum += (TXREGx = *buf);
002504   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002506   ffe9
002508   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00250a   fff3
00250c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00250e   ec1c     call    0x3c38, 0        	CALL	__gptrget1
002510   f01e
002512   6e05     movwf   0x5, 0           	MOVWF	r0x05
002514   c005     movff   0x5, 0xfad       	MOVFF	r0x05, _TXREG
002516   ffad
002518   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00251a   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
                                           ;	.line	454; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	i--;
00251c   0604     decf    0x4, 0x1, 0      	DECF	r0x04, F
                                           ;	.line	455; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	buf++;
00251e   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002520   e302     bnc     0x2526           	BNC	_00385_DS_
002522   4a01     infsnz  0x1, 0x1, 0      	INFSNZ	r0x01, F
002524   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
                                           _00385_DS_:
002526   d7e9     bra     0x24fa           	BRA	_00318_DS_
                                           _00320_DS_:
002528   0000     nop                      	nop	
                                           _00321_DS_:
00252a   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
00252c   d7fe     bra     0x252a           	BRA	_00321_DS_
                                           ;	.line	459; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = -chksum;
00252e   1c03     comf    0x3, 0, 0        	COMF	r0x03, W
002530   6ead     movwf   0xad, 0          	MOVWF	_TXREG
002532   2aad     incf    0xad, 0x1, 0     	INCF	_TXREG, F
002534   0000     nop                      	nop	
                                           _00324_DS_:
002536   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
002538   d7fe     bra     0x2536           	BRA	_00324_DS_
                                           ;	.line	462; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
00253a   ec6a     call    0x3cd4, 0        	CALL	_Serial_Init_Receiver
00253c   f01e
                                           _00327_DS_:
00253e   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002540   f006
002542   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002544   f005
002546   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002548   f004
00254a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00254c   f003
00254e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002550   f002
002552   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002554   f001
002556   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002558   f000
00255a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00255c   ffd9
00255e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseDecodeNextTXPacket	code
                                           _fraiseDecodeNextTXPacket:
                                           ;	.line	337; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static void fraiseDecodeNextTXPacket()
002346   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002348   ffe5
00234a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00234c   ffe5
00234e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002350   ffe5
                                           ; #	MOVFF	r0x03, POSTDEC1
                                           ; #; info ==> [localregs] entry end
                                           
                                           ; #	BTFSC	_TXSTAbits, 1
                                           ; #	GOTO	_00200_DS_
                                           ; #	GOTO	_00238_DS_
                                           ; #	CALL	_fraiseGetTXChar
                                           ;	.line	341; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(TXSTAxbits.TRMT == 0) return; //return if a serial transmission is in progress
002352   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002354   ffe5
                                           ;	.line	343; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	len = fraiseGetTXChar(); //1st byte = len
002356   a2ac     btfss   0xac, 0x1, 0     	BTFSS	_TXSTAbits, 1
002358   d076     bra     0x2446           	BRA	_00238_DS_
00235a   ec9e     call    0x393c, 0        	CALL	_fraiseGetTXChar
00235c   f01c
00235e   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	344; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!len) {
002360   5000     movf    0, 0, 0          	MOVF	r0x00, W
002362   e105     bnz     0x236e           	BNZ	_00202_DS_
002364   010a     movlb   0xa              	BANKSEL	_FrTXout
                                           ;	.line	346; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXin = FrTXout=0;
002366   6b23     clrf    0x23, 0x1        	CLRF	_FrTXout, B
002368   010a     movlb   0xa              	BANKSEL	_FrTXin
00236a   6b22     clrf    0x22, 0x1        	CLRF	_FrTXin, B
                                           ;	.line	347; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return; //?
00236c   d06c     bra     0x2446           	BRA	_00238_DS_
                                           _00202_DS_:
                                           ;	.line	350; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	txout_end = FrTXout;
00236e   ca23     movff   0xa23, 0x1       	MOVFF	_FrTXout, r0x01
002370   f001
                                           ;	.line	351; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	txout_end += len;
002372   5000     movf    0, 0, 0          	MOVF	r0x00, W
002374   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
                                           ;	.line	353; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c=fraiseGetTXChar(); //2nd byte = command (or hi nibble of address)
002376   ec9e     call    0x393c, 0        	CALL	_fraiseGetTXChar
002378   f01c
00237a   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	354; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	len -= 1;
00237c   0600     decf    0, 0x1, 0        	DECF	r0x00, F
                                           ;	.line	356; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == '#') {						
00237e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002380   0a23     xorlw   0x23             	XORLW	0x23
002382   e11f     bnz     0x23c2           	BNZ	_00217_DS_
                                           ;	.line	358; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(len < 1) goto discard;
002384   0e01     movlw   0x1              	MOVLW	0x01
002386   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002388   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
00238a   d05b     bra     0x2442           	BRA	_00237_DS_
                                           ;	.line	359; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetTXChar(); //what is the command ?
00238c   ec9e     call    0x393c, 0        	CALL	_fraiseGetTXChar
00238e   f01c
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
                                           ;	.line	360; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == 'i'){
002390   6e02     movwf   0x2, 0           	MOVWF	r0x02
002392   0a69     xorlw   0x69             	XORLW	0x69
002394   e103     bnz     0x239c           	BNZ	_00214_DS_
                                           ;	.line	362; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseInit();
002396   ec3a     call    0x3674, 0        	CALL	_fraiseInit
002398   f01b
                                           ;	.line	363; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	goto discard;
00239a   d053     bra     0x2442           	BRA	_00237_DS_
                                           _00214_DS_:
                                           ;	.line	370; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'r'){
00239c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00239e   0a72     xorlw   0x72             	XORLW	0x72
0023a0   e103     bnz     0x23a8           	BNZ	_00211_DS_
                                           ;	.line	371; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0023a2   ec6a     call    0x3cd4, 0        	CALL	_Serial_Init_Receiver
0023a4   f01e
                                           ;	.line	372; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	goto discard;
0023a6   d04d     bra     0x2442           	BRA	_00237_DS_
                                           _00211_DS_:
                                           ;	.line	374; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 's'){
0023a8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0023aa   0a73     xorlw   0x73             	XORLW	0x73
0023ac   e001     bz      0x23b0           	BZ	_00281_DS_
0023ae   d049     bra     0x2442           	BRA	_00237_DS_
                                           _00281_DS_:
                                           ;	.line	376; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	SerDrv_Off();
0023b0   8094     bsf     0x94, 0, 0       	BSF	_TRISCbits, 0
                                           ;	.line	377; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1; 
0023b2   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	378; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCxIE = 1;		
0023b4   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	379; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
0023b6   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           	;	VOLATILE READ - BEGIN
0023b8   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
                                           	;	VOLATILE READ - END
                                           	;	VOLATILE READ - BEGIN
0023ba   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
                                           	;	VOLATILE READ - END
                                           ;	.line	382; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 0;		
0023bc   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
                                           ;	.line	383; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 1;		
0023be   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	385; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	goto discard;
0023c0   d040     bra     0x2442           	BRA	_00237_DS_
                                           _00217_DS_:
                                           ;	.line	391; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == 'C') { //"char" packet
0023c2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0023c4   0a43     xorlw   0x43             	XORLW	0x43
0023c6   e005     bz      0x23d2           	BZ	_00222_DS_
                                           ;	.line	396; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == 'B') { //"bytes" packet
0023c8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0023ca   0a42     xorlw   0x42             	XORLW	0x42
0023cc   e001     bz      0x23d0           	BZ	_00285_DS_
0023ce   d039     bra     0x2442           	BRA	_00237_DS_
                                           _00285_DS_:
                                           ;	.line	404; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) len |= 128;
0023d0   d001     bra     0x23d4           	BRA	_00225_DS_
                                           _00222_DS_:
                                           ;	.line	404; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) len |= 128;
0023d2   8e00     bsf     0, 0x7, 0        	BSF	r0x00, 7
                                           _00225_DS_:
                                           ;	.line	406; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendInit(len);
0023d4   c000     movff   0, 0xa53         	MOVFF	r0x00, _FrTXchksum
0023d6   fa53
0023d8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0023da   0104     movlb   0x4              	BANKSEL	_FrTXpacket
0023dc   6f00     movwf   0, 0x1           	MOVWF	_FrTXpacket, B
0023de   0e01     movlw   0x1              	MOVLW	0x01
0023e0   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
0023e2   6f54     movwf   0x54, 0x1        	MOVWF	_FrTXpacket_i, B
                                           _00231_DS_:
0023e4   010a     movlb   0xa              	BANKSEL	_FrTXout
                                           ;	.line	408; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(FrTXout != txout_end) {
0023e6   5123     movf    0x23, 0, 0x1     	MOVF	_FrTXout, W, B
0023e8   1801     xorwf   0x1, 0, 0        	XORWF	r0x01, W
0023ea   e014     bz      0x2414           	BZ	_00234_DS_
                                           ;	.line	409; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetTXChar();
0023ec   ec9e     call    0x393c, 0        	CALL	_fraiseGetTXChar
0023ee   f01c
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
                                           ;	.line	410; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendData(c); 
0023f0   6e02     movwf   0x2, 0           	MOVWF	r0x02
0023f2   010a     movlb   0xa              	BANKSEL	_FrTXchksum
0023f4   2753     addwf   0x53, 0x1, 0x1   	ADDWF	_FrTXchksum, F, B
0023f6   0e00     movlw   0                	MOVLW	LOW(_FrTXpacket)
0023f8   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
0023fa   2554     addwf   0x54, 0, 0x1     	ADDWF	_FrTXpacket_i, W, B
0023fc   6e00     movwf   0, 0             	MOVWF	r0x00
0023fe   6a03     clrf    0x3, 0           	CLRF	r0x03
002400   0e04     movlw   0x4              	MOVLW	HIGH(_FrTXpacket)
002402   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
002404   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002406   ffe9
002408   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
00240a   ffea
00240c   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
00240e   ffef
                                           ; removed redundant BANKSEL
002410   2b54     incf    0x54, 0x1, 0x1   	INCF	_FrTXpacket_i, F, B
002412   d7e8     bra     0x23e4           	BRA	_00231_DS_
                                           _00234_DS_:
                                           ;	.line	412; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendClose();	
002414   0e00     movlw   0                	MOVLW	LOW(_FrTXpacket)
002416   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
002418   2554     addwf   0x54, 0, 0x1     	ADDWF	_FrTXpacket_i, W, B
00241a   6e00     movwf   0, 0             	MOVWF	r0x00
00241c   6a02     clrf    0x2, 0           	CLRF	r0x02
00241e   0e04     movlw   0x4              	MOVLW	HIGH(_FrTXpacket)
002420   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002422   010a     movlb   0xa              	BANKSEL	_FrTXchksum
002424   1d53     comf    0x53, 0, 0x1     	COMF	_FrTXchksum, W, B
002426   6e03     movwf   0x3, 0           	MOVWF	r0x03
002428   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
00242a   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00242c   ffe9
00242e   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002430   ffea
002432   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
002434   ffef
002436   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
002438   2b54     incf    0x54, 0x1, 0x1   	INCF	_FrTXpacket_i, F, B
00243a   ca54     movff   0xa54, 0xa51     	MOVFF	_FrTXpacket_i, _FrTXpacket_len
00243c   fa51
00243e   010a     movlb   0xa              	BANKSEL	_FrTXtries
                                           ;	.line	413; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXtries = 0;
002440   6b4b     clrf    0x4b, 0x1        	CLRF	_FrTXtries, B
                                           _00237_DS_:
                                           ;	.line	416; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXout = txout_end;
002442   c001     movff   0x1, 0xa23       	MOVFF	r0x01, _FrTXout
002444   fa23
                                           _00238_DS_:
                                           ;	.line	417; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
002446   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002448   f003
00244a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00244c   f002
00244e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002450   f001
002452   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002454   f000
002456   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSend	code
                                           _fraiseSend:
                                           ;	.line	294; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	char fraiseSend(const unsigned char *buf,unsigned char len)
002666   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002668   ffe5
00266a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00266c   ffd9
00266e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002670   ffe5
002672   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002674   ffe5
002676   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002678   ffe5
00267a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00267c   ffe5
00267e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002680   ffe5
002682   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002684   ffe5
002686   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002688   ffe5
00268a   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00268c   ffe5
00268e   0e02     movlw   0x2              	MOVLW	0x02
002690   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002692   f000
002694   0e03     movlw   0x3              	MOVLW	0x03
002696   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002698   f001
00269a   0e04     movlw   0x4              	MOVLW	0x04
00269c   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
00269e   f002
0026a0   0e05     movlw   0x5              	MOVLW	0x05
0026a2   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
0026a4   f003
                                           ;	.line	298; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree = FrTXout;
0026a6   ca23     movff   0xa23, 0xa24     	MOVFF	_FrTXout, _FrTXbufFree
0026a8   fa24
0026aa   010a     movlb   0xa              	BANKSEL	_FrTXin
                                           ;	.line	299; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= FrTXin;
0026ac   5122     movf    0x22, 0, 0x1     	MOVF	_FrTXin, W, B
0026ae   010a     movlb   0xa              	BANKSEL	_FrTXbufFree
0026b0   5f24     subwf   0x24, 0x1, 0x1   	SUBWF	_FrTXbufFree, F, B
                                           ;	.line	300; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= 1;
0026b2   0724     decf    0x24, 0x1, 0x1   	DECF	_FrTXbufFree, F, B
                                           ;	.line	302; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if ((len + 3) > FrTXbufFree) {
0026b4   c003     movff   0x3, 0x4         	MOVFF	r0x03, r0x04
0026b6   f004
0026b8   6a05     clrf    0x5, 0           	CLRF	r0x05
0026ba   0e03     movlw   0x3              	MOVLW	0x03
0026bc   2604     addwf   0x4, 0x1, 0      	ADDWF	r0x04, F
0026be   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0026c0   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
0026c2   ca24     movff   0xa24, 0x6       	MOVFF	_FrTXbufFree, r0x06
0026c4   f006
0026c6   6a07     clrf    0x7, 0           	CLRF	r0x07
0026c8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0026ca   0f80     addlw   0x80             	ADDLW	0x80
0026cc   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
0026ce   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0026d0   0f80     addlw   0x80             	ADDLW	0x80
0026d2   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
0026d4   e102     bnz     0x26da           	BNZ	_00192_DS_
0026d6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0026d8   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
                                           _00192_DS_:
0026da   e202     bc      0x26e0           	BC	_00171_DS_
                                           ;	.line	304; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return -1;
0026dc   68e8     setf    0xe8, 0          	SETF	WREG
0026de   d02b     bra     0x2736           	BRA	_00177_DS_
                                           _00171_DS_:
                                           ;	.line	306; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if (len < 2) {
0026e0   0e02     movlw   0x2              	MOVLW	0x02
0026e2   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
0026e4   e202     bc      0x26ea           	BC	_00173_DS_
                                           ;	.line	308; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return 0;
0026e6   6ae8     clrf    0xe8, 0          	CLRF	WREG
0026e8   d026     bra     0x2736           	BRA	_00177_DS_
                                           _00173_DS_:
                                           ;	.line	310; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	len -= 1; //don't keep '\n' terminator
0026ea   0603     decf    0x3, 0x1, 0      	DECF	r0x03, F
                                           ;	.line	311; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraisePutChar(len); //prefix tx packet buffer by its length
0026ec   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0026ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026f0   ec24     call    0x3448, 0        	CALL	_fraisePutChar
0026f2   f01a
0026f4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	313; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(i < len) { //fill tx packet buffer
0026f6   6a04     clrf    0x4, 0           	CLRF	r0x04
                                           _00174_DS_:
0026f8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0026fa   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
0026fc   e214     bc      0x2726           	BC	_00176_DS_
                                           ;	.line	314; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = buf[i];
0026fe   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002700   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002702   6e05     movwf   0x5, 0           	MOVWF	r0x05
002704   6ae8     clrf    0xe8, 0          	CLRF	WREG
002706   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002708   6e06     movwf   0x6, 0           	MOVWF	r0x06
00270a   6ae8     clrf    0xe8, 0          	CLRF	WREG
00270c   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
00270e   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
002710   ffe9
002712   c006     movff   0x6, 0xff3       	MOVFF	r0x06, PRODL
002714   fff3
002716   ec1c     call    0x3c38, 0        	CALL	__gptrget1
002718   f01e
                                           ;	.line	315; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	i++;
00271a   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
                                           ;	.line	316; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraisePutChar(c);
00271c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00271e   ec24     call    0x3448, 0        	CALL	_fraisePutChar
002720   f01a
002722   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002724   d7e9     bra     0x26f8           	BRA	_00174_DS_
                                           _00176_DS_:
                                           ;	.line	320; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree = FrTXout;
002726   ca23     movff   0xa23, 0xa24     	MOVFF	_FrTXout, _FrTXbufFree
002728   fa24
00272a   010a     movlb   0xa              	BANKSEL	_FrTXin
                                           ;	.line	321; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= FrTXin;
00272c   5122     movf    0x22, 0, 0x1     	MOVF	_FrTXin, W, B
00272e   010a     movlb   0xa              	BANKSEL	_FrTXbufFree
002730   5f24     subwf   0x24, 0x1, 0x1   	SUBWF	_FrTXbufFree, F, B
                                           ;	.line	322; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= 1;
002732   0724     decf    0x24, 0x1, 0x1   	DECF	_FrTXbufFree, F, B
                                           ;	.line	323; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return 0;
002734   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00177_DS_:
002736   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
002738   f007
00273a   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00273c   f006
00273e   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002740   f005
002742   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002744   f004
002746   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002748   f003
00274a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00274c   f002
00274e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002750   f001
002752   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002754   f000
002756   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002758   ffd9
00275a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetTXChar	code
                                           _fraiseGetTXChar:
                                           ;	.line	284; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static unsigned char fraiseGetTXChar()
00393c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00393e   ffe5
003940   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003942   ffe5
003944   010a     movlb   0xa              	BANKSEL	_FrTXin
                                           ;	.line	288; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrTXin == FrTXout) return 0; //underflow check
003946   5122     movf    0x22, 0, 0x1     	MOVF	_FrTXin, W, B
003948   010a     movlb   0xa              	BANKSEL	_FrTXout
00394a   1923     xorwf   0x23, 0, 0x1     	XORWF	_FrTXout, W, B
00394c   e102     bnz     0x3952           	BNZ	_00158_DS_
00394e   6ae8     clrf    0xe8, 0          	CLRF	WREG
003950   d00f     bra     0x3970           	BRA	_00159_DS_
                                           _00158_DS_:
                                           ;	.line	289; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = FrTXbuf[FrTXout];
003952   0e00     movlw   0                	MOVLW	LOW(_FrTXbuf)
003954   010a     movlb   0xa              	BANKSEL	_FrTXout
003956   2523     addwf   0x23, 0, 0x1     	ADDWF	_FrTXout, W, B
003958   6e00     movwf   0, 0             	MOVWF	r0x00
00395a   6a01     clrf    0x1, 0           	CLRF	r0x01
00395c   0e07     movlw   0x7              	MOVLW	HIGH(_FrTXbuf)
00395e   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003960   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003962   ffe9
003964   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
003966   ffea
003968   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
00396a   f000
                                           ; removed redundant BANKSEL
                                           ;	.line	290; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXout++;
00396c   2b23     incf    0x23, 0x1, 0x1   	INCF	_FrTXout, F, B
                                           ;	.line	291; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return c;
00396e   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           _00159_DS_:
003970   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003972   f001
003974   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003976   f000
003978   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraisePutChar	code
                                           _fraisePutChar:
                                           ;	.line	274; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static void fraisePutChar(unsigned char c)
003448   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00344a   ffe5
00344c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00344e   ffd9
003450   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003452   ffe5
003454   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003456   ffe5
003458   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00345a   ffe5
00345c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00345e   ffe5
003460   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003462   ffe5
003464   0e02     movlw   0x2              	MOVLW	0x02
003466   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003468   f000
                                           ;	.line	276; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if((FrTXin + 1) == FrTXout) {
00346a   ca22     movff   0xa22, 0x1       	MOVFF	_FrTXin, r0x01
00346c   f001
00346e   6a02     clrf    0x2, 0           	CLRF	r0x02
003470   4a01     infsnz  0x1, 0x1, 0      	INFSNZ	r0x01, F
003472   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
003474   ca23     movff   0xa23, 0x3       	MOVFF	_FrTXout, r0x03
003476   f003
003478   6a04     clrf    0x4, 0           	CLRF	r0x04
00347a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00347c   1803     xorwf   0x3, 0, 0        	XORWF	r0x03, W
00347e   e103     bnz     0x3486           	BNZ	_00151_DS_
003480   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003482   1804     xorwf   0x4, 0, 0        	XORWF	r0x04, W
003484   e001     bz      0x3488           	BZ	_00152_DS_
                                           _00151_DS_:
003486   d001     bra     0x348a           	BRA	_00145_DS_
                                           _00152_DS_:
                                           ;	.line	278; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return; //overflow check done by fraiseSend, but...
003488   d00e     bra     0x34a6           	BRA	_00146_DS_
                                           _00145_DS_:
                                           ;	.line	280; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbuf[FrTXin] = c;
00348a   0e00     movlw   0                	MOVLW	LOW(_FrTXbuf)
00348c   010a     movlb   0xa              	BANKSEL	_FrTXin
00348e   2522     addwf   0x22, 0, 0x1     	ADDWF	_FrTXin, W, B
003490   6e01     movwf   0x1, 0           	MOVWF	r0x01
003492   6a02     clrf    0x2, 0           	CLRF	r0x02
003494   0e07     movlw   0x7              	MOVLW	HIGH(_FrTXbuf)
003496   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003498   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00349a   ffe9
00349c   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00349e   ffea
0034a0   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
0034a2   ffef
                                           ; removed redundant BANKSEL
                                           ;	.line	281; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXin++;
0034a4   2b22     incf    0x22, 0x1, 0x1   	INCF	_FrTXin, F, B
                                           _00146_DS_:
0034a6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0034a8   f004
0034aa   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0034ac   f003
0034ae   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0034b0   f002
0034b2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0034b4   f001
0034b6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0034b8   f000
0034ba   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0034bc   ffd9
0034be   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetInterruptEnable	code
                                           _fraiseGetInterruptEnable:
003df4   010a     movlb   0xa              	BANKSEL	_FrInterruptEnabled
                                           ;	.line	268; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return FrInterruptEnabled;
003df6   5125     movf    0x25, 0, 0x1     	MOVF	_FrInterruptEnabled, W, B
003df8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSetInterruptEnable	code
                                           _fraiseSetInterruptEnable:
                                           ;	.line	256; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSetInterruptEnable(char enable)
003b42   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003b44   ffe5
003b46   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003b48   ffd9
003b4a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003b4c   ffe5
003b4e   0e02     movlw   0x2              	MOVLW	0x02
003b50   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003b52   f000
                                           ;	.line	258; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrInterruptEnabled = enable;
003b54   c000     movff   0, 0xa25         	MOVFF	r0x00, _FrInterruptEnabled
003b56   fa25
                                           ;	.line	259; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(enable == 0) {
003b58   5000     movf    0, 0, 0          	MOVF	r0x00, W
003b5a   e104     bnz     0x3b64           	BNZ	_00134_DS_
                                           ;	.line	260; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
003b5c   ec6a     call    0x3cd4, 0        	CALL	_Serial_Init_Receiver
003b5e   f01e
                                           ;	.line	261; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCxIE = 0;
003b60   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
                                           ;	.line	262; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
003b62   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           _00134_DS_:
003b64   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003b66   f000
003b68   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003b6a   ffd9
003b6c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseInit	code
                                           _fraiseInit:
003674   010a     movlb   0xa              	BANKSEL	_FrTXin
                                           ;	.line	214; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXin = 0;
003676   6b22     clrf    0x22, 0x1        	CLRF	_FrTXin, B
003678   010a     movlb   0xa              	BANKSEL	_FrTXout
                                           ;	.line	215; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXout = 0;
00367a   6b23     clrf    0x23, 0x1        	CLRF	_FrTXout, B
00367c   010a     movlb   0xa              	BANKSEL	_FrTXbufFree
                                           ;	.line	216; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree = 255;
00367e   6924     setf    0x24, 0x1        	SETF	_FrTXbufFree, B
                                           ;	.line	219; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	SerDrv_Off();
003680   8094     bsf     0x94, 0, 0       	BSF	_TRISCbits, 0
                                           ;	.line	220; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	InitSerDrv();
003682   908b     bcf     0x8b, 0, 0       	BCF	_LATCbits, 0
003684   8094     bsf     0x94, 0, 0       	BSF	_TRISCbits, 0
                                           ;	.line	224; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	SPBRGHx = BRGHL/256;
003686   6ab0     clrf    0xb0, 0          	CLRF	_SPBRGH
                                           ;	.line	225; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	SPBRGx = BRGHL%256;
003688   0e3f     movlw   0x3f             	MOVLW	0x3f
00368a   6eaf     movwf   0xaf, 0          	MOVWF	_SPBRG
                                           ;	.line	227; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	BAUDCONxbits.BRG16 = 1;
00368c   86b8     bsf     0xb8, 0x3, 0     	BSF	_BAUDCONbits, 3
                                           ;	.line	229; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TXEN = 1;
00368e   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
                                           ;	.line	230; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.BRGH = 1;
003690   84ac     bsf     0xac, 0x2, 0     	BSF	_TXSTAbits, 2
                                           ;	.line	231; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9 = 1;
003692   8cac     bsf     0xac, 0x6, 0     	BSF	_TXSTAbits, 6
                                           ;	.line	232; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9D = 0;
003694   90ac     bcf     0xac, 0, 0       	BCF	_TXSTAbits, 0
                                           ;	.line	234; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.RX9 = 1;
003696   8cab     bsf     0xab, 0x6, 0     	BSF	_RCSTAbits, 6
                                           ;	.line	235; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.SPEN = 1;
003698   8eab     bsf     0xab, 0x7, 0     	BSF	_RCSTAbits, 7
00369a   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	237; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.VAL = 0;
00369c   6b52     clrf    0x52, 0x1        	CLRF	_FraiseStatus, B
00369e   010a     movlb   0xa              	BANKSEL	_FraiseState
                                           ;	.line	238; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseState = fIDLE;
0036a0   6b4c     clrf    0x4c, 0x1        	CLRF	_FraiseState, B
0036a2   010a     movlb   0xa              	BANKSEL	_FrRXin
                                           ;	.line	239; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin = 0;
0036a4   6b4f     clrf    0x4f, 0x1        	CLRF	_FrRXin, B
0036a6   010a     movlb   0xa              	BANKSEL	_FrRXout
                                           ;	.line	240; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout = 0;
0036a8   6b50     clrf    0x50, 0x1        	CLRF	_FrRXout, B
0036aa   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
                                           ;	.line	241; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXpacket_len = 0;
0036ac   6b51     clrf    0x51, 0x1        	CLRF	_FrTXpacket_len, B
                                           ;	.line	243; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrID = eeReadByte(EE_ID);
0036ae   0e00     movlw   0                	MOVLW	0x00
0036b0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0036b2   ec5c     call    0x3cb8, 0        	CALL	_eeReadByte
0036b4   f01e
0036b6   010a     movlb   0xa              	BANKSEL	_FrID
0036b8   6f26     movwf   0x26, 0x1        	MOVWF	_FrID, B
0036ba   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	246; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXxIP = 0;
0036bc   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	247; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCxIP = 0;
0036be   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	248; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrInterruptEnabled = 1;
0036c0   0e01     movlw   0x1              	MOVLW	0x01
0036c2   010a     movlb   0xa              	BANKSEL	_FrInterruptEnabled
0036c4   6f25     movwf   0x25, 0x1        	MOVWF	_FrInterruptEnabled, B
0036c6   0104     movlb   0x4              	BANKSEL	_stdout
                                           ;	.line	251; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	stdout = STREAM_USER;
0036c8   6b7d     clrf    0x7d, 0x1        	CLRF	_stdout, B
                                           ; removed redundant BANKSEL
0036ca   6b7e     clrf    0x7e, 0x1        	CLRF	(_stdout + 1), B
0036cc   0e2f     movlw   0x2f             	MOVLW	0x2f
                                           ; removed redundant BANKSEL
0036ce   6f7f     movwf   0x7f, 0x1        	MOVWF	(_stdout + 2), B
                                           ;	.line	253; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0036d0   ec6a     call    0x3cd4, 0        	CALL	_Serial_Init_Receiver
0036d2   f01e
0036d4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSetID	code
                                           _fraiseSetID:
                                           ;	.line	207; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSetID(unsigned char id)
003a5a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003a5c   ffe5
003a5e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003a60   ffd9
003a62   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003a64   ffe5
003a66   0e02     movlw   0x2              	MOVLW	0x02
003a68   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003a6a   f000
                                           ;	.line	209; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	eeWriteByte(EE_ID,FrID = id);
003a6c   c000     movff   0, 0xa26         	MOVFF	r0x00, _FrID
003a6e   fa26
003a70   5000     movf    0, 0, 0          	MOVF	r0x00, W
003a72   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003a74   0e00     movlw   0                	MOVLW	0x00
003a76   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003a78   ec5a     call    0x38b4, 0        	CALL	_eeWriteByte
003a7a   f01c
003a7c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003a7e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003a80   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003a82   f000
003a84   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003a86   ffd9
003a88   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__Serial_Init_Receiver	code
                                           _Serial_Init_Receiver:
                                           _00105_DS_:
                                           ;	.line	110; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(TXSTAxbits.TRMT == 0);
003cd4   a2ac     btfss   0xac, 0x1, 0     	BTFSS	_TXSTAbits, 1
003cd6   d7fe     bra     0x3cd4           	BRA	_00105_DS_
                                           ;	.line	111; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	SerDrv_Off();
003cd8   8094     bsf     0x94, 0, 0       	BSF	_TRISCbits, 0
                                           ;	.line	112; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	WREG=RCREGx;
003cda   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
003cdc   0000     nop                      	nop	
                                           ;	.line	114; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	WREG=RCREGx;
003cde   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
                                           ;	.line	115; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 0;
003ce0   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
                                           ;	.line	116; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 1;
003ce2   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	117; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1;
003ce4   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	118; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCxIE = 1;
003ce6   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	119; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
003ce8   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
003cea   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
003cec   6425     cpfsgt  0x25, 0          	DB	0x25, 0x64, 0x20, 0x00
003cee   0020     dw      0x20             
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 2784 (0x0ae0) bytes ( 2.12%)
                                           ;           	 1392 (0x0570) words
                                           ; udata size:	  471 (0x01d7) bytes (12.80%)
                                           ; access size:	    8 (0x0008) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_analogInit
                                           	global	_analogInitTouch
                                           	global	_analogSelectAdc
                                           	global	_analogSelectAdcTouch
                                           	global	_analogDeselect
                                           	global	_analogService
                                           	global	_analogSend
                                           	global	_analogSetMode
                                           	global	_analogSet
                                           	global	_analogGet
                                           	global	_analogGetDistance
                                           	global	_analogScaling
                                           	global	_analogDeclareEE
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_printf
                                           	extern	_fraiseSend
                                           	extern	_EEdeclareInt
                                           	extern	__mullong
                                           	extern	__divulong
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           INTCON	equ	0xff2
                                           WREG	equ	0xfe8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _Scaling	db	0x00
                                           _Threshold	db	0x02, 0x00
                                           _Mode	db	0x02
                                           _analogService_chan_1_97	db	0x00
                                           _analogService_conv_1_97	db	0x00
                                           _analogSend_chan_1_104	db	0x00
                                           _analogSend_buf_1_104	db	0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           
                                           udata_analog_0	udata
                                           _Selected	res	2
                                           
                                           udata_analog_1	udata
                                           _Value	res	32
                                           
                                           udata_analog_2	udata
                                           _inValue	res	32
                                           
                                           udata_analog_3	udata
                                           _oldValue	res	32
                                           
                                           udata_analog_4	udata
                                           _Min	res	32
                                           
                                           udata_analog_5	udata
                                           _Max	res	32
                                           
                                           udata_analog_6	udata
                                           _Pins	res	16
                                           
                                           udata_analog_7	udata
                                           _HWChan	res	16
                                           
                                           udata_analog_8	udata
                                           _Dist	res	32
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_analog__analogDeclareEE	code
                                           _analogDeclareEE:
                                           ;	.line	276; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(0);
00143c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00143e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001440   0e04     movlw   0x4              	MOVLW	HIGH(_Max)
001442   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001444   0eb3     movlw   0xb3             	MOVLW	LOW(_Max)
001446   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001448   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
00144a   f017
00144c   0e03     movlw   0x3              	MOVLW	0x03
00144e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001450   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001452   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001454   0e04     movlw   0x4              	MOVLW	HIGH(_Min)
001456   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001458   0e93     movlw   0x93             	MOVLW	LOW(_Min)
00145a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00145c   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
00145e   f017
001460   0e03     movlw   0x3              	MOVLW	0x03
001462   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	277; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(1);
001464   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001466   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001468   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 2)
00146a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00146c   0eb5     movlw   0xb5             	MOVLW	LOW(_Max + 2)
00146e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001470   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
001472   f017
001474   0e03     movlw   0x3              	MOVLW	0x03
001476   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001478   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00147a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00147c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 2)
00147e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001480   0e95     movlw   0x95             	MOVLW	LOW(_Min + 2)
001482   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001484   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
001486   f017
001488   0e03     movlw   0x3              	MOVLW	0x03
00148a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	278; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(2);
00148c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00148e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001490   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 4)
001492   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001494   0eb7     movlw   0xb7             	MOVLW	LOW(_Max + 4)
001496   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001498   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
00149a   f017
00149c   0e03     movlw   0x3              	MOVLW	0x03
00149e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0014a0   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0014a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014a4   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 4)
0014a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014a8   0e97     movlw   0x97             	MOVLW	LOW(_Min + 4)
0014aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014ac   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
0014ae   f017
0014b0   0e03     movlw   0x3              	MOVLW	0x03
0014b2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	279; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(3);
0014b4   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0014b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014b8   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 6)
0014ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014bc   0eb9     movlw   0xb9             	MOVLW	LOW(_Max + 6)
0014be   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014c0   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
0014c2   f017
0014c4   0e03     movlw   0x3              	MOVLW	0x03
0014c6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0014c8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0014ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014cc   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 6)
0014ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014d0   0e99     movlw   0x99             	MOVLW	LOW(_Min + 6)
0014d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014d4   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
0014d6   f017
0014d8   0e03     movlw   0x3              	MOVLW	0x03
0014da   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	282; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(4);
0014dc   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0014de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014e0   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 8)
0014e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014e4   0ebb     movlw   0xbb             	MOVLW	LOW(_Max + 8)
0014e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014e8   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
0014ea   f017
0014ec   0e03     movlw   0x3              	MOVLW	0x03
0014ee   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0014f0   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0014f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014f4   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 8)
0014f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014f8   0e9b     movlw   0x9b             	MOVLW	LOW(_Min + 8)
0014fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014fc   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
0014fe   f017
001500   0e03     movlw   0x3              	MOVLW	0x03
001502   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	283; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(5);
001504   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001506   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001508   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 10)
00150a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00150c   0ebd     movlw   0xbd             	MOVLW	LOW(_Max + 10)
00150e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001510   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
001512   f017
001514   0e03     movlw   0x3              	MOVLW	0x03
001516   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001518   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00151a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00151c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 10)
00151e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001520   0e9d     movlw   0x9d             	MOVLW	LOW(_Min + 10)
001522   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001524   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
001526   f017
001528   0e03     movlw   0x3              	MOVLW	0x03
00152a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	284; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(6);
00152c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00152e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001530   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 12)
001532   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001534   0ebf     movlw   0xbf             	MOVLW	LOW(_Max + 12)
001536   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001538   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
00153a   f017
00153c   0e03     movlw   0x3              	MOVLW	0x03
00153e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001540   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001542   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001544   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 12)
001546   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001548   0e9f     movlw   0x9f             	MOVLW	LOW(_Min + 12)
00154a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00154c   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
00154e   f017
001550   0e03     movlw   0x3              	MOVLW	0x03
001552   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	285; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(7);
001554   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001556   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001558   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 14)
00155a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00155c   0ec1     movlw   0xc1             	MOVLW	LOW(_Max + 14)
00155e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001560   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
001562   f017
001564   0e03     movlw   0x3              	MOVLW	0x03
001566   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001568   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00156a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00156c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 14)
00156e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001570   0ea1     movlw   0xa1             	MOVLW	LOW(_Min + 14)
001572   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001574   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
001576   f017
001578   0e03     movlw   0x3              	MOVLW	0x03
00157a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	288; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(8);
00157c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00157e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001580   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 16)
001582   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001584   0ec3     movlw   0xc3             	MOVLW	LOW(_Max + 16)
001586   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001588   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
00158a   f017
00158c   0e03     movlw   0x3              	MOVLW	0x03
00158e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001590   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001592   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001594   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 16)
001596   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001598   0ea3     movlw   0xa3             	MOVLW	LOW(_Min + 16)
00159a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00159c   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
00159e   f017
0015a0   0e03     movlw   0x3              	MOVLW	0x03
0015a2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	289; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(9);
0015a4   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0015a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015a8   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 18)
0015aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015ac   0ec5     movlw   0xc5             	MOVLW	LOW(_Max + 18)
0015ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015b0   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
0015b2   f017
0015b4   0e03     movlw   0x3              	MOVLW	0x03
0015b6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0015b8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0015ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015bc   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 18)
0015be   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015c0   0ea5     movlw   0xa5             	MOVLW	LOW(_Min + 18)
0015c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015c4   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
0015c6   f017
0015c8   0e03     movlw   0x3              	MOVLW	0x03
0015ca   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	290; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(10);
0015cc   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0015ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015d0   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 20)
0015d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015d4   0ec7     movlw   0xc7             	MOVLW	LOW(_Max + 20)
0015d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015d8   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
0015da   f017
0015dc   0e03     movlw   0x3              	MOVLW	0x03
0015de   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0015e0   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0015e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015e4   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 20)
0015e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015e8   0ea7     movlw   0xa7             	MOVLW	LOW(_Min + 20)
0015ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015ec   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
0015ee   f017
0015f0   0e03     movlw   0x3              	MOVLW	0x03
0015f2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	291; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(11);
0015f4   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0015f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015f8   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 22)
0015fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015fc   0ec9     movlw   0xc9             	MOVLW	LOW(_Max + 22)
0015fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001600   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
001602   f017
001604   0e03     movlw   0x3              	MOVLW	0x03
001606   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001608   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00160a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00160c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 22)
00160e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001610   0ea9     movlw   0xa9             	MOVLW	LOW(_Min + 22)
001612   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001614   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
001616   f017
001618   0e03     movlw   0x3              	MOVLW	0x03
00161a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	294; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(12);
00161c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00161e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001620   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 24)
001622   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001624   0ecb     movlw   0xcb             	MOVLW	LOW(_Max + 24)
001626   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001628   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
00162a   f017
00162c   0e03     movlw   0x3              	MOVLW	0x03
00162e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001630   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001632   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001634   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 24)
001636   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001638   0eab     movlw   0xab             	MOVLW	LOW(_Min + 24)
00163a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00163c   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
00163e   f017
001640   0e03     movlw   0x3              	MOVLW	0x03
001642   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	295; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(13);
001644   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001646   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001648   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 26)
00164a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00164c   0ecd     movlw   0xcd             	MOVLW	LOW(_Max + 26)
00164e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001650   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
001652   f017
001654   0e03     movlw   0x3              	MOVLW	0x03
001656   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001658   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00165a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00165c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 26)
00165e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001660   0ead     movlw   0xad             	MOVLW	LOW(_Min + 26)
001662   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001664   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
001666   f017
001668   0e03     movlw   0x3              	MOVLW	0x03
00166a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	296; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(14);
00166c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00166e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001670   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 28)
001672   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001674   0ecf     movlw   0xcf             	MOVLW	LOW(_Max + 28)
001676   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001678   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
00167a   f017
00167c   0e03     movlw   0x3              	MOVLW	0x03
00167e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001680   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001682   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001684   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 28)
001686   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001688   0eaf     movlw   0xaf             	MOVLW	LOW(_Min + 28)
00168a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00168c   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
00168e   f017
001690   0e03     movlw   0x3              	MOVLW	0x03
001692   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	297; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(15);
001694   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001696   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001698   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 30)
00169a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00169c   0ed1     movlw   0xd1             	MOVLW	LOW(_Max + 30)
00169e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0016a0   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
0016a2   f017
0016a4   0e03     movlw   0x3              	MOVLW	0x03
0016a6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0016a8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0016aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0016ac   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 30)
0016ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0016b0   0eb1     movlw   0xb1             	MOVLW	LOW(_Min + 30)
0016b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0016b4   ec39     call    0x2e72, 0        	CALL	_EEdeclareInt
0016b6   f017
0016b8   0e03     movlw   0x3              	MOVLW	0x03
0016ba   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0016bc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogScaling	code
                                           _analogScaling:
                                           ;	.line	255; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogScaling(unsigned char scaling) // when scaling, min and max are updated each sample
00303e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003040   ffe5
003042   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003044   ffd9
003046   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003048   ffe5
00304a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00304c   ffe5
00304e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003050   ffe5
003052   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003054   ffe5
003056   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003058   ffe5
00305a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00305c   ffe5
00305e   0e02     movlw   0x2              	MOVLW	0x02
003060   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003062   f000
                                           ;	.line	259; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(scaling==1) {
003064   5000     movf    0, 0, 0          	MOVF	r0x00, W
003066   0a01     xorlw   0x1              	XORLW	0x01
003068   e122     bnz     0x30ae           	BNZ	_00415_DS_
                                           ;	.line	260; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<ANALOG_MAX_CHANNELS;i++) {
00306a   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ; ;multiply lit val:0x02 by variable r0x01 and store in r0x02
                                           _00416_DS_:
                                           ;	.line	261; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Min[i]=0x7FFF;
00306c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00306e   0d02     mullw   0x2              	MULLW	0x02
003070   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
003072   6e03     movwf   0x3, 0           	MOVWF	r0x03
003074   cff3     movff   0xff3, 0x2       	MOVFF	PRODL, r0x02
003076   f002
003078   0e93     movlw   0x93             	MOVLW	LOW(_Min)
00307a   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
00307c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00307e   0e04     movlw   0x4              	MOVLW	HIGH(_Min)
003080   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
003082   6e05     movwf   0x5, 0           	MOVWF	r0x05
003084   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
003086   ffe9
003088   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
00308a   ffea
00308c   68ee     setf    0xee, 0          	SETF	POSTINC0
00308e   0e7f     movlw   0x7f             	MOVLW	0x7f
003090   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           ;	.line	262; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Max[i]=0;
003092   0eb3     movlw   0xb3             	MOVLW	LOW(_Max)
003094   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
003096   0e04     movlw   0x4              	MOVLW	HIGH(_Max)
003098   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
00309a   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
00309c   ffe9
00309e   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0030a0   ffea
0030a2   6aee     clrf    0xee, 0          	CLRF	POSTINC0
0030a4   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	260; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<ANALOG_MAX_CHANNELS;i++) {
0030a6   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
0030a8   0e10     movlw   0x10             	MOVLW	0x10
0030aa   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0030ac   e3df     bnc     0x306c           	BNC	_00416_DS_
                                           _00415_DS_:
                                           ;	.line	266; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Scaling=scaling;
0030ae   c000     movff   0, 0xa28         	MOVFF	r0x00, _Scaling
0030b0   fa28
0030b2   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0030b4   f005
0030b6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0030b8   f004
0030ba   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0030bc   f003
0030be   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0030c0   f002
0030c2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0030c4   f001
0030c6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0030c8   f000
0030ca   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0030cc   ffd9
0030ce   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogGetDistance	code
                                           _analogGetDistance:
                                           ;	.line	250; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	int analogGetDistance(unsigned char chan)
0037cc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0037ce   ffe5
0037d0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0037d2   ffd9
0037d4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0037d6   ffe5
0037d8   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0037da   ffe5
0037dc   0e02     movlw   0x2              	MOVLW	0x02
0037de   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0037e0   f000
                                           ; ;multiply lit val:0x02 by variable r0x00 and store in r0x00
                                           ;	.line	252; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	return Dist[chan];
0037e2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0037e4   0d02     mullw   0x2              	MULLW	0x02
0037e6   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
0037e8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0037ea   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
0037ec   f000
0037ee   0ed3     movlw   0xd3             	MOVLW	LOW(_Dist)
0037f0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0037f2   0e04     movlw   0x4              	MOVLW	HIGH(_Dist)
0037f4   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0037f6   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0037f8   ffe9
0037fa   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0037fc   ffea
0037fe   cfee     movff   0xfee, 0         	MOVFF	POSTINC0, r0x00
003800   f000
003802   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
003804   f001
003806   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003808   fff3
00380a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00380c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00380e   f001
003810   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003812   f000
003814   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003816   ffd9
003818   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogGet	code
                                           _analogGet:
                                           ;	.line	245; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	int analogGet(unsigned char chan)
00381a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00381c   ffe5
00381e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003820   ffd9
003822   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003824   ffe5
003826   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003828   ffe5
00382a   0e02     movlw   0x2              	MOVLW	0x02
00382c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00382e   f000
                                           ; ;multiply lit val:0x02 by variable r0x00 and store in r0x00
                                           ;	.line	247; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	return Value[chan];
003830   5000     movf    0, 0, 0          	MOVF	r0x00, W
003832   0d02     mullw   0x2              	MULLW	0x02
003834   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
003836   6e01     movwf   0x1, 0           	MOVWF	r0x01
003838   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
00383a   f000
00383c   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
00383e   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003840   0e00     movlw   0                	MOVLW	HIGH(_Value)
003842   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003844   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003846   ffe9
003848   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00384a   ffea
00384c   cfee     movff   0xfee, 0         	MOVFF	POSTINC0, r0x00
00384e   f000
003850   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
003852   f001
003854   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003856   fff3
003858   5000     movf    0, 0, 0          	MOVF	r0x00, W
00385a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00385c   f001
00385e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003860   f000
003862   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003864   ffd9
003866   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogSet	code
                                           _analogSet:
                                           ;	.line	233; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogSet(unsigned char chan, int val)
00275c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00275e   ffe5
002760   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002762   ffd9
002764   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002766   ffe5
002768   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00276a   ffe5
00276c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00276e   ffe5
002770   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002772   ffe5
002774   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002776   ffe5
002778   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00277a   ffe5
00277c   0e02     movlw   0x2              	MOVLW	0x02
00277e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002780   f000
002782   0e03     movlw   0x3              	MOVLW	0x03
002784   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002786   f001
002788   0e04     movlw   0x4              	MOVLW	0x04
00278a   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
00278c   f002
                                           ; ;multiply lit val:0x02 by variable r0x00 and store in r0x00
                                           ;	.line	237; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	inValue[chan] = val;
00278e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002790   0d02     mullw   0x2              	MULLW	0x02
002792   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
002794   6e03     movwf   0x3, 0           	MOVWF	r0x03
002796   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
002798   f000
00279a   0e39     movlw   0x39             	MOVLW	LOW(_inValue)
00279c   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00279e   6e04     movwf   0x4, 0           	MOVWF	r0x04
0027a0   0e04     movlw   0x4              	MOVLW	HIGH(_inValue)
0027a2   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
0027a4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0027a6   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
0027a8   ffe9
0027aa   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
0027ac   ffea
0027ae   c001     movff   0x1, 0xfee       	MOVFF	r0x01, POSTINC0
0027b0   ffee
0027b2   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
0027b4   ffef
                                           ;	.line	238; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	d = oldValue[chan] - val;
0027b6   0e59     movlw   0x59             	MOVLW	LOW(_oldValue)
0027b8   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0027ba   6e04     movwf   0x4, 0           	MOVWF	r0x04
0027bc   0e04     movlw   0x4              	MOVLW	HIGH(_oldValue)
0027be   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
0027c0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0027c2   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
0027c4   ffe9
0027c6   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
0027c8   ffea
0027ca   cfee     movff   0xfee, 0x4       	MOVFF	POSTINC0, r0x04
0027cc   f004
0027ce   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
0027d0   f005
0027d2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0027d4   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
0027d6   6e01     movwf   0x1, 0           	MOVWF	r0x01
0027d8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0027da   5805     subwfb  0x5, 0, 0        	SUBWFB	r0x05, W
0027dc   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	239; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Dist[chan] = d;
0027de   0ed3     movlw   0xd3             	MOVLW	LOW(_Dist)
0027e0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0027e2   0e04     movlw   0x4              	MOVLW	HIGH(_Dist)
0027e4   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0027e6   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0027e8   ffe9
0027ea   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0027ec   ffea
0027ee   c001     movff   0x1, 0xfee       	MOVFF	r0x01, POSTINC0
0027f0   ffee
0027f2   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
0027f4   ffef
                                           ;	.line	240; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(d < 0) d = -d;
0027f6   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0027f8   ae02     btfss   0x2, 0x7, 0      	BTFSS	r0x02, 7
0027fa   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0027fc   e304     bnc     0x2806           	BNC	_00381_DS_
0027fe   1e02     comf    0x2, 0x1, 0      	COMF	r0x02, F
002800   6c01     negf    0x1, 0           	NEGF	r0x01
002802   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
002804   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
                                           _00381_DS_:
                                           ;	.line	241; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(d < 3) d = 0;
002806   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002808   0f80     addlw   0x80             	ADDLW	0x80
00280a   0f80     addlw   0x80             	ADDLW	0x80
00280c   e102     bnz     0x2812           	BNZ	_00398_DS_
00280e   0e03     movlw   0x3              	MOVLW	0x03
002810   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _00398_DS_:
002812   e202     bc      0x2818           	BC	_00383_DS_
002814   6a01     clrf    0x1, 0           	CLRF	r0x01
002816   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           _00383_DS_:
                                           ;	.line	242; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(d == 0) Dist[chan] = 0;
002818   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00281a   1002     iorwf   0x2, 0, 0        	IORWF	r0x02, W
00281c   e107     bnz     0x282c           	BNZ	_00386_DS_
00281e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002820   ffe9
002822   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
002824   ffea
002826   0e00     movlw   0                	MOVLW	0x00
002828   6aee     clrf    0xee, 0          	CLRF	POSTINC0
00282a   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           _00386_DS_:
00282c   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00282e   f005
002830   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002832   f004
002834   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002836   f003
002838   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00283a   f002
00283c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00283e   f001
002840   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002842   f000
002844   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002846   ffd9
002848   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogSetMode	code
                                           _analogSetMode:
                                           ;	.line	228; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogSetMode(unsigned char mode) // scale : bit0 = scale_on ; bit1 = num_on(=text_off) ; bit2 = cross_inval
003d7e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003d80   ffe5
003d82   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003d84   ffd9
003d86   0e02     movlw   0x2              	MOVLW	0x02
003d88   cfdb     movff   0xfdb, 0xa2b     	MOVFF	PLUSW2, _Mode
003d8a   fa2b
                                           ;	.line	230; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Mode = mode;
003d8c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003d8e   ffd9
003d90   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogSend	code
                                           _analogSend:
                                           ;	.line	165; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	char analogSend()
00081c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00081e   ffe5
000820   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
000822   ffe5
000824   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
000826   ffe5
000828   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00082a   ffe5
00082c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00082e   ffe5
000830   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
000832   ffe5
000834   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
000836   ffe5
000838   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00083a   ffe5
00083c   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
00083e   ffe5
000840   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
000842   ffe5
000844   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
000846   ffe5
000848   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
00084a   ffe5
00084c   c00c     movff   0xc, 0xfe5       	MOVFF	r0x0c, POSTDEC1
00084e   ffe5
                                           ;	.line	168; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	unsigned char loop = 0, count = 0, len = 0;
000850   6a00     clrf    0, 0             	CLRF	r0x00
                                           ;	.line	172; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	while((count < 4) && (loop++ < ANALOG_MAX_CHANNELS)){
000852   6a01     clrf    0x1, 0           	CLRF	r0x01
000854   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           _00279_DS_:
000856   0e04     movlw   0x4              	MOVLW	0x04
000858   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
00085a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00085c   d1e8     bra     0xc2e            	BRA	_00307_DS_
00085e   c001     movff   0x1, 0x3         	MOVFF	r0x01, r0x03
000860   f003
000862   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
000864   0e10     movlw   0x10             	MOVLW	0x10
000866   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
000868   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00086a   d1e1     bra     0xc2e            	BRA	_00307_DS_
00086c   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
                                           ;	.line	173; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	chan++;
00086e   2b2e     incf    0x2e, 0x1, 0x1   	INCF	_analogSend_chan_1_104, F, B
                                           ;	.line	174; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(chan >= ANALOG_MAX_CHANNELS) {
000870   0e10     movlw   0x10             	MOVLW	0x10
                                           ; #	SUBWF	_analogSend_chan_1_104, W, B
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00245_DS_
                                           ; #	CLRF	_analogSend_chan_1_104, B
                                           ; #	SWAPF	_analogSend_chan_1_104, W, B
                                           ; removed redundant BANKSEL
                                           ;	.line	175; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	chan = 0;
000872   5d2e     subwf   0x2e, 0, 0x1     	SUBWF	_analogSend_chan_1_104, W, B
                                           ;	.line	177; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(! isSelected(chan)) continue;
000874   e301     bnc     0x878            	BNC	_10434_DS_
                                           ; removed redundant BANKSEL
000876   6b2e     clrf    0x2e, 0x1        	CLRF	_analogSend_chan_1_104, B
                                           _10434_DS_:
000878   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
00087a   392e     swapf   0x2e, 0, 0x1     	SWAPF	_analogSend_chan_1_104, W, B
00087c   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
00087e   0b1f     andlw   0x1f             	ANDLW	0x1f
000880   6e03     movwf   0x3, 0           	MOVWF	r0x03
000882   6a04     clrf    0x4, 0           	CLRF	r0x04
000884   0e49     movlw   0x49             	MOVLW	LOW(_Selected)
000886   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000888   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
00088a   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00088c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00088e   ffe9
000890   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000892   ffea
000894   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
000896   f003
000898   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
00089a   152e     andwf   0x2e, 0, 0x1     	ANDWF	_analogSend_chan_1_104, W, B
00089c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00089e   0e01     movlw   0x1              	MOVLW	0x01
0008a0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0008a2   0e00     movlw   0                	MOVLW	0x00
0008a4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008a6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0008a8   e006     bz      0x8b6            	BZ	_00352_DS_
0008aa   6ce8     negf    0xe8, 0          	NEGF	WREG
0008ac   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00353_DS_:
0008ae   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
0008b0   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
0008b2   0f01     addlw   0x1              	ADDLW	0x01
0008b4   e3fc     bnc     0x8ae            	BNC	_00353_DS_
                                           _00352_DS_:
0008b6   6a07     clrf    0x7, 0           	CLRF	r0x07
0008b8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0008ba   1605     andwf   0x5, 0x1, 0      	ANDWF	r0x05, F
0008bc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008be   1606     andwf   0x6, 0x1, 0      	ANDWF	r0x06, F
0008c0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008c2   1006     iorwf   0x6, 0, 0        	IORWF	r0x06, W
0008c4   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0008c6   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
0008c8   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0008ca   6a05     clrf    0x5, 0           	CLRF	r0x05
0008cc   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
0008ce   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008d0   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
0008d2   d7c1     bra     0x856            	BRA	_00279_DS_
                                           ; ;multiply lit val:0x02 by variable _analogSend_chan_1_104 and store in r0x03
0008d4   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
                                           ;	.line	179; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	v = Value[chan];
0008d6   512e     movf    0x2e, 0, 0x1     	MOVF	_analogSend_chan_1_104, W, B
0008d8   0d02     mullw   0x2              	MULLW	0x02
0008da   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
0008dc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0008de   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0008e0   f003
0008e2   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
0008e4   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
0008e6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0008e8   0e00     movlw   0                	MOVLW	HIGH(_Value)
0008ea   2004     addwfc  0x4, 0, 0        	ADDWFC	r0x04, W
0008ec   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008ee   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0008f0   ffe9
0008f2   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0008f4   ffea
0008f6   cfee     movff   0xfee, 0x5       	MOVFF	POSTINC0, r0x05
0008f8   f005
0008fa   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
0008fc   f006
0008fe   010a     movlb   0xa              	BANKSEL	_Mode
                                           ;	.line	180; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(Mode & AMODE_SCALE) { // scale :
000900   a12b     btfss   0x2b, 0, 0x1     	BTFSS	_Mode, 0, B
000902   d09d     bra     0xa3e            	BRA	_00260_DS_
                                           ;	.line	181; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(v < Min[chan]) v = 0;
000904   0e93     movlw   0x93             	MOVLW	LOW(_Min)
000906   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
000908   6e07     movwf   0x7, 0           	MOVWF	r0x07
00090a   0e04     movlw   0x4              	MOVLW	HIGH(_Min)
00090c   2004     addwfc  0x4, 0, 0        	ADDWFC	r0x04, W
00090e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000910   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
000912   ffe9
000914   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
000916   ffea
000918   cfee     movff   0xfee, 0x7       	MOVFF	POSTINC0, r0x07
00091a   f007
00091c   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
00091e   f008
000920   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000922   0f80     addlw   0x80             	ADDLW	0x80
000924   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000926   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000928   0f80     addlw   0x80             	ADDLW	0x80
00092a   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
00092c   e102     bnz     0x932            	BNZ	_00356_DS_
00092e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000930   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _00356_DS_:
000932   e203     bc      0x93a            	BC	_00252_DS_
000934   6a05     clrf    0x5, 0           	CLRF	r0x05
000936   6a06     clrf    0x6, 0           	CLRF	r0x06
000938   d060     bra     0x9fa            	BRA	_00253_DS_
                                           _00252_DS_:
                                           ;	.line	182; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	else if(v > Max[chan]) v = ANALOG_SCALED_MAX;
00093a   0eb3     movlw   0xb3             	MOVLW	LOW(_Max)
00093c   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
00093e   0e04     movlw   0x4              	MOVLW	HIGH(_Max)
000940   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000942   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000944   ffe9
000946   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000948   ffea
00094a   cfee     movff   0xfee, 0x3       	MOVFF	POSTINC0, r0x03
00094c   f003
00094e   cfef     movff   0xfef, 0x4       	MOVFF	INDF0, r0x04
000950   f004
000952   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000954   0f80     addlw   0x80             	ADDLW	0x80
000956   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000958   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00095a   0f80     addlw   0x80             	ADDLW	0x80
00095c   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
00095e   e102     bnz     0x964            	BNZ	_00357_DS_
000960   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000962   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _00357_DS_:
000964   e204     bc      0x96e            	BC	_00249_DS_
000966   6805     setf    0x5, 0           	SETF	r0x05
000968   0e3f     movlw   0x3f             	MOVLW	0x3f
00096a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00096c   d046     bra     0x9fa            	BRA	_00253_DS_
                                           _00249_DS_:
                                           ;	.line	184; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	((ANALOG_SCALED_MAX+1UL) * (v - Min[chan])) / 
00096e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000970   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000972   6e09     movwf   0x9, 0           	MOVWF	r0x09
000974   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000976   5806     subwfb  0x6, 0, 0        	SUBWFB	r0x06, W
000978   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
00097a   6ae8     clrf    0xe8, 0          	CLRF	WREG
00097c   be0a     btfsc   0xa, 0x7, 0      	BTFSC	r0x0a, 7
00097e   0eff     movlw   0xff             	MOVLW	0xff
000980   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
                                           ; #	MOVWF	r0x0c
                                           ; #	MOVF	r0x0c, W
                                           ;	.line	185; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	(Max[chan] - Min[chan]) );
000982   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000984   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000986   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000988   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
00098a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00098c   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00098e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000990   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
000992   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
000994   0e40     movlw   0x40             	MOVLW	0x40
000996   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000998   0e00     movlw   0                	MOVLW	0x00
00099a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00099c   ec5f     call    0x16be, 0        	CALL	__mullong
00099e   f00b
0009a0   6e09     movwf   0x9, 0           	MOVWF	r0x09
0009a2   cff3     movff   0xff3, 0xa       	MOVFF	PRODL, r0x0a
0009a4   f00a
0009a6   cff4     movff   0xff4, 0xb       	MOVFF	PRODH, r0x0b
0009a8   f00b
0009aa   cfe9     movff   0xfe9, 0xc       	MOVFF	FSR0L, r0x0c
0009ac   f00c
0009ae   0e08     movlw   0x8              	MOVLW	0x08
0009b0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0009b2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009b4   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
0009b6   6e07     movwf   0x7, 0           	MOVWF	r0x07
0009b8   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0009ba   5804     subwfb  0x4, 0, 0        	SUBWFB	r0x04, W
0009bc   6e08     movwf   0x8, 0           	MOVWF	r0x08
0009be   6ae8     clrf    0xe8, 0          	CLRF	WREG
0009c0   be08     btfsc   0x8, 0x7, 0      	BTFSC	r0x08, 7
0009c2   0eff     movlw   0xff             	MOVLW	0xff
0009c4   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0009c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009c8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0009ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009cc   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0009ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009d0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009d4   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0009d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009d8   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0009da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009dc   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0009de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009e0   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0009e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009e4   ece6     call    0x1dcc, 0        	CALL	__divulong
0009e6   f00e
0009e8   6e03     movwf   0x3, 0           	MOVWF	r0x03
0009ea   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
0009ec   f004
0009ee   0e08     movlw   0x8              	MOVLW	0x08
0009f0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0009f2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0009f4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0009f6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009f8   6e06     movwf   0x6, 0           	MOVWF	r0x06
                                           _00253_DS_:
0009fa   010a     movlb   0xa              	BANKSEL	(_Threshold + 1)
                                           ;	.line	187; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(v <= Threshold ) v = 0;
0009fc   512a     movf    0x2a, 0, 0x1     	MOVF	(_Threshold + 1), W, B
0009fe   0f80     addlw   0x80             	ADDLW	0x80
000a00   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000a02   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000a04   0f80     addlw   0x80             	ADDLW	0x80
000a06   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
000a08   e102     bnz     0xa0e            	BNZ	_00358_DS_
000a0a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
                                           ; removed redundant BANKSEL
000a0c   5d29     subwf   0x29, 0, 0x1     	SUBWF	_Threshold, W, B
                                           _00358_DS_:
000a0e   e303     bnc     0xa16            	BNC	_00257_DS_
000a10   6a05     clrf    0x5, 0           	CLRF	r0x05
000a12   6a06     clrf    0x6, 0           	CLRF	r0x06
000a14   d014     bra     0xa3e            	BRA	_00260_DS_
                                           _00257_DS_:
000a16   010a     movlb   0xa              	BANKSEL	_Threshold
                                           ;	.line	188; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	else if(v >= (ANALOG_SCALED_MAX - Threshold)) 
000a18   5129     movf    0x29, 0, 0x1     	MOVF	_Threshold, W, B
000a1a   08ff     sublw   0xff             	SUBLW	0xff
000a1c   6e03     movwf   0x3, 0           	MOVWF	r0x03
000a1e   0e3f     movlw   0x3f             	MOVLW	0x3f
                                           ; removed redundant BANKSEL
000a20   552a     subfwb  0x2a, 0, 0x1     	SUBFWB	(_Threshold + 1), W, B
000a22   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a24   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000a26   0f80     addlw   0x80             	ADDLW	0x80
000a28   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000a2a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a2c   0f80     addlw   0x80             	ADDLW	0x80
000a2e   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
000a30   e102     bnz     0xa36            	BNZ	_00359_DS_
000a32   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000a34   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _00359_DS_:
000a36   e303     bnc     0xa3e            	BNC	_00260_DS_
                                           ;	.line	189; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	v = ANALOG_SCALED_MAX;
000a38   6805     setf    0x5, 0           	SETF	r0x05
000a3a   0e3f     movlw   0x3f             	MOVLW	0x3f
000a3c   6e06     movwf   0x6, 0           	MOVWF	r0x06
                                           ; ;multiply lit val:0x02 by variable _analogSend_chan_1_104 and store in r0x03
                                           _00260_DS_:
000a3e   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
                                           ;	.line	191; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	d = v - oldValue[chan];
000a40   512e     movf    0x2e, 0, 0x1     	MOVF	_analogSend_chan_1_104, W, B
000a42   0d02     mullw   0x2              	MULLW	0x02
000a44   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000a46   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a48   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000a4a   f003
000a4c   0e59     movlw   0x59             	MOVLW	LOW(_oldValue)
000a4e   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000a50   0e04     movlw   0x4              	MOVLW	HIGH(_oldValue)
000a52   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000a54   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000a56   ffe9
000a58   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000a5a   ffea
000a5c   cfee     movff   0xfee, 0x3       	MOVFF	POSTINC0, r0x03
000a5e   f003
000a60   cfef     movff   0xfef, 0x4       	MOVFF	INDF0, r0x04
000a62   f004
000a64   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000a66   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000a68   6e03     movwf   0x3, 0           	MOVWF	r0x03
000a6a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a6c   5806     subwfb  0x6, 0, 0        	SUBWFB	r0x06, W
000a6e   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ;	.line	192; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(d < 0) d = -d;
000a70   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
000a72   ae04     btfss   0x4, 0x7, 0      	BTFSS	r0x04, 7
000a74   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
000a76   e304     bnc     0xa80            	BNC	_00262_DS_
000a78   1e04     comf    0x4, 0x1, 0      	COMF	r0x04, F
000a7a   6c03     negf    0x3, 0           	NEGF	r0x03
000a7c   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
000a7e   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
                                           _00262_DS_:
                                           ;	.line	194; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	count++;
000a80   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
000a82   010a     movlb   0xa              	BANKSEL	(_Threshold + 1)
                                           ;	.line	196; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(d <= Threshold) continue;
000a84   512a     movf    0x2a, 0, 0x1     	MOVF	(_Threshold + 1), W, B
000a86   0f80     addlw   0x80             	ADDLW	0x80
000a88   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000a8a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a8c   0f80     addlw   0x80             	ADDLW	0x80
000a8e   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
000a90   e102     bnz     0xa96            	BNZ	_00361_DS_
000a92   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
000a94   5d29     subwf   0x29, 0, 0x1     	SUBWF	_Threshold, W, B
                                           _00361_DS_:
000a96   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000a98   d6de     bra     0x856            	BRA	_00279_DS_
                                           ; ;multiply lit val:0x02 by variable _analogSend_chan_1_104 and store in r0x07
000a9a   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
                                           ;	.line	198; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	oldValue[chan] = v;
000a9c   512e     movf    0x2e, 0, 0x1     	MOVF	_analogSend_chan_1_104, W, B
000a9e   0d02     mullw   0x2              	MULLW	0x02
000aa0   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000aa2   6e08     movwf   0x8, 0           	MOVWF	r0x08
000aa4   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
000aa6   f007
000aa8   0e59     movlw   0x59             	MOVLW	LOW(_oldValue)
000aaa   2607     addwf   0x7, 0x1, 0      	ADDWF	r0x07, F
000aac   0e04     movlw   0x4              	MOVLW	HIGH(_oldValue)
000aae   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
000ab0   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
000ab2   ffe9
000ab4   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
000ab6   ffea
000ab8   c005     movff   0x5, 0xfee       	MOVFF	r0x05, POSTINC0
000aba   ffee
000abc   c006     movff   0x6, 0xfef       	MOVFF	r0x06, INDF0
000abe   ffef
000ac0   010a     movlb   0xa              	BANKSEL	_Mode
                                           ;	.line	200; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(Mode & AMODE_CROSS) {
000ac2   a52b     btfss   0x2b, 0x2, 0x1   	BTFSS	_Mode, 2, B
000ac4   d05a     bra     0xb7a            	BRA	_00272_DS_
                                           ; ;multiply lit val:0x02 by variable _analogSend_chan_1_104 and store in r0x07
000ac6   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
                                           ;	.line	201; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(Dist[chan] != 0) {
000ac8   512e     movf    0x2e, 0, 0x1     	MOVF	_analogSend_chan_1_104, W, B
000aca   0d02     mullw   0x2              	MULLW	0x02
000acc   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000ace   6e08     movwf   0x8, 0           	MOVWF	r0x08
000ad0   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
000ad2   f007
000ad4   0ed3     movlw   0xd3             	MOVLW	LOW(_Dist)
000ad6   2407     addwf   0x7, 0, 0        	ADDWF	r0x07, W
000ad8   6e09     movwf   0x9, 0           	MOVWF	r0x09
000ada   0e04     movlw   0x4              	MOVLW	HIGH(_Dist)
000adc   2008     addwfc  0x8, 0, 0        	ADDWFC	r0x08, W
000ade   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000ae0   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
000ae2   ffe9
000ae4   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
000ae6   ffea
000ae8   cfee     movff   0xfee, 0xb       	MOVFF	POSTINC0, r0x0b
000aea   f00b
000aec   cfef     movff   0xfef, 0xc       	MOVFF	INDF0, r0x0c
000aee   f00c
000af0   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000af2   100c     iorwf   0xc, 0, 0        	IORWF	r0x0c, W
000af4   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
000af6   d041     bra     0xb7a            	BRA	_00272_DS_
                                           ;	.line	202; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	d = v - inValue[chan];
000af8   0e39     movlw   0x39             	MOVLW	LOW(_inValue)
000afa   2607     addwf   0x7, 0x1, 0      	ADDWF	r0x07, F
000afc   0e04     movlw   0x4              	MOVLW	HIGH(_inValue)
000afe   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
000b00   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
000b02   ffe9
000b04   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
000b06   ffea
000b08   cfee     movff   0xfee, 0x7       	MOVFF	POSTINC0, r0x07
000b0a   f007
000b0c   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
000b0e   f008
000b10   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b12   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000b14   6e03     movwf   0x3, 0           	MOVWF	r0x03
000b16   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000b18   5806     subwfb  0x6, 0, 0        	SUBWFB	r0x06, W
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x03, W
                                           ; #	IORWF	r0x04, W
                                           ;	.line	203; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if((d != 0) && ((d > 0) == (Dist[chan] > 0))) { 
000b1a   6e04     movwf   0x4, 0           	MOVWF	r0x04
000b1c   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
000b1e   e01c     bz      0xb58            	BZ	_00266_DS_
000b20   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000b22   0f80     addlw   0x80             	ADDLW	0x80
000b24   0f80     addlw   0x80             	ADDLW	0x80
000b26   e102     bnz     0xb2c            	BNZ	_00364_DS_
000b28   0e01     movlw   0x1              	MOVLW	0x01
000b2a   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _00364_DS_:
000b2c   6a07     clrf    0x7, 0           	CLRF	r0x07
000b2e   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
000b30   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000b32   0f80     addlw   0x80             	ADDLW	0x80
000b34   0f80     addlw   0x80             	ADDLW	0x80
000b36   e102     bnz     0xb3c            	BNZ	_00366_DS_
000b38   0e01     movlw   0x1              	MOVLW	0x01
000b3a   5c0b     subwf   0xb, 0, 0        	SUBWF	r0x0b, W
                                           _00366_DS_:
000b3c   6a0b     clrf    0xb, 0           	CLRF	r0x0b
000b3e   360b     rlcf    0xb, 0x1, 0      	RLCF	r0x0b, F
000b40   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b42   180b     xorwf   0xb, 0, 0        	XORWF	r0x0b, W
000b44   e109     bnz     0xb58            	BNZ	_00266_DS_
                                           ;	.line	204; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Dist[chan] = d;
000b46   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
000b48   ffe9
000b4a   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
000b4c   ffea
000b4e   c003     movff   0x3, 0xfee       	MOVFF	r0x03, POSTINC0
000b50   ffee
000b52   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
000b54   ffef
                                           ;	.line	205; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	continue; 
000b56   d67f     bra     0x856            	BRA	_00279_DS_
                                           ; ;multiply lit val:0x02 by variable _analogSend_chan_1_104 and store in r0x03
                                           _00266_DS_:
000b58   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
                                           ;	.line	207; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	else Dist[chan] = 0;
000b5a   512e     movf    0x2e, 0, 0x1     	MOVF	_analogSend_chan_1_104, W, B
000b5c   0d02     mullw   0x2              	MULLW	0x02
000b5e   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000b60   6e04     movwf   0x4, 0           	MOVWF	r0x04
000b62   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000b64   f003
000b66   0ed3     movlw   0xd3             	MOVLW	LOW(_Dist)
000b68   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000b6a   0e04     movlw   0x4              	MOVLW	HIGH(_Dist)
000b6c   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000b6e   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000b70   ffe9
000b72   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000b74   ffea
000b76   6aee     clrf    0xee, 0          	CLRF	POSTINC0
000b78   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           _00272_DS_:
000b7a   010a     movlb   0xa              	BANKSEL	_Mode
                                           ;	.line	211; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(Mode & AMODE_NUM) {
000b7c   a32b     btfss   0x2b, 0x1, 0x1   	BTFSS	_Mode, 1, B
000b7e   d043     bra     0xc06            	BRA	_00276_DS_
                                           ;	.line	212; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if( !len ) buf[len++] = 'B';
000b80   5000     movf    0, 0, 0          	MOVF	r0x00, W
000b82   e10e     bnz     0xba0            	BNZ	_00274_DS_
000b84   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
000b86   f003
000b88   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
000b8a   6a04     clrf    0x4, 0           	CLRF	r0x04
000b8c   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_104)
000b8e   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000b90   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_104)
000b92   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000b94   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000b96   ffe9
000b98   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000b9a   ffea
000b9c   0e42     movlw   0x42             	MOVLW	0x42
000b9e   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           _00274_DS_:
                                           ;	.line	213; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	buf[len++] = chan + 100;
000ba0   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
000ba2   f003
000ba4   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
000ba6   6a04     clrf    0x4, 0           	CLRF	r0x04
000ba8   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_104)
000baa   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000bac   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_104)
000bae   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000bb0   0e64     movlw   0x64             	MOVLW	0x64
000bb2   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
000bb4   252e     addwf   0x2e, 0, 0x1     	ADDWF	_analogSend_chan_1_104, W, B
000bb6   6e07     movwf   0x7, 0           	MOVWF	r0x07
000bb8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000bba   ffe9
000bbc   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000bbe   ffea
000bc0   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
000bc2   ffef
                                           ;	.line	214; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	buf[len++] = v >> 8;
000bc4   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
000bc6   f003
000bc8   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
000bca   6a04     clrf    0x4, 0           	CLRF	r0x04
000bcc   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_104)
000bce   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000bd0   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_104)
000bd2   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000bd4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000bd6   6e07     movwf   0x7, 0           	MOVWF	r0x07
000bd8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000bda   ffe9
000bdc   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000bde   ffea
000be0   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
000be2   ffef
                                           ;	.line	215; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	buf[len++] = v & 255;
000be4   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
000be6   f003
000be8   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
000bea   6a04     clrf    0x4, 0           	CLRF	r0x04
000bec   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_104)
000bee   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000bf0   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_104)
000bf2   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000bf4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000bf6   6e07     movwf   0x7, 0           	MOVWF	r0x07
000bf8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000bfa   ffe9
000bfc   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000bfe   ffea
000c00   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
000c02   ffef
000c04   d628     bra     0x856            	BRA	_00279_DS_
                                           _00276_DS_:
                                           ;	.line	217; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	else printf("C A %d %d\n",chan,v);
000c06   ca2e     movff   0xa2e, 0x3       	MOVFF	_analogSend_chan_1_104, r0x03
000c08   f003
000c0a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000c0c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c0e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000c10   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c12   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
000c14   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000c16   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c18   0e00     movlw   0                	MOVLW	UPPER(___str_0)
000c1a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c1c   0e26     movlw   0x26             	MOVLW	HIGH(___str_0)
000c1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c20   0e5a     movlw   0x5a             	MOVLW	LOW(___str_0)
000c22   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c24   ec2b     call    0x3256, 0        	CALL	_printf
000c26   f019
000c28   0e07     movlw   0x7              	MOVLW	0x07
000c2a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000c2c   d614     bra     0x856            	BRA	_00279_DS_
                                           _00307_DS_:
000c2e   c002     movff   0x2, 0x1         	MOVFF	r0x02, r0x01
000c30   f001
                                           ;	.line	220; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if((len != 0) && (Mode & AMODE_NUM)) {
000c32   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c34   e01d     bz      0xc70            	BZ	_00283_DS_
000c36   010a     movlb   0xa              	BANKSEL	_Mode
000c38   a32b     btfss   0x2b, 0x1, 0x1   	BTFSS	_Mode, 1, B
000c3a   d01a     bra     0xc70            	BRA	_00283_DS_
                                           ;	.line	221; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	buf[len++] = '\n';
000c3c   c000     movff   0, 0x2           	MOVFF	r0x00, r0x02
000c3e   f002
000c40   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
000c42   6a03     clrf    0x3, 0           	CLRF	r0x03
000c44   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_104)
000c46   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
000c48   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_104)
000c4a   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
000c4c   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
000c4e   ffe9
000c50   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
000c52   ffea
000c54   0e0a     movlw   0xa              	MOVLW	0x0a
000c56   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           ;	.line	222; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	fraiseSend(buf,len);
000c58   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c5a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c5c   0e80     movlw   0x80             	MOVLW	0x80
000c5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c60   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_104)
000c62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c64   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_104)
000c66   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c68   ec33     call    0x2666, 0        	CALL	_fraiseSend
000c6a   f013
000c6c   0e04     movlw   0x4              	MOVLW	0x04
000c6e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00283_DS_:
                                           ;	.line	225; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	return count;		
000c70   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000c72   cfe4     movff   0xfe4, 0xc       	MOVFF	PREINC1, r0x0c
000c74   f00c
000c76   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
000c78   f00b
000c7a   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
000c7c   f00a
000c7e   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
000c80   f009
000c82   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
000c84   f008
000c86   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
000c88   f007
000c8a   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
000c8c   f006
000c8e   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
000c90   f005
000c92   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
000c94   f004
000c96   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
000c98   f003
000c9a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
000c9c   f002
000c9e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
000ca0   f001
000ca2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
000ca4   f000
000ca6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogService	code
                                           _analogService:
                                           ;	.line	107; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	unsigned char analogService(void)
000ca8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
000caa   ffe5
000cac   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
000cae   ffe5
000cb0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
000cb2   ffe5
000cb4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
000cb6   ffe5
000cb8   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
000cba   ffe5
000cbc   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
000cbe   ffe5
000cc0   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
000cc2   ffe5
000cc4   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
000cc6   ffe5
000cc8   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
000cca   ffe5
000ccc   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
000cce   ffe5
000cd0   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
000cd2   ffe5
                                           ;	.line	113; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(ADCON0bits.GO) return chan;
000cd4   a2c2     btfss   0xc2, 0x1, 0     	BTFSS	_ADCON0bits, 1
000cd6   d004     bra     0xce0            	BRA	_00166_DS_
000cd8   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
000cda   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_97, W, B
000cdc   ef67     goto    0x10ce           	GOTO	_00183_DS_
000cde   f008
                                           _00166_DS_:
000ce0   010a     movlb   0xa              	BANKSEL	_analogService_conv_1_97
                                           ;	.line	115; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(conv) {
000ce2   512d     movf    0x2d, 0, 0x1     	MOVF	_analogService_conv_1_97, W, B
000ce4   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
000ce6   d11b     bra     0xf1e            	BRA	_00176_DS_
                                           ; ;multiply lit val:0x02 by variable _analogService_chan_1_97 and store in r0x00
000ce8   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
                                           ;	.line	116; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	v = Value[chan];
000cea   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_97, W, B
000cec   0d02     mullw   0x2              	MULLW	0x02
000cee   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000cf0   6e01     movwf   0x1, 0           	MOVWF	r0x01
000cf2   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
000cf4   f000
000cf6   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
000cf8   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
000cfa   0e00     movlw   0                	MOVLW	HIGH(_Value)
000cfc   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
000cfe   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
000d00   ffe9
000d02   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
000d04   ffea
000d06   cfee     movff   0xfee, 0         	MOVFF	POSTINC0, r0x00
000d08   f000
000d0a   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
000d0c   f001
                                           ;	.line	118; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	pin = Pins[chan];
000d0e   0e23     movlw   0x23             	MOVLW	LOW(_Pins)
                                           ; removed redundant BANKSEL
000d10   252c     addwf   0x2c, 0, 0x1     	ADDWF	_analogService_chan_1_97, W, B
000d12   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d14   6a03     clrf    0x3, 0           	CLRF	r0x03
000d16   0e04     movlw   0x4              	MOVLW	HIGH(_Pins)
000d18   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
000d1a   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
000d1c   ffe9
000d1e   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
000d20   ffea
000d22   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
000d24   f002
                                           ;	.line	119; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(pin != 255) {
000d26   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d28   0aff     xorlw   0xff             	XORLW	0xff
000d2a   e101     bnz     0xd2e            	BNZ	_00213_DS_
000d2c   d052     bra     0xdd2            	BRA	_00168_DS_
                                           _00213_DS_:
                                           ;	.line	120; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitclr(*(&TRISA+(pin>>4)),pin&7);
000d2e   3802     swapf   0x2, 0, 0        	SWAPF	r0x02, W
000d30   0b0f     andlw   0xf              	ANDLW	0x0f
000d32   6e03     movwf   0x3, 0           	MOVWF	r0x03
000d34   0e92     movlw   0x92             	MOVLW	LOW(_TRISA)
000d36   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
000d38   6e04     movwf   0x4, 0           	MOVWF	r0x04
000d3a   6a05     clrf    0x5, 0           	CLRF	r0x05
000d3c   0e0f     movlw   0xf              	MOVLW	HIGH(_TRISA)
000d3e   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
000d40   6a06     clrf    0x6, 0           	CLRF	r0x06
000d42   0e92     movlw   0x92             	MOVLW	LOW(_TRISA)
000d44   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000d46   0e0f     movlw   0xf              	MOVLW	HIGH(_TRISA)
000d48   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
000d4a   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000d4c   ffe9
000d4e   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
000d50   ffea
000d52   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
000d54   f003
000d56   0e07     movlw   0x7              	MOVLW	0x07
000d58   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
000d5a   6e06     movwf   0x6, 0           	MOVWF	r0x06
000d5c   0e01     movlw   0x1              	MOVLW	0x01
000d5e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000d60   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000d62   e005     bz      0xd6e            	BZ	_00215_DS_
000d64   6ce8     negf    0xe8, 0          	NEGF	WREG
000d66   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00216_DS_:
000d68   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
000d6a   0f01     addlw   0x1              	ADDLW	0x01
000d6c   e3fd     bnc     0xd68            	BNC	_00216_DS_
                                           _00215_DS_:
000d6e   1c07     comf    0x7, 0, 0        	COMF	r0x07, W
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
000d70   6e06     movwf   0x6, 0           	MOVWF	r0x06
000d72   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
000d74   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
000d76   ffe9
000d78   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
000d7a   ffea
000d7c   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
000d7e   ffef
                                           ;	.line	121; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitclr(*(&LATA+(pin>>4)),pin&7);
000d80   3802     swapf   0x2, 0, 0        	SWAPF	r0x02, W
000d82   0b0f     andlw   0xf              	ANDLW	0x0f
000d84   6e03     movwf   0x3, 0           	MOVWF	r0x03
000d86   0e89     movlw   0x89             	MOVLW	LOW(_LATA)
000d88   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
000d8a   6e04     movwf   0x4, 0           	MOVWF	r0x04
000d8c   6a05     clrf    0x5, 0           	CLRF	r0x05
000d8e   0e0f     movlw   0xf              	MOVLW	HIGH(_LATA)
000d90   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
000d92   6a06     clrf    0x6, 0           	CLRF	r0x06
000d94   0e89     movlw   0x89             	MOVLW	LOW(_LATA)
000d96   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000d98   0e0f     movlw   0xf              	MOVLW	HIGH(_LATA)
000d9a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
000d9c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000d9e   ffe9
000da0   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
000da2   ffea
000da4   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
000da6   f003
000da8   0e07     movlw   0x7              	MOVLW	0x07
000daa   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
000dac   6e06     movwf   0x6, 0           	MOVWF	r0x06
000dae   0e01     movlw   0x1              	MOVLW	0x01
000db0   6e07     movwf   0x7, 0           	MOVWF	r0x07
000db2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000db4   e005     bz      0xdc0            	BZ	_00219_DS_
000db6   6ce8     negf    0xe8, 0          	NEGF	WREG
000db8   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00220_DS_:
000dba   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
000dbc   0f01     addlw   0x1              	ADDLW	0x01
000dbe   e3fd     bnc     0xdba            	BNC	_00220_DS_
                                           _00219_DS_:
000dc0   1c07     comf    0x7, 0, 0        	COMF	r0x07, W
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
000dc2   6e06     movwf   0x6, 0           	MOVWF	r0x06
000dc4   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
000dc6   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
000dc8   ffe9
000dca   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
000dcc   ffea
000dce   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
000dd0   ffef
                                           ; ;multiply lit val:0x02 by variable _analogService_chan_1_97 and store in r0x03
                                           _00168_DS_:
000dd2   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
                                           ;	.line	123; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Value[chan] = v - (v>>ANALOG_FILTER) + ADRESL+(ADRESH<<8); 
000dd4   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_97, W, B
000dd6   0d02     mullw   0x2              	MULLW	0x02
000dd8   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000dda   6e04     movwf   0x4, 0           	MOVWF	r0x04
000ddc   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000dde   f003
000de0   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
000de2   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000de4   0e00     movlw   0                	MOVLW	HIGH(_Value)
000de6   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000de8   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
000dea   3001     rrcf    0x1, 0, 0        	RRCF	r0x01, W
000dec   6e06     movwf   0x6, 0           	MOVWF	r0x06
000dee   3000     rrcf    0, 0, 0          	RRCF	r0x00, W
000df0   6e05     movwf   0x5, 0           	MOVWF	r0x05
000df2   3406     rlcf    0x6, 0, 0        	RLCF	r0x06, W
000df4   3206     rrcf    0x6, 0x1, 0      	RRCF	r0x06, F
000df6   3205     rrcf    0x5, 0x1, 0      	RRCF	r0x05, F
000df8   3406     rlcf    0x6, 0, 0        	RLCF	r0x06, W
000dfa   3206     rrcf    0x6, 0x1, 0      	RRCF	r0x06, F
000dfc   3205     rrcf    0x5, 0x1, 0      	RRCF	r0x05, F
000dfe   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000e00   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
000e02   6e05     movwf   0x5, 0           	MOVWF	r0x05
000e04   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000e06   5801     subwfb  0x1, 0, 0        	SUBWFB	r0x01, W
000e08   6e06     movwf   0x6, 0           	MOVWF	r0x06
000e0a   cfc3     movff   0xfc3, 0x7       	MOVFF	_ADRESL, r0x07
000e0c   f007
000e0e   6a08     clrf    0x8, 0           	CLRF	r0x08
000e10   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000e12   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
000e14   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000e16   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
000e18   cfc4     movff   0xfc4, 0x7       	MOVFF	_ADRESH, r0x07
000e1a   f007
000e1c   6a08     clrf    0x8, 0           	CLRF	r0x08
000e1e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000e20   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000e22   6a09     clrf    0x9, 0           	CLRF	r0x09
000e24   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000e26   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
000e28   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000e2a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
000e2c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000e2e   ffe9
000e30   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000e32   ffea
000e34   c005     movff   0x5, 0xfee       	MOVFF	r0x05, POSTINC0
000e36   ffee
000e38   c006     movff   0x6, 0xfef       	MOVFF	r0x06, INDF0
000e3a   ffef
000e3c   010a     movlb   0xa              	BANKSEL	_Scaling
                                           ;	.line	124; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(Scaling == 1) {
000e3e   5128     movf    0x28, 0, 0x1     	MOVF	_Scaling, W, B
000e40   0a01     xorlw   0x1              	XORLW	0x01
000e42   e001     bz      0xe46            	BZ	_00223_DS_
000e44   d06a     bra     0xf1a            	BRA	_00174_DS_
                                           ; ;multiply lit val:0x02 by variable _analogService_chan_1_97 and store in r0x03
                                           _00223_DS_:
000e46   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
                                           ;	.line	125; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	v = Value[chan];
000e48   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_97, W, B
000e4a   0d02     mullw   0x2              	MULLW	0x02
000e4c   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000e4e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000e50   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000e52   f003
000e54   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
000e56   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
000e58   6e05     movwf   0x5, 0           	MOVWF	r0x05
000e5a   0e00     movlw   0                	MOVLW	HIGH(_Value)
000e5c   2004     addwfc  0x4, 0, 0        	ADDWFC	r0x04, W
000e5e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000e60   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
000e62   ffe9
000e64   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
000e66   ffea
000e68   cfee     movff   0xfee, 0         	MOVFF	POSTINC0, r0x00
000e6a   f000
000e6c   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
000e6e   f001
                                           ;	.line	126; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(v < (Min[chan]-MINMAX_MARGIN)) Min[chan] = v+MINMAX_MARGIN;
000e70   0e93     movlw   0x93             	MOVLW	LOW(_Min)
000e72   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000e74   0e04     movlw   0x4              	MOVLW	HIGH(_Min)
000e76   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000e78   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000e7a   ffe9
000e7c   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000e7e   ffea
000e80   cfee     movff   0xfee, 0x5       	MOVFF	POSTINC0, r0x05
000e82   f005
000e84   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
000e86   f006
000e88   0e9c     movlw   0x9c             	MOVLW	0x9c
000e8a   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
000e8c   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
000e8e   0606     decf    0x6, 0x1, 0      	DECF	r0x06, F
000e90   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000e92   0f80     addlw   0x80             	ADDLW	0x80
000e94   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000e96   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000e98   0f80     addlw   0x80             	ADDLW	0x80
000e9a   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
000e9c   e102     bnz     0xea2            	BNZ	_00224_DS_
000e9e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000ea0   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00224_DS_:
000ea2   e20e     bc      0xec0            	BC	_00170_DS_
000ea4   5000     movf    0, 0, 0          	MOVF	r0x00, W
000ea6   0f64     addlw   0x64             	ADDLW	0x64
000ea8   6e05     movwf   0x5, 0           	MOVWF	r0x05
000eaa   0e00     movlw   0                	MOVLW	0x00
000eac   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
000eae   6e06     movwf   0x6, 0           	MOVWF	r0x06
000eb0   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000eb2   ffe9
000eb4   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000eb6   ffea
000eb8   c005     movff   0x5, 0xfee       	MOVFF	r0x05, POSTINC0
000eba   ffee
000ebc   c006     movff   0x6, 0xfef       	MOVFF	r0x06, INDF0
000ebe   ffef
                                           ; ;multiply lit val:0x02 by variable _analogService_chan_1_97 and store in r0x03
                                           _00170_DS_:
000ec0   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
                                           ;	.line	127; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(v > (Max[chan]+MINMAX_MARGIN)) Max[chan] = v-MINMAX_MARGIN;
000ec2   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_97, W, B
000ec4   0d02     mullw   0x2              	MULLW	0x02
000ec6   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000ec8   6e04     movwf   0x4, 0           	MOVWF	r0x04
000eca   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000ecc   f003
000ece   0eb3     movlw   0xb3             	MOVLW	LOW(_Max)
000ed0   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000ed2   0e04     movlw   0x4              	MOVLW	HIGH(_Max)
000ed4   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000ed6   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000ed8   ffe9
000eda   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000edc   ffea
000ede   cfee     movff   0xfee, 0x5       	MOVFF	POSTINC0, r0x05
000ee0   f005
000ee2   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
000ee4   f006
000ee6   0e64     movlw   0x64             	MOVLW	0x64
000ee8   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
000eea   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000eec   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
000eee   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000ef0   0f80     addlw   0x80             	ADDLW	0x80
000ef2   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000ef4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000ef6   0f80     addlw   0x80             	ADDLW	0x80
000ef8   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
000efa   e102     bnz     0xf00            	BNZ	_00225_DS_
000efc   5000     movf    0, 0, 0          	MOVF	r0x00, W
000efe   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _00225_DS_:
000f00   e20c     bc      0xf1a            	BC	_00174_DS_
000f02   0e9c     movlw   0x9c             	MOVLW	0x9c
000f04   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
000f06   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
000f08   0601     decf    0x1, 0x1, 0      	DECF	r0x01, F
000f0a   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000f0c   ffe9
000f0e   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000f10   ffea
000f12   c000     movff   0, 0xfee         	MOVFF	r0x00, POSTINC0
000f14   ffee
000f16   c001     movff   0x1, 0xfef       	MOVFF	r0x01, INDF0
000f18   ffef
                                           _00174_DS_:
000f1a   010a     movlb   0xa              	BANKSEL	_analogService_conv_1_97
                                           ;	.line	129; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	conv=0;
000f1c   6b2d     clrf    0x2d, 0x1        	CLRF	_analogService_conv_1_97, B
                                           _00176_DS_:
000f1e   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
                                           ;	.line	132; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	chan++;
000f20   2b2c     incf    0x2c, 0x1, 0x1   	INCF	_analogService_chan_1_97, F, B
                                           ;	.line	133; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(chan >= ANALOG_MAX_CHANNELS) chan = 0;
000f22   0e10     movlw   0x10             	MOVLW	0x10
                                           ; #	SUBWF	_analogService_chan_1_97, W, B
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00178_DS_
                                           ; #	CLRF	_analogService_chan_1_97, B
                                           ; #	SWAPF	_analogService_chan_1_97, W, B
                                           ; removed redundant BANKSEL
                                           ;	.line	135; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(isSelected(chan))	{
000f24   5d2c     subwf   0x2c, 0, 0x1     	SUBWF	_analogService_chan_1_97, W, B
000f26   e301     bnc     0xf2a            	BNC	_20435_DS_
                                           ; removed redundant BANKSEL
000f28   6b2c     clrf    0x2c, 0x1        	CLRF	_analogService_chan_1_97, B
                                           _20435_DS_:
000f2a   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
000f2c   392c     swapf   0x2c, 0, 0x1     	SWAPF	_analogService_chan_1_97, W, B
000f2e   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
000f30   0b1f     andlw   0x1f             	ANDLW	0x1f
000f32   6e00     movwf   0, 0             	MOVWF	r0x00
000f34   6a01     clrf    0x1, 0           	CLRF	r0x01
000f36   0e49     movlw   0x49             	MOVLW	LOW(_Selected)
000f38   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
000f3a   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
000f3c   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
000f3e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
000f40   ffe9
000f42   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
000f44   ffea
000f46   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
000f48   f000
000f4a   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
000f4c   152c     andwf   0x2c, 0, 0x1     	ANDWF	_analogService_chan_1_97, W, B
000f4e   6e01     movwf   0x1, 0           	MOVWF	r0x01
000f50   0e01     movlw   0x1              	MOVLW	0x01
000f52   6e03     movwf   0x3, 0           	MOVWF	r0x03
000f54   0e00     movlw   0                	MOVLW	0x00
000f56   6e04     movwf   0x4, 0           	MOVWF	r0x04
000f58   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000f5a   e006     bz      0xf68            	BZ	_00228_DS_
000f5c   6ce8     negf    0xe8, 0          	NEGF	WREG
000f5e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00229_DS_:
000f60   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
000f62   3604     rlcf    0x4, 0x1, 0      	RLCF	r0x04, F
000f64   0f01     addlw   0x1              	ADDLW	0x01
000f66   e3fc     bnc     0xf60            	BNC	_00229_DS_
                                           _00228_DS_:
000f68   6a05     clrf    0x5, 0           	CLRF	r0x05
000f6a   5000     movf    0, 0, 0          	MOVF	r0x00, W
000f6c   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
000f6e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000f70   1604     andwf   0x4, 0x1, 0      	ANDWF	r0x04, F
000f72   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000f74   1004     iorwf   0x4, 0, 0        	IORWF	r0x04, W
000f76   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
000f78   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
000f7a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
000f7c   6a03     clrf    0x3, 0           	CLRF	r0x03
000f7e   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
000f80   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000f82   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
000f84   d0a2     bra     0x10ca           	BRA	_00182_DS_
                                           ;	.line	136; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON0=(HWChan[chan] << 2) + 1;
000f86   0e23     movlw   0x23             	MOVLW	LOW(_HWChan)
000f88   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
000f8a   252c     addwf   0x2c, 0, 0x1     	ADDWF	_analogService_chan_1_97, W, B
000f8c   6e00     movwf   0, 0             	MOVWF	r0x00
000f8e   6a01     clrf    0x1, 0           	CLRF	r0x01
000f90   0e0f     movlw   0xf              	MOVLW	HIGH(_HWChan)
000f92   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
000f94   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
000f96   ffe9
000f98   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
000f9a   ffea
000f9c   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
000f9e   f000
000fa0   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
000fa2   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
000fa4   0bfc     andlw   0xfc             	ANDLW	0xfc
000fa6   6e01     movwf   0x1, 0           	MOVWF	r0x01
000fa8   2801     incf    0x1, 0, 0        	INCF	r0x01, W
000faa   6ec2     movwf   0xc2, 0          	MOVWF	_ADCON0
                                           ;	.line	140; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	pin = Pins[chan];
000fac   0e23     movlw   0x23             	MOVLW	LOW(_Pins)
                                           ; removed redundant BANKSEL
000fae   252c     addwf   0x2c, 0, 0x1     	ADDWF	_analogService_chan_1_97, W, B
000fb0   6e00     movwf   0, 0             	MOVWF	r0x00
000fb2   6a01     clrf    0x1, 0           	CLRF	r0x01
000fb4   0e04     movlw   0x4              	MOVLW	HIGH(_Pins)
000fb6   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
000fb8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
000fba   ffe9
000fbc   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
000fbe   ffea
000fc0   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
000fc2   f002
                                           ;	.line	141; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(pin != 255) {
000fc4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000fc6   0aff     xorlw   0xff             	XORLW	0xff
000fc8   e101     bnz     0xfcc            	BNZ	_00232_DS_
000fca   d07b     bra     0x10c2           	BRA	_00180_DS_
                                           _00232_DS_:
                                           ;	.line	142; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitset(*(&TRISA+(pin>>4)),pin&7);// set channel to digital input
000fcc   3802     swapf   0x2, 0, 0        	SWAPF	r0x02, W
000fce   0b0f     andlw   0xf              	ANDLW	0x0f
000fd0   6e00     movwf   0, 0             	MOVWF	r0x00
000fd2   0e92     movlw   0x92             	MOVLW	LOW(_TRISA)
000fd4   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
000fd6   6e01     movwf   0x1, 0           	MOVWF	r0x01
000fd8   6a03     clrf    0x3, 0           	CLRF	r0x03
000fda   0e0f     movlw   0xf              	MOVLW	HIGH(_TRISA)
000fdc   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
000fde   6a04     clrf    0x4, 0           	CLRF	r0x04
000fe0   0e92     movlw   0x92             	MOVLW	LOW(_TRISA)
000fe2   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
000fe4   0e0f     movlw   0xf              	MOVLW	HIGH(_TRISA)
000fe6   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000fe8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
000fea   ffe9
000fec   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000fee   ffea
000ff0   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
000ff2   f000
000ff4   0e07     movlw   0x7              	MOVLW	0x07
000ff6   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
000ff8   6e04     movwf   0x4, 0           	MOVWF	r0x04
000ffa   0e01     movlw   0x1              	MOVLW	0x01
000ffc   6e05     movwf   0x5, 0           	MOVWF	r0x05
000ffe   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001000   e005     bz      0x100c           	BZ	_00234_DS_
001002   6ce8     negf    0xe8, 0          	NEGF	WREG
001004   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00235_DS_:
001006   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
001008   0f01     addlw   0x1              	ADDLW	0x01
00100a   e3fd     bnc     0x1006           	BNC	_00235_DS_
                                           _00234_DS_:
00100c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00100e   1200     iorwf   0, 0x1, 0        	IORWF	r0x00, F
001010   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
001012   ffe9
001014   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001016   ffea
001018   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
00101a   ffef
                                           ;	.line	143; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitset(*(__data unsigned char*)((int)&ANSELA + (pin>>4)),pin&7);// set channel to analog input
00101c   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
00101e   6e00     movwf   0, 0             	MOVWF	r0x00
001020   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001022   6e01     movwf   0x1, 0           	MOVWF	r0x01
001024   3802     swapf   0x2, 0, 0        	SWAPF	r0x02, W
001026   0b0f     andlw   0xf              	ANDLW	0x0f
001028   6e03     movwf   0x3, 0           	MOVWF	r0x03
00102a   6a04     clrf    0x4, 0           	CLRF	r0x04
00102c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00102e   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
001030   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001032   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
001034   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001036   6e05     movwf   0x5, 0           	MOVWF	r0x05
001038   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
00103a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00103c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00103e   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
001040   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001042   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
001044   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
001046   ffe9
001048   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
00104a   ffea
00104c   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
00104e   f003
001050   0e07     movlw   0x7              	MOVLW	0x07
001052   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
001054   0e01     movlw   0x1              	MOVLW	0x01
001056   6e04     movwf   0x4, 0           	MOVWF	r0x04
001058   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00105a   e005     bz      0x1066           	BZ	_00238_DS_
00105c   6ce8     negf    0xe8, 0          	NEGF	WREG
00105e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00239_DS_:
001060   3604     rlcf    0x4, 0x1, 0      	RLCF	r0x04, F
001062   0f01     addlw   0x1              	ADDLW	0x01
001064   e3fd     bnc     0x1060           	BNC	_00239_DS_
                                           _00238_DS_:
001066   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001068   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
00106a   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00106c   ffe9
00106e   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001070   ffea
001072   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
001074   ffef
001076   010f     movlb   0xf              	BANKSEL	_CTMUCONHbits
                                           ;	.line	144; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONHbits.IDISSEN = 1;		// Drain any charge on the A/D circuit
001078   8345     bsf     0x45, 0x1, 0x1   	BSF	_CTMUCONHbits, 1, B
00107a   0000     nop                      	nop	
00107c   0000     nop                      	nop	
                                           ;	.line	146; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONHbits.IDISSEN =  0;		// Stop discharge of A/D circuit
00107e   9345     bcf     0x45, 0x1, 0x1   	BCF	_CTMUCONHbits, 1, B
001080   010f     movlb   0xf              	BANKSEL	_CTMUCONLbits
                                           ;	.line	147; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONLbits.EDG2STAT = 0;		// Make sure edge2 is 0
001082   9344     bcf     0x44, 0x1, 0x1   	BCF	_CTMUCONLbits, 1, B
                                           ;	.line	156; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	}			
001084   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
001086   ffe5
001088   cff2     movff   0xff2, 0xb       	MOVFF	INTCON, r0x0b
00108a   f00b
00108c   9ef2     bcf     0xf2, 0x7, 0     	BCF	INTCON, 7
                                           ; removed redundant BANKSEL
                                           ;	.line	149; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONLbits.EDG1STAT = 1;	// Set edge1 - Start Charge
00108e   8144     bsf     0x44, 0, 0x1     	BSF	_CTMUCONLbits, 0, B
001090   0000     nop                      	nop	
001092   0000     nop                      	nop	
001094   0000     nop                      	nop	
001096   0000     nop                      	nop	
001098   0000     nop                      	nop	
00109a   0000     nop                      	nop	
00109c   0000     nop                      	nop	
00109e   0000     nop                      	nop	
0010a0   0000     nop                      	nop	
0010a2   0000     nop                      	nop	
0010a4   0000     nop                      	nop	
0010a6   0000     nop                      	nop	
0010a8   0000     nop                      	nop	
0010aa   0000     nop                      	nop	
0010ac   0000     nop                      	nop	
0010ae   0000     nop                      	nop	
0010b0   0000     nop                      	nop	
0010b2   0000     nop                      	nop	
0010b4   0000     nop                      	nop	
0010b6   0000     nop                      	nop	
                                           ;	.line	155; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONLbits.EDG1STAT = 0;	//Clear edge1 - Stop Charge
0010b8   9144     bcf     0x44, 0, 0x1     	BCF	_CTMUCONLbits, 0, B
0010ba   be0b     btfsc   0xb, 0x7, 0      	BTFSC	r0x0b, 7
0010bc   8ef2     bsf     0xf2, 0x7, 0     	BSF	INTCON, 7
0010be   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
0010c0   f00b
                                           _00180_DS_:
                                           ;	.line	158; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON0bits.GO = 1;
0010c2   82c2     bsf     0xc2, 0x1, 0     	BSF	_ADCON0bits, 1
                                           ;	.line	159; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	conv = 1;
0010c4   0e01     movlw   0x1              	MOVLW	0x01
0010c6   010a     movlb   0xa              	BANKSEL	_analogService_conv_1_97
0010c8   6f2d     movwf   0x2d, 0x1        	MOVWF	_analogService_conv_1_97, B
                                           _00182_DS_:
0010ca   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
                                           ;	.line	162; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	return chan;
0010cc   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_97, W, B
                                           _00183_DS_:
0010ce   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
0010d0   f00a
0010d2   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
0010d4   f009
0010d6   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
0010d8   f008
0010da   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
0010dc   f007
0010de   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0010e0   f006
0010e2   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0010e4   f005
0010e6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0010e8   f004
0010ea   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0010ec   f003
0010ee   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0010f0   f002
0010f2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0010f4   f001
0010f6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0010f8   f000
0010fa   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogDeselect	code
                                           _analogDeselect:
                                           ;	.line	98; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogDeselect(unsigned char chan)
0031d6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0031d8   ffe5
0031da   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0031dc   ffd9
0031de   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0031e0   ffe5
0031e2   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0031e4   ffe5
0031e6   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0031e8   ffe5
0031ea   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0031ec   ffe5
0031ee   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0031f0   ffe5
0031f2   0e02     movlw   0x2              	MOVLW	0x02
0031f4   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0031f6   f000
                                           ;	.line	100; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitclr(Selected[chan>>3],chan&7);
0031f8   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
0031fa   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
0031fc   0b1f     andlw   0x1f             	ANDLW	0x1f
0031fe   6e01     movwf   0x1, 0           	MOVWF	r0x01
003200   6a02     clrf    0x2, 0           	CLRF	r0x02
003202   0e49     movlw   0x49             	MOVLW	LOW(_Selected)
003204   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
003206   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
003208   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00320a   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00320c   ffe9
00320e   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003210   ffea
003212   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
003214   f003
003216   0e07     movlw   0x7              	MOVLW	0x07
003218   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
00321a   0e01     movlw   0x1              	MOVLW	0x01
00321c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00321e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003220   e005     bz      0x322c           	BZ	_00159_DS_
003222   6ce8     negf    0xe8, 0          	NEGF	WREG
003224   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00160_DS_:
003226   3604     rlcf    0x4, 0x1, 0      	RLCF	r0x04, F
003228   0f01     addlw   0x1              	ADDLW	0x01
00322a   e3fd     bnc     0x3226           	BNC	_00160_DS_
                                           _00159_DS_:
00322c   1c04     comf    0x4, 0, 0        	COMF	r0x04, W
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00322e   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
003230   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003232   ffe9
003234   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003236   ffea
003238   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
00323a   ffef
00323c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00323e   f004
003240   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003242   f003
003244   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003246   f002
003248   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00324a   f001
00324c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00324e   f000
003250   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003252   ffd9
003254   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogSelectAdcTouch	code
                                           _analogSelectAdcTouch:
                                           ;	.line	91; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogSelectAdcTouch(unsigned char chan,unsigned char hwchan, unsigned char *port, unsigned char bit)
002232   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002234   ffe5
002236   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002238   ffd9
00223a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00223c   ffe5
00223e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002240   ffe5
002242   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002244   ffe5
002246   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002248   ffe5
00224a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00224c   ffe5
00224e   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002250   ffe5
002252   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002254   ffe5
002256   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
002258   ffe5
00225a   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
00225c   ffe5
00225e   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
002260   ffe5
002262   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
002264   ffe5
002266   0e02     movlw   0x2              	MOVLW	0x02
002268   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00226a   f000
00226c   0e03     movlw   0x3              	MOVLW	0x03
00226e   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002270   f001
002272   0e04     movlw   0x4              	MOVLW	0x04
002274   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002276   f002
002278   0e05     movlw   0x5              	MOVLW	0x05
00227a   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
00227c   f003
00227e   0e06     movlw   0x6              	MOVLW	0x06
002280   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
002282   f004
002284   0e07     movlw   0x7              	MOVLW	0x07
002286   cfdb     movff   0xfdb, 0x5       	MOVFF	PLUSW2, r0x05
002288   f005
                                           ;	.line	93; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitset(Selected[chan>>3],chan&7);
00228a   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
00228c   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
00228e   0b1f     andlw   0x1f             	ANDLW	0x1f
002290   6e06     movwf   0x6, 0           	MOVWF	r0x06
002292   6a07     clrf    0x7, 0           	CLRF	r0x07
002294   0e49     movlw   0x49             	MOVLW	LOW(_Selected)
002296   2606     addwf   0x6, 0x1, 0      	ADDWF	r0x06, F
002298   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
00229a   2207     addwfc  0x7, 0x1, 0      	ADDWFC	r0x07, F
00229c   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
00229e   ffe9
0022a0   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
0022a2   ffea
0022a4   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
0022a6   f008
0022a8   0e07     movlw   0x7              	MOVLW	0x07
0022aa   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
0022ac   6e09     movwf   0x9, 0           	MOVWF	r0x09
0022ae   0e01     movlw   0x1              	MOVLW	0x01
0022b0   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0022b2   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0022b4   e005     bz      0x22c0           	BZ	_00150_DS_
0022b6   6ce8     negf    0xe8, 0          	NEGF	WREG
0022b8   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00151_DS_:
0022ba   360a     rlcf    0xa, 0x1, 0      	RLCF	r0x0a, F
0022bc   0f01     addlw   0x1              	ADDLW	0x01
0022be   e3fd     bnc     0x22ba           	BNC	_00151_DS_
                                           _00150_DS_:
0022c0   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0022c2   1208     iorwf   0x8, 0x1, 0      	IORWF	r0x08, F
0022c4   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
0022c6   ffe9
0022c8   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
0022ca   ffea
0022cc   c008     movff   0x8, 0xfef       	MOVFF	r0x08, INDF0
0022ce   ffef
                                           ;	.line	94; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	HWChan[chan]=hwchan;
0022d0   0e23     movlw   0x23             	MOVLW	LOW(_HWChan)
0022d2   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0022d4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0022d6   6a07     clrf    0x7, 0           	CLRF	r0x07
0022d8   0e0f     movlw   0xf              	MOVLW	HIGH(_HWChan)
0022da   2207     addwfc  0x7, 0x1, 0      	ADDWFC	r0x07, F
0022dc   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
0022de   ffe9
0022e0   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
0022e2   ffea
0022e4   c001     movff   0x1, 0xfef       	MOVFF	r0x01, INDF0
0022e6   ffef
                                           ;	.line	95; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Pins[chan]=(((unsigned int)(port-&PORTA)&7)<<4) + (bit&7);
0022e8   6a01     clrf    0x1, 0           	CLRF	r0x01
0022ea   0e23     movlw   0x23             	MOVLW	LOW(_Pins)
0022ec   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0022ee   0e04     movlw   0x4              	MOVLW	HIGH(_Pins)
0022f0   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0022f2   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0022f4   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
0022f6   0e07     movlw   0x7              	MOVLW	0x07
0022f8   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
0022fa   3802     swapf   0x2, 0, 0        	SWAPF	r0x02, W
0022fc   0bf0     andlw   0xf0             	ANDLW	0xf0
0022fe   6e03     movwf   0x3, 0           	MOVWF	r0x03
002300   0e07     movlw   0x7              	MOVLW	0x07
002302   1605     andwf   0x5, 0x1, 0      	ANDWF	r0x05, F
002304   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002306   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
002308   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00230a   ffe9
00230c   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00230e   ffea
002310   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
002312   ffef
002314   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
002316   f00a
002318   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
00231a   f009
00231c   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
00231e   f008
002320   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
002322   f007
002324   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002326   f006
002328   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00232a   f005
00232c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00232e   f004
002330   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002332   f003
002334   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002336   f002
002338   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00233a   f001
00233c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00233e   f000
002340   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002342   ffd9
002344   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogSelectAdc	code
                                           _analogSelectAdc:
                                           ;	.line	84; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogSelectAdc(unsigned char chan,unsigned char hwchan )
002acc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002ace   ffe5
002ad0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002ad2   ffd9
002ad4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002ad6   ffe5
002ad8   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002ada   ffe5
002adc   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002ade   ffe5
002ae0   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002ae2   ffe5
002ae4   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002ae6   ffe5
002ae8   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002aea   ffe5
002aec   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002aee   ffe5
002af0   0e02     movlw   0x2              	MOVLW	0x02
002af2   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002af4   f000
002af6   0e03     movlw   0x3              	MOVLW	0x03
002af8   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002afa   f001
                                           ;	.line	86; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitset(Selected[chan>>3],chan&7);
002afc   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
002afe   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002b00   0b1f     andlw   0x1f             	ANDLW	0x1f
002b02   6e02     movwf   0x2, 0           	MOVWF	r0x02
002b04   6a03     clrf    0x3, 0           	CLRF	r0x03
002b06   0e49     movlw   0x49             	MOVLW	LOW(_Selected)
002b08   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
002b0a   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
002b0c   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
002b0e   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
002b10   ffe9
002b12   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
002b14   ffea
002b16   cfef     movff   0xfef, 0x4       	MOVFF	INDF0, r0x04
002b18   f004
002b1a   0e07     movlw   0x7              	MOVLW	0x07
002b1c   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
002b1e   6e05     movwf   0x5, 0           	MOVWF	r0x05
002b20   0e01     movlw   0x1              	MOVLW	0x01
002b22   6e06     movwf   0x6, 0           	MOVWF	r0x06
002b24   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002b26   e005     bz      0x2b32           	BZ	_00141_DS_
002b28   6ce8     negf    0xe8, 0          	NEGF	WREG
002b2a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00142_DS_:
002b2c   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
002b2e   0f01     addlw   0x1              	ADDLW	0x01
002b30   e3fd     bnc     0x2b2c           	BNC	_00142_DS_
                                           _00141_DS_:
002b32   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
002b34   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
002b36   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
002b38   ffe9
002b3a   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
002b3c   ffea
002b3e   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
002b40   ffef
                                           ;	.line	87; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	HWChan[chan]=hwchan;
002b42   0e23     movlw   0x23             	MOVLW	LOW(_HWChan)
002b44   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002b46   6e02     movwf   0x2, 0           	MOVWF	r0x02
002b48   6a03     clrf    0x3, 0           	CLRF	r0x03
002b4a   0e0f     movlw   0xf              	MOVLW	HIGH(_HWChan)
002b4c   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
002b4e   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
002b50   ffe9
002b52   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
002b54   ffea
002b56   c001     movff   0x1, 0xfef       	MOVFF	r0x01, INDF0
002b58   ffef
                                           ;	.line	88; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Pins[chan]=255;
002b5a   6a01     clrf    0x1, 0           	CLRF	r0x01
002b5c   0e23     movlw   0x23             	MOVLW	LOW(_Pins)
002b5e   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002b60   0e04     movlw   0x4              	MOVLW	HIGH(_Pins)
002b62   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002b64   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002b66   ffe9
002b68   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
002b6a   ffea
002b6c   0eff     movlw   0xff             	MOVLW	0xff
002b6e   68ef     setf    0xef, 0          	SETF	INDF0
002b70   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002b72   f006
002b74   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002b76   f005
002b78   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002b7a   f004
002b7c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002b7e   f003
002b80   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002b82   f002
002b84   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002b86   f001
002b88   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002b8a   f000
002b8c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002b8e   ffd9
002b90   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogInitTouch	code
                                           _analogInitTouch:
003d52   010f     movlb   0xf              	BANKSEL	_CTMUCONH
                                           ;	.line	78; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONH = 0x00;
003d54   6b45     clrf    0x45, 0x1        	CLRF	_CTMUCONH, B
                                           ;	.line	79; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONL = 0x90;
003d56   0e90     movlw   0x90             	MOVLW	0x90
003d58   010f     movlb   0xf              	BANKSEL	_CTMUCONL
003d5a   6f44     movwf   0x44, 0x1        	MOVWF	_CTMUCONL, B
                                           ;	.line	80; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUICON = 0x03;			//55uA
003d5c   0e03     movlw   0x3              	MOVLW	0x03
003d5e   010f     movlb   0xf              	BANKSEL	_CTMUICON
003d60   6f43     movwf   0x43, 0x1        	MOVWF	_CTMUICON, B
003d62   010f     movlb   0xf              	BANKSEL	_CTMUCONHbits
                                           ;	.line	81; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONHbits.CTMUEN = 1;	//Enable CTMU
003d64   8f45     bsf     0x45, 0x7, 0x1   	BSF	_CTMUCONHbits, 7, B
003d66   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogInit	code
                                           _analogInit:
                                           ;	.line	52; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogInit()
002560   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002562   ffe5
002564   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002566   ffe5
002568   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00256a   ffe5
00256c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00256e   ffe5
002570   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002572   ffe5
                                           ;	.line	56; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<CHANNELS_GROUPS;i++) {
002574   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00107_DS_:
                                           ;	.line	57; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Selected[i]=0;
002576   0e49     movlw   0x49             	MOVLW	LOW(_Selected)
002578   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00257a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00257c   6a02     clrf    0x2, 0           	CLRF	r0x02
00257e   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
002580   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002582   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002584   ffe9
002586   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002588   ffea
00258a   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	56; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<CHANNELS_GROUPS;i++) {
00258c   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00258e   0e02     movlw   0x2              	MOVLW	0x02
002590   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002592   e3f1     bnc     0x2576           	BNC	_00107_DS_
                                           ;	.line	60; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<ANALOG_MAX_CHANNELS;i++) {
002594   6a00     clrf    0, 0             	CLRF	r0x00
                                           ; ;multiply lit val:0x02 by variable r0x00 and store in r0x01
                                           _00109_DS_:
                                           ;	.line	61; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Value[i]=0;
002596   5000     movf    0, 0, 0          	MOVF	r0x00, W
002598   0d02     mullw   0x2              	MULLW	0x02
00259a   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
00259c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00259e   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0025a0   f001
0025a2   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
0025a4   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0025a6   6e03     movwf   0x3, 0           	MOVWF	r0x03
0025a8   0e00     movlw   0                	MOVLW	HIGH(_Value)
0025aa   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
0025ac   6e04     movwf   0x4, 0           	MOVWF	r0x04
0025ae   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0025b0   ffe9
0025b2   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0025b4   ffea
0025b6   6aee     clrf    0xee, 0          	CLRF	POSTINC0
0025b8   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	62; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	inValue[i]=0;
0025ba   0e39     movlw   0x39             	MOVLW	LOW(_inValue)
0025bc   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0025be   6e03     movwf   0x3, 0           	MOVWF	r0x03
0025c0   0e04     movlw   0x4              	MOVLW	HIGH(_inValue)
0025c2   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
0025c4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0025c6   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0025c8   ffe9
0025ca   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0025cc   ffea
0025ce   6aee     clrf    0xee, 0          	CLRF	POSTINC0
0025d0   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	63; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	oldValue[i]=0;
0025d2   0e59     movlw   0x59             	MOVLW	LOW(_oldValue)
0025d4   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0025d6   6e03     movwf   0x3, 0           	MOVWF	r0x03
0025d8   0e04     movlw   0x4              	MOVLW	HIGH(_oldValue)
0025da   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
0025dc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0025de   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0025e0   ffe9
0025e2   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0025e4   ffea
0025e6   6aee     clrf    0xee, 0          	CLRF	POSTINC0
0025e8   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	64; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Min[i]=0;
0025ea   0e93     movlw   0x93             	MOVLW	LOW(_Min)
0025ec   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0025ee   6e03     movwf   0x3, 0           	MOVWF	r0x03
0025f0   0e04     movlw   0x4              	MOVLW	HIGH(_Min)
0025f2   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
0025f4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0025f6   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0025f8   ffe9
0025fa   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0025fc   ffea
0025fe   6aee     clrf    0xee, 0          	CLRF	POSTINC0
002600   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	65; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Max[i]=0x7FFF;
002602   0eb3     movlw   0xb3             	MOVLW	LOW(_Max)
002604   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
002606   0e04     movlw   0x4              	MOVLW	HIGH(_Max)
002608   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00260a   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00260c   ffe9
00260e   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002610   ffea
002612   68ee     setf    0xee, 0          	SETF	POSTINC0
002614   0e7f     movlw   0x7f             	MOVLW	0x7f
002616   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           ;	.line	66; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Pins[i]=255;
002618   0e23     movlw   0x23             	MOVLW	LOW(_Pins)
00261a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00261c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00261e   6a02     clrf    0x2, 0           	CLRF	r0x02
002620   0e04     movlw   0x4              	MOVLW	HIGH(_Pins)
002622   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002624   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002626   ffe9
002628   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00262a   ffea
00262c   68ef     setf    0xef, 0          	SETF	INDF0
                                           ;	.line	60; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<ANALOG_MAX_CHANNELS;i++) {
00262e   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002630   0e10     movlw   0x10             	MOVLW	0x10
002632   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002634   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002636   d7af     bra     0x2596           	BRA	_00109_DS_
                                           ;	.line	69; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON2=0b10101111; //right justified, 12 AD, RC
002638   0eaf     movlw   0xaf             	MOVLW	0xaf
00263a   6ec0     movwf   0xc0, 0          	MOVWF	_ADCON2
                                           ;	.line	70; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON1=0; //0->Vdd
00263c   6ac1     clrf    0xc1, 0          	CLRF	_ADCON1
                                           ;	.line	71; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON0=1; //on, channel 0
00263e   0e01     movlw   0x1              	MOVLW	0x01
002640   6ec2     movwf   0xc2, 0          	MOVWF	_ADCON0
                                           ;	.line	73; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON0bits.GO=1; // go !
002642   82c2     bsf     0xc2, 0x1, 0     	BSF	_ADCON0bits, 1
002644   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002646   f004
002648   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00264a   f003
00264c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00264e   f002
002650   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002652   f001
002654   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002656   f000
002658   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
00265a   2043     addwfc  0x43, 0, 0       	DB	0x43, 0x20, 0x41, 0x20, 0x25, 0x64, 0x20, 0x25, 0x64, 0x0a, 0x00
00265c   2041     addwfc  0x41, 0, 0       
00265e   6425     cpfsgt  0x25, 0          
002660   2520     addwf   0x20, 0, 0x1     
002662   0a64     xorlw   0x64             
002664   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 4350 (0x10fe) bytes ( 3.32%)
                                           ;           	 2175 (0x087f) words
                                           ; udata size:	  226 (0x00e2) bytes ( 6.14%)
                                           ; access size:	   13 (0x000d) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	___uflags
                                           	global	__entry
                                           	global	__startup
                                           	global	__do_cinit
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_stack
                                           	extern	_stack_end
                                           	extern	_TBLPTRU
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRL
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_TABLAT
                                           	extern	_POSTINC0
                                           	extern	_POSTDEC0
                                           	extern	_main
                                           	extern	_cinit
                                           
                                           
                                           	idata
                                           ___uflags	db	0x00
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_crt0iz_rloc___entry	code	0X000000
                                           __entry:
000000   efe3     goto    0x3bc6           	goto	__startup 
000002   f01d
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_crt0iz_rloc___do_cinit	code
                                           __do_cinit:
                                           	;	TBLPTR = &cinit
002f0e   0ec2     movlw   0xc2             	movlw	low(_cinit)
002f10   6ef6     movwf   0xf6, 0          	movwf	_TBLPTRL
002f12   0e3d     movlw   0x3d             	movlw	high(_cinit)
002f14   6ef7     movwf   0xf7, 0          	movwf	_TBLPTRH
002f16   0e00     movlw   0                	movlw	upper(_cinit)
002f18   6ef8     movwf   0xf8, 0          	movwf	_TBLPTRU
                                           	;	0x05 = cinit.num_init
                                           	;	movlb 0x07
002f1a   0009     tblrd   *+               	tblrd*+
002f1c   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002f1e   6e05     movwf   0x5, 0           	movwf	0x05
002f20   0009     tblrd   *+               	tblrd*+
002f22   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002f24   6e06     movwf   0x6, 0           	movwf	0x05 +1
                                           	;	while (0x05) {
                                           test:
002f26   e104     bnz     0x2f30           	bnz	cont1 ;;done1
002f28   6705     tstfsz  0x5, 0x1         	tstfsz	0x05, 1
002f2a   d002     bra     0x2f30           	bra	cont1
                                           done1:
002f2c   efd4     goto    0x2fa8           	goto	done
002f2e   f017
                                           cont1:
                                           	;	Count down so we only have to look up the data in _cinit once.
                                           	;	At this point we know that TBLPTR points to the top of the current
                                           	;	entry in _cinit, so we can just start reading the from, to, and
                                           	;	size values.
                                           	;	read the source address low
002f30   0009     tblrd   *+               	tblrd*+
002f32   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002f34   6e00     movwf   0, 0             	movwf	0x00
                                           	;	source address high
002f36   0009     tblrd   *+               	tblrd*+
002f38   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002f3a   6e01     movwf   0x1, 0           	movwf	0x00 + 1
                                           	;	source address upper
002f3c   0009     tblrd   *+               	tblrd*+
002f3e   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002f40   6e02     movwf   0x2, 0           	movwf	0x00 + 2
                                           	;	skip a byte since it is stored as a 32bit int
002f42   0009     tblrd   *+               	tblrd*+
                                           	;	read the destination address directly into FSR0
                                           	;	destination address low
002f44   0009     tblrd   *+               	tblrd*+
002f46   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002f48   6ee9     movwf   0xe9, 0          	movwf	_FSR0L
                                           	;	destination address high
002f4a   0009     tblrd   *+               	tblrd*+
002f4c   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002f4e   6eea     movwf   0xea, 0          	movwf	_FSR0H
                                           	;	skip two bytes since it is stored as a 32bit int
002f50   0009     tblrd   *+               	tblrd*+
002f52   0009     tblrd   *+               	tblrd*+
                                           	;	read the size of data to transfer to destination address
002f54   0009     tblrd   *+               	tblrd*+
002f56   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002f58   6e03     movwf   0x3, 0           	movwf	0x03
002f5a   0009     tblrd   *+               	tblrd*+
002f5c   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002f5e   6e04     movwf   0x4, 0           	movwf	0x03 +1
                                           	;	skip two bytes since it is stored as a 32bit int
002f60   0009     tblrd   *+               	tblrd*+
002f62   0009     tblrd   *+               	tblrd*+
                                           	;	0x00 = 0x07 ->from;
                                           	;	FSR0 = 0x07 ->to;
                                           	;	0x03 = (unsigned short) 0x07 ->size;
                                           	;	the table pointer now points to the next entry. Save it
                                           	;	off since we will be using the table pointer to do the copying
                                           	;	for the entry
                                           	;	0x07 = TBLPTR
002f64   cff6     movff   0xff6, 0x7       	movff	_TBLPTRL, 0x07
002f66   f007
002f68   cff7     movff   0xff7, 0x8       	movff	_TBLPTRH, 0x07 + 1
002f6a   f008
002f6c   cff8     movff   0xff8, 0x9       	movff	_TBLPTRU, 0x07 + 2
002f6e   f009
                                           	;	now assign the source address to the table pointer
                                           	;	TBLPTR = 0x00
002f70   c000     movff   0, 0xff6         	movff	0x00, _TBLPTRL
002f72   fff6
002f74   c001     movff   0x1, 0xff7       	movff	0x00 + 1, _TBLPTRH
002f76   fff7
002f78   c002     movff   0x2, 0xff8       	movff	0x00 + 2, _TBLPTRU
002f7a   fff8
                                           	;	do the copy loop
                                           	;	determine if we have any more bytes to copy
                                           	;	movlb 0x03
002f7c   5003     movf    0x3, 0, 0        	movf	0x03, w
                                           copy_loop:
002f7e   e102     bnz     0x2f84           	bnz	copy_one_byte ; copy_one_byte
002f80   5004     movf    0x4, 0, 0        	movf	0x03 + 1, w
002f82   e007     bz      0x2f92           	bz	done_copying
                                           copy_one_byte:
002f84   0009     tblrd   *+               	tblrd*+
002f86   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002f88   6eee     movwf   0xee, 0          	movwf	_POSTINC0
                                           	;	decrement byte counter
002f8a   0603     decf    0x3, 0x1, 0      	decf	0x03, f
002f8c   e2f8     bc      0x2f7e           	bc	copy_loop ; copy_loop
002f8e   0604     decf    0x4, 0x1, 0      	decf	0x03 + 1, f
002f90   d7f9     bra     0x2f84           	bra	copy_one_byte
                                           done_copying:
                                           	;	restore the table pointer for the next entry
                                           	;	TBLPTR = 0x07
002f92   c007     movff   0x7, 0xff6       	movff	0x07, _TBLPTRL
002f94   fff6
002f96   c008     movff   0x8, 0xff7       	movff	0x07 + 1, _TBLPTRH
002f98   fff7
002f9a   c009     movff   0x9, 0xff8       	movff	0x07 + 2, _TBLPTRU
002f9c   fff8
002f9e   0605     decf    0x5, 0x1, 0      	decf	0x05, f
002fa0   e201     bc      0x2fa4           	bc	do_next
002fa2   0606     decf    0x6, 0x1, 0      	decf	0x05 + 1, f
                                           do_next:
                                           	;	next entry...
                                           	;	_do_cinit_curr_entry--;
002fa4   ef93     goto    0x2f26           	goto	test;
002fa6   f017
                                           	;	emit done label
                                           done:
002fa8   0012     return  0                	return
                                           	
                                           ; ; Starting pCode block
                                           S_crt0iz_rloc___startup	code
                                           __startup:
003bc6   ee18     lfsr    0x1, 0x8ff       	lfsr	1, _stack_end
003bc8   f0ff
003bca   ee28     lfsr    0x2, 0x8ff       	lfsr	2, _stack_end
003bcc   f0ff
003bce   6af8     clrf    0xf8, 0          	clrf	_TBLPTRU, 0
003bd0   8ea6     bsf     0xa6, 0x7, 0     	bsf	0xa6, 7, 0
003bd2   9ca6     bcf     0xa6, 0x6, 0     	bcf	0xa6, 6, 0
                                           	
                                           	;	movlw 0xff
                                           	;	movwf _FSR0L, 0
003bd4   68e9     setf    0xe9, 0          	setf	_FSR0L
003bd6   0e0e     movlw   0xe              	movlw	0x0e
003bd8   6eea     movwf   0xea, 0          	movwf	_FSR0H, 0
                                           	;	movlw 1
                                           	;	movwf 0x00, 0
003bda   6800     setf    0, 0             	setf	0x00
003bdc   0e00     movlw   0                	movlw	0x00
                                           clear_loop:
003bde   6aed     clrf    0xed, 0          	clrf	_POSTDEC0
003be0   5000     movf    0, 0, 0          	movf	0x00, w
003be2   e1fd     bnz     0x3bde           	bnz	clear_loop
                                           	
                                           ;	.line	107; C:/Users/sarto/Documents/Pd/externals/Fraise/core/crt0iz-rloc.c	_do_cinit();
003be4   ec87     call    0x2f0e, 0        	CALL	__do_cinit
003be6   f017
                                           ;	.line	110; C:/Users/sarto/Documents/Pd/externals/Fraise/core/crt0iz-rloc.c	main();
003be8   ec06     call    0xc, 0           	CALL	_main
003bea   f000
                                           _00110_DS_:
                                           ;	.line	114; C:/Users/sarto/Documents/Pd/externals/Fraise/core/crt0iz-rloc.c	goto loop;
003bec   d7ff     bra     0x3bec           	BRA	_00110_DS_
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  276 (0x0114) bytes ( 0.21%)
                                           ;           	  138 (0x008a) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
