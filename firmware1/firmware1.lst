gplink-1.0.0 #932 (Jan 21 2013)
Copyright (c) 1998-2012 gputils project
Listing File Generated: 4-7-2021  18:29:54
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_Generic26kSetup
                                           	global	_Setup
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_boardconfig__Setup	code
                                           _Setup:
                                           ;	.line	24; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/boardconfig.c	Generic26kSetup();
003ca4   ecf4     call    0x3be8, 0        	CALL	_Generic26kSetup
003ca6   f01d
003ca8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_boardconfig__Generic26kSetup	code
                                           _Generic26kSetup:
                                           ;	.line	24; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	OSCCON=0b01110000;
003be8   0e70     movlw   0x70             	MOVLW	0x70
003bea   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCON
                                           ;	.line	25; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	OSCTUNEbits.PLLEN=1;
003bec   8c9b     bsf     0x9b, 0x6, 0     	BSF	_OSCTUNEbits, 6
                                           ; #	MOVLW	0xff
                                           ; #	MOVWF	_TRISA
                                           ; #	MOVLW	0xff
                                           ;	.line	29; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISA=0xff;
003bee   0eff     movlw   0xff             	MOVLW	0xff
                                           ;	.line	30; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISB=0xff;
003bf0   6892     setf    0x92, 0          	SETF	_TRISA
                                           ;	.line	31; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISC=0xff;
003bf2   6893     setf    0x93, 0          	SETF	_TRISB
                                           ; #	MOVLW	0xff
                                           ; #	MOVWF	_TRISC
                                           ; #	MOVLW	0xff
                                           ;	.line	32; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISE=0xff;
003bf4   6894     setf    0x94, 0          	SETF	_TRISC
003bf6   6896     setf    0x96, 0          	SETF	_TRISE
                                           ;	.line	33; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	IOCB=0; //disable all 4 portB "interrupt on change"
003bf8   6a62     clrf    0x62, 0          	CLRF	_IOCB
                                           ;	.line	34; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	INTCON2bits.RBPU=0; //enable PORTB weak pullups
003bfa   9ef1     bcf     0xf1, 0x7, 0     	BCF	_INTCON2bits, 7
003bfc   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	   28 (0x001c) bytes ( 0.02%)
                                           ;           	   14 (0x000e) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_setup
                                           	global	_loop
                                           	global	_fraiseReceiveChar
                                           	global	_mainDelay
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_printf
                                           	extern	_putchar
                                           	extern	_time
                                           	extern	_fraiseService
                                           	extern	_fraiseGetChar
                                           	extern	_fraiseGetLen
                                           	extern	_fruitInit
                                           	extern	_analogSelectAdc
                                           	extern	_analogInit
                                           	extern	_analogService
                                           	extern	_analogSend
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x05	res	1
                                           
                                           udata_main_0	udata
                                           _mainDelay	res	4
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__fraiseReceiveChar	code
                                           _fraiseReceiveChar:
                                           ;	.line	46; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	void fraiseReceiveChar() // receive text
003216   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003218   ffe5
00321a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00321c   ffe5
                                           ;	.line	50; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	c=fraiseGetChar();
00321e   ecf6     call    0x35ec, 0        	CALL	_fraiseGetChar
003220   f01a
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	51; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	if(c=='L'){		//switch LED on/off 
003222   6e00     movwf   0, 0             	MOVWF	r0x00
003224   0a4c     xorlw   0x4c             	XORLW	0x4c
003226   e108     bnz     0x3238           	BNZ	_00165_DS_
                                           ;	.line	52; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	c=fraiseGetChar();
003228   ecf6     call    0x35ec, 0        	CALL	_fraiseGetChar
00322a   f01a
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	53; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	digitalWrite(LED, c!='0');		
00322c   0a30     xorlw   0x30             	XORLW	0x30
00322e   e002     bz      0x3234           	BZ	_00154_DS_
003230   828b     bsf     0x8b, 0x1, 0     	BSF	_LATCbits, 1
003232   d029     bra     0x3286           	BRA	_00167_DS_
                                           _00154_DS_:
003234   928b     bcf     0x8b, 0x1, 0     	BCF	_LATCbits, 1
003236   d027     bra     0x3286           	BRA	_00167_DS_
                                           _00165_DS_:
                                           ;	.line	55; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	else if(c=='E') { 	// echo text (send it back to host)
003238   5000     movf    0, 0, 0          	MOVF	r0x00, W
00323a   0a45     xorlw   0x45             	XORLW	0x45
00323c   e124     bnz     0x3286           	BNZ	_00167_DS_
                                           ;	.line	56; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	printf("C");
00323e   0e00     movlw   0                	MOVLW	UPPER(___str_0)
003240   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003242   0e19     movlw   0x19             	MOVLW	HIGH(___str_0)
003244   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003246   0e96     movlw   0x96             	MOVLW	LOW(___str_0)
003248   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00324a   ec8c     call    0x3118, 0        	CALL	_printf
00324c   f018
00324e   0e03     movlw   0x3              	MOVLW	0x03
003250   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	57; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	c = fraiseGetLen(); 			// get length of current packet
003252   ec58     call    0x3cb0, 0        	CALL	_fraiseGetLen
003254   f01e
003256   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _00159_DS_:
                                           ;	.line	58; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	while(c--) printf("%c",fraiseGetChar());// send each received byte
003258   c000     movff   0, 0x1           	MOVFF	r0x00, r0x01
00325a   f001
00325c   0600     decf    0, 0x1, 0        	DECF	r0x00, F
00325e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003260   e00f     bz      0x3280           	BZ	_00161_DS_
003262   ecf6     call    0x35ec, 0        	CALL	_fraiseGetChar
003264   f01a
003266   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003268   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00326a   0e00     movlw   0                	MOVLW	UPPER(___str_1)
00326c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00326e   0e19     movlw   0x19             	MOVLW	HIGH(___str_1)
003270   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003272   0e98     movlw   0x98             	MOVLW	LOW(___str_1)
003274   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003276   ec8c     call    0x3118, 0        	CALL	_printf
003278   f018
00327a   0e05     movlw   0x5              	MOVLW	0x05
00327c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00327e   d7ec     bra     0x3258           	BRA	_00159_DS_
                                           _00161_DS_:
                                           ;	.line	59; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	putchar('\n');				// end of line
003280   0e0a     movlw   0xa              	MOVLW	0x0a
003282   ec6a     call    0x34d4, 0        	CALL	_putchar
003284   f01a
                                           _00167_DS_:
003286   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003288   f001
00328a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00328c   f000
00328e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	32; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	void loop() {
002e6c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002e6e   ffe5
002e70   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002e72   ffe5
002e74   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002e76   ffe5
002e78   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002e7a   ffe5
                                           ;	.line	34; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	fraiseService();	// listen to Fraise events
002e7c   ecf0     call    0x1fe0, 0        	CALL	_fraiseService
002e7e   f00f
                                           ;	.line	35; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogService();	// analog management routine
002e80   ec54     call    0xca8, 0         	CALL	_analogService
002e82   f006
                                           ;	.line	37; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	if(delayFinished(mainDelay)) // when mainDelay triggers :
002e84   eccc     call    0x3598, 0        	CALL	_time
002e86   f01a
002e88   6e00     movwf   0, 0             	MOVWF	r0x00
002e8a   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
002e8c   f001
002e8e   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
002e90   f002
002e92   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
002e94   f003
002e96   0104     movlb   0x4              	BANKSEL	_mainDelay
002e98   5133     movf    0x33, 0, 0x1     	MOVF	_mainDelay, W, B
002e9a   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
                                           ; removed redundant BANKSEL
002e9c   5134     movf    0x34, 0, 0x1     	MOVF	(_mainDelay + 1), W, B
002e9e   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
                                           ; removed redundant BANKSEL
002ea0   5135     movf    0x35, 0, 0x1     	MOVF	(_mainDelay + 2), W, B
002ea2   5a02     subwfb  0x2, 0x1, 0      	SUBWFB	r0x02, F
                                           ; removed redundant BANKSEL
002ea4   5136     movf    0x36, 0, 0x1     	MOVF	(_mainDelay + 3), W, B
002ea6   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
002ea8   9e03     bcf     0x3, 0x7, 0      	BCF	r0x03, 7
002eaa   0e3f     movlw   0x3f             	MOVLW	0x3f
002eac   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
002eae   e108     bnz     0x2ec0           	BNZ	_00148_DS_
002eb0   0eff     movlw   0xff             	MOVLW	0xff
002eb2   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
002eb4   e105     bnz     0x2ec0           	BNZ	_00148_DS_
002eb6   0eff     movlw   0xff             	MOVLW	0xff
002eb8   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002eba   e102     bnz     0x2ec0           	BNZ	_00148_DS_
002ebc   0eff     movlw   0xff             	MOVLW	0xff
002ebe   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00148_DS_:
002ec0   e216     bc      0x2eee           	BC	_00142_DS_
                                           ;	.line	39; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	delayStart(mainDelay, 5000); 	// re-init mainDelay
002ec2   eccc     call    0x3598, 0        	CALL	_time
002ec4   f01a
002ec6   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
002ec8   f001
002eca   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
002ecc   f002
002ece   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
002ed0   f003
002ed2   0f88     addlw   0x88             	ADDLW	0x88
002ed4   0104     movlb   0x4              	BANKSEL	_mainDelay
002ed6   6f33     movwf   0x33, 0x1        	MOVWF	_mainDelay, B
002ed8   0e13     movlw   0x13             	MOVLW	0x13
002eda   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
                                           ; removed redundant BANKSEL
002edc   6f34     movwf   0x34, 0x1        	MOVWF	(_mainDelay + 1), B
002ede   0e00     movlw   0                	MOVLW	0x00
002ee0   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
                                           ; removed redundant BANKSEL
002ee2   6f35     movwf   0x35, 0x1        	MOVWF	(_mainDelay + 2), B
002ee4   0e00     movlw   0                	MOVLW	0x00
002ee6   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
002ee8   6f36     movwf   0x36, 0x1        	MOVWF	(_mainDelay + 3), B
                                           ;	.line	40; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogSend();		// send analog channels that changed
002eea   ec0e     call    0x81c, 0         	CALL	_analogSend
002eec   f004
                                           _00142_DS_:
002eee   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002ef0   f003
002ef2   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002ef4   f002
002ef6   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002ef8   f001
002efa   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002efc   f000
002efe   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	13; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	void setup(void) {	
00179a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00179c   ffe5
00179e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0017a0   ffe5
0017a2   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0017a4   ffe5
0017a6   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0017a8   ffe5
0017aa   c004     movff   0x4, 0xfe5       	MOVFF	r0x05, POSTDEC1
0017ac   ffe5
                                           ;	.line	15; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	fruitInit();
0017ae   ec49     call    0x3c92, 0        	CALL	_fruitInit
0017b0   f01e
                                           ;	.line	17; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	pinModeDigitalOut(LED); 	// set the LED pin mode to digital out
0017b2   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	18; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	digitalClear(LED);		// clear the LED
0017b4   928b     bcf     0x8b, 0x1, 0     	BCF	_LATCbits, 1
                                           ;	.line	19; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	delayStart(mainDelay, 5000); 	// init the mainDelay to 5 ms
0017b6   eccc     call    0x3598, 0        	CALL	_time
0017b8   f01a
0017ba   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0017bc   f001
0017be   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
0017c0   f002
0017c2   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
0017c4   f003
0017c6   0f88     addlw   0x88             	ADDLW	0x88
0017c8   0104     movlb   0x4              	BANKSEL	_mainDelay
0017ca   6f33     movwf   0x33, 0x1        	MOVWF	_mainDelay, B
0017cc   0e13     movlw   0x13             	MOVLW	0x13
0017ce   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
                                           ; removed redundant BANKSEL
0017d0   6f34     movwf   0x34, 0x1        	MOVWF	(_mainDelay + 1), B
0017d2   0e00     movlw   0                	MOVLW	0x00
0017d4   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
                                           ; removed redundant BANKSEL
0017d6   6f35     movwf   0x35, 0x1        	MOVWF	(_mainDelay + 2), B
0017d8   0e00     movlw   0                	MOVLW	0x00
0017da   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
0017dc   6f36     movwf   0x36, 0x1        	MOVWF	(_mainDelay + 3), B
                                           ;	.line	22; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogInit();		// init analog module
0017de   ec11     call    0x2422, 0        	CALL	_analogInit
0017e0   f012
                                           ;	.line	25; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogSelect(0,K1);	// assign connector K1 to analog channel 0
0017e2   8092     bsf     0x92, 0, 0       	BSF	_TRISAbits, 0
0017e4   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0017e6   6e00     movwf   0, 0             	MOVWF	r0x00
0017e8   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0017ea   6e01     movwf   0x1, 0           	MOVWF	r0x01
0017ec   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0017ee   6e03     movwf   0x3, 0           	MOVWF	r0x03
0017f0   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0017f2   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0017f4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0017f6   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0017f8   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0017fa   6e02     movwf   0x2, 0           	MOVWF	r0x02
0017fc   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0017fe   6e03     movwf   0x3, 0           	MOVWF	r0x03
001800   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001802   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
001804   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001806   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
001808   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
00180a   6e04     movwf   0x4, 0           	MOVWF	r0x05
00180c   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
00180e   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
001810   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
001812   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
001814   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001816   6e04     movwf   0x4, 0           	MOVWF	r0x05
001818   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
00181a   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
00181c   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
00181e   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
001820   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001822   ffe9
001824   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001826   ffea
001828   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
00182a   f002
00182c   8002     bsf     0x2, 0, 0        	BSF	r0x02, 0
00182e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001830   ffe9
001832   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001834   ffea
001836   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
001838   ffef
00183a   0e00     movlw   0                	MOVLW	0x00
00183c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00183e   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
001840   ecc7     call    0x298e, 0        	CALL	_analogSelectAdc
001842   f014
001844   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001846   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	26; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogSelect(1,K2);
001848   8292     bsf     0x92, 0x1, 0     	BSF	_TRISAbits, 1
00184a   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
00184c   6e00     movwf   0, 0             	MOVWF	r0x00
00184e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001850   6e01     movwf   0x1, 0           	MOVWF	r0x01
001852   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001854   6e03     movwf   0x3, 0           	MOVWF	r0x03
001856   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001858   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00185a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00185c   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00185e   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001860   6e02     movwf   0x2, 0           	MOVWF	r0x02
001862   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001864   6e03     movwf   0x3, 0           	MOVWF	r0x03
001866   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001868   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
00186a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00186c   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
00186e   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001870   6e04     movwf   0x4, 0           	MOVWF	r0x05
001872   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001874   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
001876   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
001878   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
00187a   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
00187c   6e04     movwf   0x4, 0           	MOVWF	r0x05
00187e   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001880   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
001882   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
001884   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
001886   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001888   ffe9
00188a   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
00188c   ffea
00188e   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
001890   f002
001892   8202     bsf     0x2, 0x1, 0      	BSF	r0x02, 1
001894   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001896   ffe9
001898   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00189a   ffea
00189c   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
00189e   ffef
0018a0   0e01     movlw   0x1              	MOVLW	0x01
0018a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0018a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0018a6   ecc7     call    0x298e, 0        	CALL	_analogSelectAdc
0018a8   f014
0018aa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0018ac   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	27; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogSelect(2,K3);
0018ae   8492     bsf     0x92, 0x2, 0     	BSF	_TRISAbits, 2
0018b0   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0018b2   6e00     movwf   0, 0             	MOVWF	r0x00
0018b4   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0018b6   6e01     movwf   0x1, 0           	MOVWF	r0x01
0018b8   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0018ba   6e03     movwf   0x3, 0           	MOVWF	r0x03
0018bc   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0018be   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0018c0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0018c2   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0018c4   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0018c6   6e02     movwf   0x2, 0           	MOVWF	r0x02
0018c8   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0018ca   6e03     movwf   0x3, 0           	MOVWF	r0x03
0018cc   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0018ce   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
0018d0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0018d2   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
0018d4   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0018d6   6e04     movwf   0x4, 0           	MOVWF	r0x05
0018d8   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0018da   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
0018dc   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
0018de   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0018e0   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0018e2   6e04     movwf   0x4, 0           	MOVWF	r0x05
0018e4   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0018e6   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
0018e8   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
0018ea   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
0018ec   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
0018ee   ffe9
0018f0   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0018f2   ffea
0018f4   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
0018f6   f002
0018f8   8402     bsf     0x2, 0x2, 0      	BSF	r0x02, 2
0018fa   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0018fc   ffe9
0018fe   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001900   ffea
001902   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
001904   ffef
001906   0e02     movlw   0x2              	MOVLW	0x02
001908   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00190a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00190c   ecc7     call    0x298e, 0        	CALL	_analogSelectAdc
00190e   f014
001910   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001912   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	29; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware1/main.c	analogSelect(8,K8);
001914   8a94     bsf     0x94, 0x5, 0     	BSF	_TRISCbits, 5
001916   0e82     movlw   0x82             	MOVLW	LOW(_PORTC)
001918   6e00     movwf   0, 0             	MOVWF	r0x00
00191a   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTC)
00191c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00191e   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001920   6e03     movwf   0x3, 0           	MOVWF	r0x03
001922   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001924   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
001926   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001928   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00192a   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
00192c   6e03     movwf   0x3, 0           	MOVWF	r0x03
00192e   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001930   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
001932   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001934   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
001936   0e82     movlw   0x82             	MOVLW	LOW(_PORTC)
001938   6e02     movwf   0x2, 0           	MOVWF	r0x02
00193a   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTC)
00193c   6e03     movwf   0x3, 0           	MOVWF	r0x03
00193e   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001940   6e04     movwf   0x4, 0           	MOVWF	r0x05
001942   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001944   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
001946   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
001948   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
00194a   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
00194c   6e04     movwf   0x4, 0           	MOVWF	r0x05
00194e   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001950   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
001952   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
001954   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
001956   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001958   ffe9
00195a   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
00195c   ffea
00195e   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
001960   f002
001962   8a02     bsf     0x2, 0x5, 0      	BSF	r0x02, 5
001964   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001966   ffe9
001968   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00196a   ffea
00196c   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
00196e   ffef
001970   0e11     movlw   0x11             	MOVLW	0x11
001972   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001974   0e08     movlw   0x8              	MOVLW	0x08
001976   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001978   ecc7     call    0x298e, 0        	CALL	_analogSelectAdc
00197a   f014
00197c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00197e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001980   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x05
001982   f004
001984   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
001986   f003
001988   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00198a   f002
00198c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00198e   f001
001990   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
001992   f000
001994   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
001996   0043     dw      0x43             	DB	0x43, 0x00
                                           ; ; Starting pCode block
                                           ___str_1:
001998   6325     cpfseq  0x25, 0x1        	DB	0x25, 0x63, 0x00
00199a   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  782 (0x030e) bytes ( 0.60%)
                                           ;           	  391 (0x0187) words
                                           ; udata size:	    4 (0x0004) bytes ( 0.11%)
                                           ; access size:	    5 (0x0005) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_fruitInit
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_coreInit
                                           	extern	_fraiseInit
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_fruit__fruitInit	code
                                           _fruitInit:
                                           ;	.line	29; C:/Users/sarto/Documents/Pd/externals/Fraise/fruit/fruit.c	coreInit();	
003c92   ec20     call    0x3640, 0        	CALL	_coreInit
003c94   f01b
                                           ;	.line	30; C:/Users/sarto/Documents/Pd/externals/Fraise/fruit/fruit.c	fraiseInit();
003c96   ec9b     call    0x3536, 0        	CALL	_fraiseInit
003c98   f01a
003c9a   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	   10 (0x000a) bytes ( 0.01%)
                                           ;           	    5 (0x0005) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_EEdeclareChar
                                           	global	_EEdeclareInt
                                           	global	_EEdeclareLong
                                           	global	_EEwriteMain
                                           	global	_EEreadMain
                                           	global	_eeaddress
                                           	global	_eeoperation
                                           	global	_EELoadChar
                                           	global	_EELoadInt
                                           	global	_EELoadLong
                                           	global	_EESaveChar
                                           	global	_EESaveInt
                                           	global	_EESaveLong
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrput1
                                           	extern	__gptrget1
                                           	extern	__gptrput2
                                           	extern	__gptrget2
                                           	extern	__gptrput4
                                           	extern	__gptrget4
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_eeWriteByte
                                           	extern	_eeReadByte
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           FSR0L	equ	0xfe9
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           
                                           udata_eeparams_0	udata
                                           _eeaddress	res	2
                                           
                                           udata_eeparams_1	udata
                                           _eeoperation	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_eeparams__EEreadMain	code
                                           _EEreadMain:
003c76   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	112; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	eeoperation=EE_RD;
003c78   6b37     clrf    0x37, 0x1        	CLRF	_eeoperation, B
                                           ;	.line	113; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	eeaddress=EEUSER;
003c7a   0e1c     movlw   0x1c             	MOVLW	0x1c
003c7c   010a     movlb   0xa              	BANKSEL	_eeaddress
003c7e   6f47     movwf   0x47, 0x1        	MOVWF	_eeaddress, B
                                           ; removed redundant BANKSEL
003c80   6b48     clrf    0x48, 0x1        	CLRF	(_eeaddress + 1), B
003c82   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEwriteMain	code
                                           _EEwriteMain:
                                           ;	.line	103; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	eeoperation=EE_WR;
003c66   0e01     movlw   0x1              	MOVLW	0x01
003c68   0104     movlb   0x4              	BANKSEL	_eeoperation
003c6a   6f37     movwf   0x37, 0x1        	MOVWF	_eeoperation, B
                                           ;	.line	104; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	eeaddress=EEUSER;
003c6c   0e1c     movlw   0x1c             	MOVLW	0x1c
003c6e   010a     movlb   0xa              	BANKSEL	_eeaddress
003c70   6f47     movwf   0x47, 0x1        	MOVWF	_eeaddress, B
                                           ; removed redundant BANKSEL
003c72   6b48     clrf    0x48, 0x1        	CLRF	(_eeaddress + 1), B
003c74   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEdeclareLong	code
                                           _EEdeclareLong:
                                           ;	.line	92; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EEdeclareLong(unsigned long *data)
0028c2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0028c4   ffe5
0028c6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0028c8   ffd9
0028ca   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0028cc   ffe5
0028ce   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0028d0   ffe5
0028d2   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0028d4   ffe5
0028d6   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0028d8   ffe5
0028da   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0028dc   ffe5
0028de   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0028e0   ffe5
0028e2   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0028e4   ffe5
0028e6   0e02     movlw   0x2              	MOVLW	0x02
0028e8   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0028ea   f000
0028ec   0e03     movlw   0x3              	MOVLW	0x03
0028ee   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0028f0   f001
0028f2   0e04     movlw   0x4              	MOVLW	0x04
0028f4   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0028f6   f002
0028f8   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	94; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	if(eeoperation==EE_RD) *data=EELoadLong();
0028fa   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
0028fc   e119     bnz     0x2930           	BNZ	_00176_DS_
0028fe   ecd7     call    0x1dae, 0        	CALL	_EELoadLong
002900   f00e
002902   6e03     movwf   0x3, 0           	MOVWF	r0x03
002904   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
002906   f004
002908   cff4     movff   0xff4, 0x5       	MOVFF	PRODH, r0x05
00290a   f005
00290c   cfe9     movff   0xfe9, 0x6       	MOVFF	FSR0L, r0x06
00290e   f006
002910   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002912   ffe5
002914   c004     movff   0x4, 0xff4       	MOVFF	r0x04, PRODH
002916   fff4
002918   c005     movff   0x5, 0xff6       	MOVFF	r0x05, TBLPTRL
00291a   fff6
00291c   c006     movff   0x6, 0xff7       	MOVFF	r0x06, TBLPTRH
00291e   fff7
002920   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002922   ffe9
002924   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
002926   fff3
002928   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00292a   ec8e     call    0x3b1c, 0        	CALL	__gptrput4
00292c   f01d
00292e   d01e     bra     0x296c           	BRA	_00178_DS_
                                           _00176_DS_:
002930   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	95; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	else if(eeoperation==EE_WR) EESaveLong(*data);
002932   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
002934   0a01     xorlw   0x1              	XORLW	0x01
002936   e11a     bnz     0x296c           	BNZ	_00178_DS_
002938   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00293a   ffe9
00293c   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00293e   fff3
002940   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002942   ecdf     call    0x37be, 0        	CALL	__gptrget4
002944   f01b
002946   6e00     movwf   0, 0             	MOVWF	r0x00
002948   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00294a   f001
00294c   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
00294e   f002
002950   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
002952   f003
002954   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002956   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002958   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00295a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00295c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00295e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002960   5000     movf    0, 0, 0          	MOVF	r0x00, W
002962   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002964   ecf4     call    0x27e8, 0        	CALL	_EESaveLong
002966   f013
002968   0e04     movlw   0x4              	MOVLW	0x04
00296a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00178_DS_:
00296c   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00296e   f006
002970   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002972   f005
002974   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002976   f004
002978   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00297a   f003
00297c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00297e   f002
002980   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002982   f001
002984   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002986   f000
002988   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00298a   ffd9
00298c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEdeclareInt	code
                                           _EEdeclareInt:
                                           ;	.line	86; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EEdeclareInt(unsigned int *data)
002d34   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002d36   ffe5
002d38   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002d3a   ffd9
002d3c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002d3e   ffe5
002d40   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002d42   ffe5
002d44   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002d46   ffe5
002d48   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002d4a   ffe5
002d4c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002d4e   ffe5
002d50   0e02     movlw   0x2              	MOVLW	0x02
002d52   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002d54   f000
002d56   0e03     movlw   0x3              	MOVLW	0x03
002d58   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002d5a   f001
002d5c   0e04     movlw   0x4              	MOVLW	0x04
002d5e   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002d60   f002
002d62   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	88; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	if(eeoperation==EE_RD) *data=EELoadInt();
002d64   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
002d66   e111     bnz     0x2d8a           	BNZ	_00157_DS_
002d68   ec36     call    0x346c, 0        	CALL	_EELoadInt
002d6a   f01a
002d6c   6e03     movwf   0x3, 0           	MOVWF	r0x03
002d6e   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
002d70   f004
002d72   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002d74   ffe5
002d76   c004     movff   0x4, 0xff4       	MOVFF	r0x04, PRODH
002d78   fff4
002d7a   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002d7c   ffe9
002d7e   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
002d80   fff3
002d82   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002d84   ece7     call    0x3bce, 0        	CALL	__gptrput2
002d86   f01d
002d88   d016     bra     0x2db6           	BRA	_00159_DS_
                                           _00157_DS_:
002d8a   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	89; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	else if(eeoperation==EE_WR) EESaveInt(*data);
002d8c   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
002d8e   0a01     xorlw   0x1              	XORLW	0x01
002d90   e112     bnz     0x2db6           	BNZ	_00159_DS_
002d92   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002d94   ffe9
002d96   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
002d98   fff3
002d9a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002d9c   ec18     call    0x3a30, 0        	CALL	__gptrget2
002d9e   f01d
002da0   6e00     movwf   0, 0             	MOVWF	r0x00
002da2   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
002da4   f001
002da6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002da8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002daa   5000     movf    0, 0, 0          	MOVF	r0x00, W
002dac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002dae   ec48     call    0x3290, 0        	CALL	_EESaveInt
002db0   f019
002db2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002db4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00159_DS_:
002db6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002db8   f004
002dba   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002dbc   f003
002dbe   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002dc0   f002
002dc2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002dc4   f001
002dc6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002dc8   f000
002dca   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002dcc   ffd9
002dce   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEdeclareChar	code
                                           _EEdeclareChar:
                                           ;	.line	80; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EEdeclareChar(unsigned char *data)
003198   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00319a   ffe5
00319c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00319e   ffd9
0031a0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0031a2   ffe5
0031a4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0031a6   ffe5
0031a8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0031aa   ffe5
0031ac   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0031ae   ffe5
0031b0   0e02     movlw   0x2              	MOVLW	0x02
0031b2   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0031b4   f000
0031b6   0e03     movlw   0x3              	MOVLW	0x03
0031b8   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0031ba   f001
0031bc   0e04     movlw   0x4              	MOVLW	0x04
0031be   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0031c0   f002
0031c2   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	82; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	if(eeoperation==EE_RD) *data=EELoadChar();
0031c4   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
0031c6   e10d     bnz     0x31e2           	BNZ	_00138_DS_
0031c8   ecec     call    0x39d8, 0        	CALL	_EELoadChar
0031ca   f01c
0031cc   6e03     movwf   0x3, 0           	MOVWF	r0x03
0031ce   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0031d0   ffe5
0031d2   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0031d4   ffe9
0031d6   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0031d8   fff3
0031da   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0031dc   ec15     call    0x3c2a, 0        	CALL	__gptrput1
0031de   f01e
0031e0   d00f     bra     0x3200           	BRA	_00140_DS_
                                           _00138_DS_:
0031e2   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	83; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	else if(eeoperation==EE_WR) EESaveChar(*data);
0031e4   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
0031e6   0a01     xorlw   0x1              	XORLW	0x01
0031e8   e10b     bnz     0x3200           	BNZ	_00140_DS_
0031ea   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0031ec   ffe9
0031ee   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0031f0   fff3
0031f2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0031f4   ec7d     call    0x3afa, 0        	CALL	__gptrget1
0031f6   f01d
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0031f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0031fa   ec95     call    0x372a, 0        	CALL	_EESaveChar
0031fc   f01b
0031fe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00140_DS_:
003200   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003202   f003
003204   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003206   f002
003208   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00320a   f001
00320c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00320e   f000
003210   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003212   ffd9
003214   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EESaveLong	code
                                           _EESaveLong:
                                           ;	.line	69; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EESaveLong(long data) //untested
0027e8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0027ea   ffe5
0027ec   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0027ee   ffd9
0027f0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0027f2   ffe5
0027f4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0027f6   ffe5
0027f8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0027fa   ffe5
0027fc   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0027fe   ffe5
002800   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002802   ffe5
002804   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002806   ffe5
002808   0e02     movlw   0x2              	MOVLW	0x02
00280a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00280c   f000
00280e   0e03     movlw   0x3              	MOVLW	0x03
002810   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002812   f001
002814   0e04     movlw   0x4              	MOVLW	0x04
002816   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002818   f002
00281a   0e05     movlw   0x5              	MOVLW	0x05
00281c   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
00281e   f003
                                           ;	.line	71; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>24);
002820   ca47     movff   0xa47, 0x4       	MOVFF	_eeaddress, r0x04
002822   f004
002824   ca48     movff   0xa48, 0x5       	MOVFF	(_eeaddress + 1), r0x05
002826   f005
002828   010a     movlb   0xa              	BANKSEL	_eeaddress
00282a   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
00282c   d001     bra     0x2830           	BRA	_10197_DS_
                                           ; removed redundant BANKSEL
00282e   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _10197_DS_:
002830   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002832   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002834   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002836   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002838   ecbb     call    0x3776, 0        	CALL	_eeWriteByte
00283a   f01b
00283c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00283e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	72; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>16);
002840   ca47     movff   0xa47, 0x4       	MOVFF	_eeaddress, r0x04
002842   f004
002844   ca48     movff   0xa48, 0x5       	MOVFF	(_eeaddress + 1), r0x05
002846   f005
002848   010a     movlb   0xa              	BANKSEL	_eeaddress
00284a   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
00284c   d001     bra     0x2850           	BRA	_20198_DS_
                                           ; removed redundant BANKSEL
00284e   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _20198_DS_:
                                           ; #	MOVF	r0x02, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
002850   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002852   6e05     movwf   0x5, 0           	MOVWF	r0x05
002854   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002856   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002858   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00285a   ecbb     call    0x3776, 0        	CALL	_eeWriteByte
00285c   f01b
00285e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002860   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	73; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>8);
002862   ca47     movff   0xa47, 0x4       	MOVFF	_eeaddress, r0x04
002864   f004
002866   ca48     movff   0xa48, 0x5       	MOVFF	(_eeaddress + 1), r0x05
002868   f005
00286a   010a     movlb   0xa              	BANKSEL	_eeaddress
00286c   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
00286e   d001     bra     0x2872           	BRA	_30199_DS_
                                           ; removed redundant BANKSEL
002870   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _30199_DS_:
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
002872   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002874   6e05     movwf   0x5, 0           	MOVWF	r0x05
002876   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002878   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00287a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00287c   ecbb     call    0x3776, 0        	CALL	_eeWriteByte
00287e   f01b
002880   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002882   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	74; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data);
002884   ca47     movff   0xa47, 0x4       	MOVFF	_eeaddress, r0x04
002886   f004
002888   ca48     movff   0xa48, 0x5       	MOVFF	(_eeaddress + 1), r0x05
00288a   f005
00288c   010a     movlb   0xa              	BANKSEL	_eeaddress
00288e   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002890   d001     bra     0x2894           	BRA	_40200_DS_
                                           ; removed redundant BANKSEL
002892   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _40200_DS_:
002894   5000     movf    0, 0, 0          	MOVF	r0x00, W
002896   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002898   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00289a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00289c   ecbb     call    0x3776, 0        	CALL	_eeWriteByte
00289e   f01b
0028a0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0028a2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0028a4   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0028a6   f005
0028a8   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0028aa   f004
0028ac   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0028ae   f003
0028b0   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0028b2   f002
0028b4   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0028b6   f001
0028b8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0028ba   f000
0028bc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0028be   ffd9
0028c0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EESaveInt	code
                                           _EESaveInt:
                                           ;	.line	63; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EESaveInt(int data)
003290   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003292   ffe5
003294   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003296   ffd9
003298   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00329a   ffe5
00329c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00329e   ffe5
0032a0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0032a2   ffe5
0032a4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0032a6   ffe5
0032a8   0e02     movlw   0x2              	MOVLW	0x02
0032aa   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0032ac   f000
0032ae   0e03     movlw   0x3              	MOVLW	0x03
0032b0   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0032b2   f001
                                           ;	.line	65; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>8);
0032b4   ca47     movff   0xa47, 0x2       	MOVFF	_eeaddress, r0x02
0032b6   f002
0032b8   ca48     movff   0xa48, 0x3       	MOVFF	(_eeaddress + 1), r0x03
0032ba   f003
0032bc   010a     movlb   0xa              	BANKSEL	_eeaddress
0032be   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0032c0   d001     bra     0x32c4           	BRA	_50201_DS_
                                           ; removed redundant BANKSEL
0032c2   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _50201_DS_:
0032c4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0032c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0032c8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0032ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0032cc   ecbb     call    0x3776, 0        	CALL	_eeWriteByte
0032ce   f01b
0032d0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0032d2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	66; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data&255);
0032d4   ca47     movff   0xa47, 0x2       	MOVFF	_eeaddress, r0x02
0032d6   f002
0032d8   ca48     movff   0xa48, 0x3       	MOVFF	(_eeaddress + 1), r0x03
0032da   f003
0032dc   010a     movlb   0xa              	BANKSEL	_eeaddress
0032de   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0032e0   d001     bra     0x32e4           	BRA	_60202_DS_
                                           ; removed redundant BANKSEL
0032e2   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _60202_DS_:
0032e4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0032e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0032e8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0032ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0032ec   ecbb     call    0x3776, 0        	CALL	_eeWriteByte
0032ee   f01b
0032f0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0032f2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0032f4   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0032f6   f003
0032f8   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0032fa   f002
0032fc   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0032fe   f001
003300   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003302   f000
003304   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003306   ffd9
003308   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EESaveChar	code
                                           _EESaveChar:
                                           ;	.line	58; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EESaveChar(unsigned char data)
00372a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00372c   ffe5
00372e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003730   ffd9
003732   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003734   ffe5
003736   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003738   ffe5
00373a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00373c   ffe5
00373e   0e02     movlw   0x2              	MOVLW	0x02
003740   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003742   f000
                                           ;	.line	60; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data);
003744   ca47     movff   0xa47, 0x1       	MOVFF	_eeaddress, r0x01
003746   f001
003748   ca48     movff   0xa48, 0x2       	MOVFF	(_eeaddress + 1), r0x02
00374a   f002
00374c   010a     movlb   0xa              	BANKSEL	_eeaddress
00374e   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
003750   d001     bra     0x3754           	BRA	_70203_DS_
                                           ; removed redundant BANKSEL
003752   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _70203_DS_:
003754   5000     movf    0, 0, 0          	MOVF	r0x00, W
003756   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003758   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00375a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00375c   ecbb     call    0x3776, 0        	CALL	_eeWriteByte
00375e   f01b
003760   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003762   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003764   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003766   f002
003768   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00376a   f001
00376c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00376e   f000
003770   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003772   ffd9
003774   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EELoadLong	code
                                           _EELoadLong:
                                           ;	.line	50; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	long EELoadLong() //untested
001dae   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
001db0   ffe5
001db2   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
001db4   ffe5
001db6   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
001db8   ffe5
001dba   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
001dbc   ffe5
001dbe   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
001dc0   ffe5
001dc2   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
001dc4   ffe5
001dc6   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
001dc8   ffe5
001dca   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
001dcc   ffe5
001dce   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
001dd0   ffe5
001dd2   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
001dd4   ffe5
001dd6   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
001dd8   ffe5
                                           ;	.line	52; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	return ((unsigned long)EE_READBYTE_NEXT()<<24)|((unsigned long)EE_READBYTE_NEXT()<<16)|(EE_READBYTE_NEXT()<<8)|EE_READBYTE_NEXT();
001dda   ca47     movff   0xa47, 0         	MOVFF	_eeaddress, r0x00
001ddc   f000
001dde   ca48     movff   0xa48, 0x1       	MOVFF	(_eeaddress + 1), r0x01
001de0   f001
001de2   010a     movlb   0xa              	BANKSEL	_eeaddress
001de4   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
001de6   d001     bra     0x1dea           	BRA	_80204_DS_
                                           ; removed redundant BANKSEL
001de8   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _80204_DS_:
001dea   5000     movf    0, 0, 0          	MOVF	r0x00, W
001dec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001dee   ecbd     call    0x3b7a, 0        	CALL	_eeReadByte
001df0   f01d
001df2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001df4   6e07     movwf   0x7, 0           	MOVWF	r0x07
001df6   6a04     clrf    0x4, 0           	CLRF	r0x04
001df8   6a05     clrf    0x5, 0           	CLRF	r0x05
001dfa   6a06     clrf    0x6, 0           	CLRF	r0x06
001dfc   ca47     movff   0xa47, 0         	MOVFF	_eeaddress, r0x00
001dfe   f000
001e00   ca48     movff   0xa48, 0x1       	MOVFF	(_eeaddress + 1), r0x01
001e02   f001
001e04   010a     movlb   0xa              	BANKSEL	_eeaddress
001e06   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
001e08   d001     bra     0x1e0c           	BRA	_90205_DS_
                                           ; removed redundant BANKSEL
001e0a   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _90205_DS_:
001e0c   5000     movf    0, 0, 0          	MOVF	r0x00, W
001e0e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001e10   ecbd     call    0x3b7a, 0        	CALL	_eeReadByte
001e12   f01d
001e14   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001e16   6a0b     clrf    0xb, 0           	CLRF	r0x0b
001e18   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
001e1a   6a08     clrf    0x8, 0           	CLRF	r0x08
001e1c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
001e1e   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
001e20   1205     iorwf   0x5, 0x1, 0      	IORWF	r0x05, F
001e22   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
001e24   1206     iorwf   0x6, 0x1, 0      	IORWF	r0x06, F
001e26   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
001e28   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
001e2a   ca47     movff   0xa47, 0         	MOVFF	_eeaddress, r0x00
001e2c   f000
001e2e   ca48     movff   0xa48, 0x1       	MOVFF	(_eeaddress + 1), r0x01
001e30   f001
001e32   010a     movlb   0xa              	BANKSEL	_eeaddress
001e34   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
001e36   d001     bra     0x1e3a           	BRA	_100206_DS_
                                           ; removed redundant BANKSEL
001e38   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _100206_DS_:
001e3a   5000     movf    0, 0, 0          	MOVF	r0x00, W
001e3c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001e3e   ecbd     call    0x3b7a, 0        	CALL	_eeReadByte
001e40   f01d
001e42   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001e44   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ; =DF= MOVFF: replaced by CRLF/SETF
001e46   6a00     clrf    0, 0             	CLRF	r0x00
001e48   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
001e4a   f001
001e4c   6ae8     clrf    0xe8, 0          	CLRF	WREG
001e4e   be03     btfsc   0x3, 0x7, 0      	BTFSC	r0x03, 7
001e50   0eff     movlw   0xff             	MOVLW	0xff
001e52   6e08     movwf   0x8, 0           	MOVWF	r0x08
001e54   6e09     movwf   0x9, 0           	MOVWF	r0x09
001e56   5000     movf    0, 0, 0          	MOVF	r0x00, W
001e58   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
001e5a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001e5c   1205     iorwf   0x5, 0x1, 0      	IORWF	r0x05, F
001e5e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
001e60   1206     iorwf   0x6, 0x1, 0      	IORWF	r0x06, F
001e62   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
001e64   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
001e66   ca47     movff   0xa47, 0         	MOVFF	_eeaddress, r0x00
001e68   f000
001e6a   ca48     movff   0xa48, 0x1       	MOVFF	(_eeaddress + 1), r0x01
001e6c   f001
001e6e   010a     movlb   0xa              	BANKSEL	_eeaddress
001e70   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
001e72   d001     bra     0x1e76           	BRA	_110207_DS_
                                           ; removed redundant BANKSEL
001e74   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _110207_DS_:
001e76   5000     movf    0, 0, 0          	MOVF	r0x00, W
001e78   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001e7a   ecbd     call    0x3b7a, 0        	CALL	_eeReadByte
001e7c   f01d
001e7e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001e80   6a01     clrf    0x1, 0           	CLRF	r0x01
001e82   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
001e84   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001e86   1205     iorwf   0x5, 0x1, 0      	IORWF	r0x05, F
001e88   1206     iorwf   0x6, 0x1, 0      	IORWF	r0x06, F
001e8a   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
001e8c   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
001e8e   ffe9
001e90   c006     movff   0x6, 0xff4       	MOVFF	r0x06, PRODH
001e92   fff4
001e94   c005     movff   0x5, 0xff3       	MOVFF	r0x05, PRODL
001e96   fff3
001e98   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001e9a   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
001e9c   f00b
001e9e   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
001ea0   f00a
001ea2   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
001ea4   f009
001ea6   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
001ea8   f008
001eaa   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
001eac   f007
001eae   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
001eb0   f006
001eb2   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
001eb4   f005
001eb6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
001eb8   f004
001eba   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
001ebc   f003
001ebe   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
001ec0   f001
001ec2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
001ec4   f000
001ec6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EELoadInt	code
                                           _EELoadInt:
                                           ;	.line	45; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	int EELoadInt()
00346c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00346e   ffe5
003470   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003472   ffe5
003474   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003476   ffe5
003478   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00347a   ffe5
                                           ;	.line	47; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	return (EE_READBYTE_NEXT()<<8)|EE_READBYTE_NEXT();
00347c   ca47     movff   0xa47, 0         	MOVFF	_eeaddress, r0x00
00347e   f000
003480   ca48     movff   0xa48, 0x1       	MOVFF	(_eeaddress + 1), r0x01
003482   f001
003484   010a     movlb   0xa              	BANKSEL	_eeaddress
003486   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
003488   d001     bra     0x348c           	BRA	_120208_DS_
                                           ; removed redundant BANKSEL
00348a   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _120208_DS_:
00348c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00348e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003490   ecbd     call    0x3b7a, 0        	CALL	_eeReadByte
003492   f01d
003494   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003496   6e03     movwf   0x3, 0           	MOVWF	r0x03
003498   6a02     clrf    0x2, 0           	CLRF	r0x02
00349a   ca47     movff   0xa47, 0         	MOVFF	_eeaddress, r0x00
00349c   f000
00349e   ca48     movff   0xa48, 0x1       	MOVFF	(_eeaddress + 1), r0x01
0034a0   f001
0034a2   010a     movlb   0xa              	BANKSEL	_eeaddress
0034a4   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0034a6   d001     bra     0x34aa           	BRA	_130209_DS_
                                           ; removed redundant BANKSEL
0034a8   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _130209_DS_:
0034aa   5000     movf    0, 0, 0          	MOVF	r0x00, W
0034ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0034ae   ecbd     call    0x3b7a, 0        	CALL	_eeReadByte
0034b0   f01d
0034b2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0034b4   6a01     clrf    0x1, 0           	CLRF	r0x01
0034b6   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
0034b8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0034ba   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
0034bc   c003     movff   0x3, 0xff3       	MOVFF	r0x03, PRODL
0034be   fff3
0034c0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0034c2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0034c4   f003
0034c6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0034c8   f002
0034ca   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0034cc   f001
0034ce   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0034d0   f000
0034d2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EELoadChar	code
                                           _EELoadChar:
                                           ;	.line	40; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	char EELoadChar()
0039d8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0039da   ffe5
0039dc   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0039de   ffe5
                                           ;	.line	42; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	return EE_READBYTE_NEXT();
0039e0   ca47     movff   0xa47, 0         	MOVFF	_eeaddress, r0x00
0039e2   f000
0039e4   ca48     movff   0xa48, 0x1       	MOVFF	(_eeaddress + 1), r0x01
0039e6   f001
0039e8   010a     movlb   0xa              	BANKSEL	_eeaddress
0039ea   3f47     incfsz  0x47, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0039ec   d001     bra     0x39f0           	BRA	_140210_DS_
                                           ; removed redundant BANKSEL
0039ee   2b48     incf    0x48, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _140210_DS_:
0039f0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0039f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0039f4   ecbd     call    0x3b7a, 0        	CALL	_eeReadByte
0039f6   f01d
0039f8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0039fa   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0039fc   f001
0039fe   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003a00   f000
003a02   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 1362 (0x0552) bytes ( 1.04%)
                                           ;           	  681 (0x02a9) words
                                           ; udata size:	    3 (0x0003) bytes ( 0.08%)
                                           ; access size:	   12 (0x000c) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           	CONFIG	XINST=OFF
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_eeWriteByte
                                           	global	_eeReadByte
                                           	global	_coreInit
                                           	global	_time
                                           	global	_TMR0U
                                           	global	_Now
                                           	global	_PORTZ
                                           	global	_PORTZbits
                                           	global	_LATZ
                                           	global	_LATZbits
                                           	global	_TRICZ
                                           	global	_TRISZbits
                                           	global	_ANSELZ
                                           	global	_ANSELZbits
                                           	global	_main
                                           	global	_high_ISR
                                           	global	_low_ISR
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_setup
                                           	extern	_loop
                                           	extern	_Setup
                                           	extern	_fraiseISR
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _TMR0U	db	0x00, 0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           
                                           udata_core_0	udata
                                           _Now	res	4
                                           
                                           udata_core_1	udata
                                           _time_now_1_76	res	4
                                           
                                           
                                           ustat_core_00	udata	0X0438
                                           _ANSELZ        
                                           _ANSELZbits    	res	1
                                           
                                           
                                           ustat_core_01	udata	0X0480
                                           _PORTZ         
                                           _PORTZbits     	res	1
                                           
                                           
                                           ustat_core_02	udata	0X0489
                                           _LATZ          
                                           _LATZbits      	res	1
                                           
                                           
                                           ustat_core_03	udata	0X0492
                                           _TRICZ         
                                           _TRISZbits     	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_core_ivec_0x1_high_ISR	code	0X000008
                                           ivec_0x1_high_ISR:
000008   ef8d     goto    0x2b1a           	GOTO	_high_ISR
00000a   f015
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_core_ivec_0x2_low_ISR	code	0X000018
                                           ivec_0x2_low_ISR:
000018   ef0b     goto    0x3016           	GOTO	_low_ISR
00001a   f018
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_core__main	code
                                           _main:
                                           ;	.line	112; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	setup();
00000c   eccd     call    0x179a, 0        	CALL	_setup
00000e   f00b
                                           _00124_DS_:
                                           ;	.line	116; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	while(1) loop();
000010   ec36     call    0x2e6c, 0        	CALL	_loop
000012   f017
000014   d7fd     bra     0x10             	BRA	_00124_DS_
000016   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__time	code
                                           _time:
003598   010a     movlb   0xa              	BANKSEL	_TMR0U
                                           ;	.line	176; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	now.word1= TMR0U;
00359a   5120     movf    0x20, 0, 0x1     	MOVF	_TMR0U, W, B
00359c   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 2)
00359e   6f7b     movwf   0x7b, 0x1        	MOVWF	(_time_now_1_76 + 2), B
0035a0   010a     movlb   0xa              	BANKSEL	(_TMR0U + 1)
0035a2   5121     movf    0x21, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
0035a4   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 3)
0035a6   6f7c     movwf   0x7c, 0x1        	MOVWF	(_time_now_1_76 + 3), B
                                           ;	.line	178; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_LSB(now)=TMR0L;
0035a8   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
0035aa   6f79     movwf   0x79, 0x1        	MOVWF	_time_now_1_76, B
                                           ;	.line	179; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_MSB(now)=TMR0H;
0035ac   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
0035ae   6f7a     movwf   0x7a, 0x1        	MOVWF	(_time_now_1_76 + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	181; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	if(now.word1 != TMR0U) { //a rollover occured : do read again
0035b0   517b     movf    0x7b, 0, 0x1     	MOVF	(_time_now_1_76 + 2), W, B
0035b2   010a     movlb   0xa              	BANKSEL	_TMR0U
0035b4   1920     xorwf   0x20, 0, 0x1     	XORWF	_TMR0U, W, B
0035b6   e105     bnz     0x35c2           	BNZ	_00151_DS_
0035b8   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 3)
0035ba   517c     movf    0x7c, 0, 0x1     	MOVF	(_time_now_1_76 + 3), W, B
0035bc   010a     movlb   0xa              	BANKSEL	(_TMR0U + 1)
0035be   1921     xorwf   0x21, 0, 0x1     	XORWF	(_TMR0U + 1), W, B
0035c0   e00c     bz      0x35da           	BZ	_00144_DS_
                                           _00151_DS_:
0035c2   010a     movlb   0xa              	BANKSEL	_TMR0U
                                           ;	.line	182; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	now.word1= TMR0U;
0035c4   5120     movf    0x20, 0, 0x1     	MOVF	_TMR0U, W, B
0035c6   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 2)
0035c8   6f7b     movwf   0x7b, 0x1        	MOVWF	(_time_now_1_76 + 2), B
0035ca   010a     movlb   0xa              	BANKSEL	(_TMR0U + 1)
0035cc   5121     movf    0x21, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
0035ce   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 3)
0035d0   6f7c     movwf   0x7c, 0x1        	MOVWF	(_time_now_1_76 + 3), B
                                           ;	.line	183; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_LSB(now)=TMR0L;
0035d2   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
0035d4   6f79     movwf   0x79, 0x1        	MOVWF	_time_now_1_76, B
                                           ;	.line	184; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_MSB(now)=TMR0H;
0035d6   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
0035d8   6f7a     movwf   0x7a, 0x1        	MOVWF	(_time_now_1_76 + 1), B
                                           _00144_DS_:
                                           ;	.line	187; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	return now._dword;
0035da   c47c     movff   0x47c, 0xfe9     	MOVFF	(_time_now_1_76 + 3), FSR0L
0035dc   ffe9
0035de   c47b     movff   0x47b, 0xff4     	MOVFF	(_time_now_1_76 + 2), PRODH
0035e0   fff4
0035e2   c47a     movff   0x47a, 0xff3     	MOVFF	(_time_now_1_76 + 1), PRODL
0035e4   fff3
0035e6   0104     movlb   0x4              	BANKSEL	_time_now_1_76
0035e8   5179     movf    0x79, 0, 0x1     	MOVF	_time_now_1_76, W, B
0035ea   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__low_ISR	code
                                           _low_ISR:
                                           ;	.line	155; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	void low_ISR(void) 
003016   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
003018   ffe5
00301a   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
00301c   ffe5
00301e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003020   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
003022   ffe5
003024   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
003026   ffe5
003028   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
00302a   ffe5
00302c   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
00302e   ffe5
003030   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
003032   ffe5
003034   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
003036   ffe5
                                           ;	.line	160; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	SAVETBLPRT();
003038   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTR, _POSTDEC1
00303a   ffe5
00303c   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, _POSTDEC1
00303e   ffe5
003040   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, _POSTDEC1
003042   ffe5
003044   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, _POSTDEC1
003046   ffe5
003048   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, _POSTDEC1
00304a   ffe5
00304c   cfe1     movff   0xfe1, 0xfe5     	MOVFF	_FSR1L, _POSTDEC1
00304e   ffe5
003050   cfe2     movff   0xfe2, 0xfe5     	MOVFF	_FSR1H, _POSTDEC1
003052   ffe5
                                           ;	.line	161; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	fraiseISR();
003054   ecc9     call    0x1592, 0        	CALL	_fraiseISR
003056   f00a
                                           ;	.line	166; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	RESTORETBLPRT();
003058   cfe4     movff   0xfe4, 0xfe2     	MOVFF	_PREINC1, _FSR1H
00305a   ffe2
00305c   cfe4     movff   0xfe4, 0xfe1     	MOVFF	_PREINC1, _FSR1L
00305e   ffe1
003060   cfe4     movff   0xfe4, 0xff5     	MOVFF	_PREINC1, _TABLAT
003062   fff5
003064   cfe4     movff   0xfe4, 0xff8     	MOVFF	_PREINC1, _TBLPTRU
003066   fff8
003068   cfe4     movff   0xfe4, 0xff7     	MOVFF	_PREINC1, _TBLPTRH
00306a   fff7
00306c   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTRL
00306e   fff6
003070   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTR
003072   fff6
003074   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
003076   fffb
003078   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
00307a   fffa
00307c   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
00307e   ffea
003080   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
003082   ffe9
003084   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
003086   fff4
003088   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
00308a   fff3
00308c   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00308e   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
003090   ffe0
003092   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
003094   ffd8
003096   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_core__high_ISR	code
                                           _high_ISR:
                                           ;	.line	127; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	void high_ISR(void)
002b1a   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
002b1c   ffe5
002b1e   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
002b20   ffe5
002b22   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002b24   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
002b26   ffe5
002b28   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
002b2a   ffe5
002b2c   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
002b2e   ffe5
002b30   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002b32   ffe5
002b34   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
002b36   ffe5
002b38   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
002b3a   ffe5
                                           ;	.line	133; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	SAVETBLPRT();
002b3c   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTR, _POSTDEC1
002b3e   ffe5
002b40   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, _POSTDEC1
002b42   ffe5
002b44   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, _POSTDEC1
002b46   ffe5
002b48   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, _POSTDEC1
002b4a   ffe5
002b4c   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, _POSTDEC1
002b4e   ffe5
002b50   cfe1     movff   0xfe1, 0xfe5     	MOVFF	_FSR1L, _POSTDEC1
002b52   ffe5
002b54   cfe2     movff   0xfe2, 0xfe5     	MOVFF	_FSR1H, _POSTDEC1
002b56   ffe5
002b58   010a     movlb   0xa              	BANKSEL	_TMR0U
                                           ;	.line	135; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	Now.word1= TMR0U;
002b5a   5120     movf    0x20, 0, 0x1     	MOVF	_TMR0U, W, B
002b5c   010f     movlb   0xf              	BANKSEL	(_Now + 2)
002b5e   6f35     movwf   0x35, 0x1        	MOVWF	(_Now + 2), B
002b60   010a     movlb   0xa              	BANKSEL	(_TMR0U + 1)
002b62   5121     movf    0x21, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
002b64   010f     movlb   0xf              	BANKSEL	(_Now + 3)
002b66   6f36     movwf   0x36, 0x1        	MOVWF	(_Now + 3), B
                                           ;	.line	136; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_LSB(Now)=TMR0L;
002b68   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
002b6a   6f33     movwf   0x33, 0x1        	MOVWF	_Now, B
                                           ;	.line	137; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_MSB(Now)=TMR0H;
002b6c   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
002b6e   6f34     movwf   0x34, 0x1        	MOVWF	(_Now + 1), B
                                           ;	.line	139; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	if(INTCONbits.TMR0IF) {
002b70   a4f2     btfss   0xf2, 0x2, 0     	BTFSS	_INTCONbits, 2
002b72   d011     bra     0x2b96           	BRA	_00132_DS_
002b74   010a     movlb   0xa              	BANKSEL	_TMR0U
                                           ;	.line	140; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	TMR0U++;
002b76   3f20     incfsz  0x20, 0x1, 0x1   	INCFSZ	_TMR0U, F, B
002b78   d001     bra     0x2b7c           	BRA	_10143_DS_
                                           ; removed redundant BANKSEL
002b7a   2b21     incf    0x21, 0x1, 0x1   	INCF	(_TMR0U + 1), F, B
                                           _10143_DS_:
                                           ;	.line	141; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.TMR0IF=0;
002b7c   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
002b7e   010a     movlb   0xa              	BANKSEL	_TMR0U
                                           ;	.line	142; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	Now.word1= TMR0U;
002b80   5120     movf    0x20, 0, 0x1     	MOVF	_TMR0U, W, B
002b82   010f     movlb   0xf              	BANKSEL	(_Now + 2)
002b84   6f35     movwf   0x35, 0x1        	MOVWF	(_Now + 2), B
002b86   010a     movlb   0xa              	BANKSEL	(_TMR0U + 1)
002b88   5121     movf    0x21, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
002b8a   010f     movlb   0xf              	BANKSEL	(_Now + 3)
002b8c   6f36     movwf   0x36, 0x1        	MOVWF	(_Now + 3), B
                                           ;	.line	143; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_LSB(Now)=TMR0L;
002b8e   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
002b90   6f33     movwf   0x33, 0x1        	MOVWF	_Now, B
                                           ;	.line	144; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_MSB(Now)=TMR0H;
002b92   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
002b94   6f34     movwf   0x34, 0x1        	MOVWF	(_Now + 1), B
                                           _00132_DS_:
                                           ;	.line	150; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	RESTORETBLPRT();
002b96   cfe4     movff   0xfe4, 0xfe2     	MOVFF	_PREINC1, _FSR1H
002b98   ffe2
002b9a   cfe4     movff   0xfe4, 0xfe1     	MOVFF	_PREINC1, _FSR1L
002b9c   ffe1
002b9e   cfe4     movff   0xfe4, 0xff5     	MOVFF	_PREINC1, _TABLAT
002ba0   fff5
002ba2   cfe4     movff   0xfe4, 0xff8     	MOVFF	_PREINC1, _TBLPTRU
002ba4   fff8
002ba6   cfe4     movff   0xfe4, 0xff7     	MOVFF	_PREINC1, _TBLPTRH
002ba8   fff7
002baa   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTRL
002bac   fff6
002bae   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTR
002bb0   fff6
002bb2   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002bb4   fffb
002bb6   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
002bb8   fffa
002bba   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002bbc   ffea
002bbe   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002bc0   ffe9
002bc2   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002bc4   fff4
002bc6   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
002bc8   fff3
002bca   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002bcc   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002bce   ffe0
002bd0   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002bd2   ffd8
002bd4   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_core__coreInit	code
                                           _coreInit:
                                           ;	.line	72; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	void coreInit(void)
003640   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003642   ffe5
                                           ;	.line	75; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	Setup();
003644   ec52     call    0x3ca4, 0        	CALL	_Setup
003646   f01e
003648   0104     movlb   0x4              	BANKSEL	_LATZ
                                           ;	.line	79; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	PORTZ = LATZ = 0;
00364a   6b89     clrf    0x89, 0x1        	CLRF	_LATZ, B
                                           ; removed redundant BANKSEL
00364c   6b80     clrf    0x80, 0x1        	CLRF	_PORTZ, B
                                           ; removed redundant BANKSEL
                                           ;	.line	80; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	PORTZbits.RZ1 = LATZbits.LATZ1 = 1;	
00364e   8389     bsf     0x89, 0x1, 0x1   	BSF	_LATZbits, 1, B
003650   6a00     clrf    0, 0             	CLRF	r0x00
                                           ; removed redundant BANKSEL
003652   b389     btfsc   0x89, 0x1, 0x1   	BTFSC	_LATZbits, 1, B
003654   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
003656   5000     movf    0, 0, 0          	MOVF	r0x00, W
003658   0b01     andlw   0x1              	ANDLW	0x01
00365a   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
00365c   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
                                           ; removed redundant BANKSEL
00365e   5180     movf    0x80, 0, 0x1     	MOVF	_PORTZbits, W, B
003660   0bfd     andlw   0xfd             	ANDLW	0xfd
003662   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
003664   6f80     movwf   0x80, 0x1        	MOVWF	_PORTZbits, B
                                           ;	.line	83; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.TMR0ON = 1;
003666   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	84; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T08BIT = 0;	// 16 bit timer
003668   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	85; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T0CS = 0;		// Use internal clock
00366a   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	86; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T0SE = 1;		// Hi to low
00366c   88d5     bsf     0xd5, 0x4, 0     	BSF	_T0CONbits, 4
                                           ;	.line	87; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.PSA = 0;		// Use the prescaler
00366e   96d5     bcf     0xd5, 0x3, 0     	BCF	_T0CONbits, 3
                                           ;	.line	88; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T0PS2 = 0;	// 
003670   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	89; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T0PS1 = 1;	// 1/16 prescaler: 
003672   82d5     bsf     0xd5, 0x1, 0     	BSF	_T0CONbits, 1
                                           ;	.line	90; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T0PS0 = 1;	// 
003674   80d5     bsf     0xd5, 0, 0       	BSF	_T0CONbits, 0
                                           ;	.line	91; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.TMR0IE=1;	// enable TMR0 interrupt
003676   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	92; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCON2bits.TMR0IP=1;	// high priority
003678   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	95; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	RCONbits.IPEN = 1;  // enable interrupts priority mode
00367a   8ed0     bsf     0xd0, 0x7, 0     	BSF	_RCONbits, 7
                                           ;	.line	97; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEH = 1;  // enable interrupts
00367c   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	98; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEL = 1;  // enable interrupts
00367e   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	103; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T2CONbits.T2CKPS0=1; //prescaler 4
003680   80ba     bsf     0xba, 0, 0       	BSF	_T2CONbits, 0
                                           ;	.line	104; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	PR2=255;
003682   0eff     movlw   0xff             	MOVLW	0xff
003684   68bb     setf    0xbb, 0          	SETF	_PR2
                                           ;	.line	105; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T2CONbits.TMR2ON=1;
003686   84ba     bsf     0xba, 0x2, 0     	BSF	_T2CONbits, 2
003688   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00368a   f000
00368c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__eeReadByte	code
                                           _eeReadByte:
                                           ;	.line	56; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	unsigned char eeReadByte(unsigned char address){
003b7a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003b7c   ffe5
003b7e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003b80   ffd9
003b82   0e02     movlw   0x2              	MOVLW	0x02
003b84   cfdb     movff   0xfdb, 0xfa9     	MOVFF	PLUSW2, _EEADR
003b86   ffa9
                                           ;	.line	58; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.CFGS = 0;
003b88   9ca6     bcf     0xa6, 0x6, 0     	BCF	_EECON1bits, 6
                                           ;	.line	59; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.EEPGD = 0;
003b8a   9ea6     bcf     0xa6, 0x7, 0     	BCF	_EECON1bits, 7
                                           ;	.line	60; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.RD = 1;
003b8c   80a6     bsf     0xa6, 0, 0       	BSF	_EECON1bits, 0
                                           ;	.line	61; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	return EEDATA;
003b8e   50a8     movf    0xa8, 0, 0       	MOVF	_EEDATA, W
003b90   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003b92   ffd9
003b94   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__eeWriteByte	code
                                           _eeWriteByte:
                                           ;	.line	33; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	void eeWriteByte(unsigned char address, unsigned char value){
003776   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003778   ffe5
00377a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00377c   ffd9
00377e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003780   ffe5
003782   0e02     movlw   0x2              	MOVLW	0x02
003784   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003786   f000
003788   0e03     movlw   0x3              	MOVLW	0x03
00378a   cfdb     movff   0xfdb, 0xfa8     	MOVFF	PLUSW2, _EEDATA
00378c   ffa8
                                           ;	.line	36; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EEADR = address;
00378e   c000     movff   0, 0xfa9         	MOVFF	r0x00, _EEADR
003790   ffa9
                                           ;	.line	38; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.EEPGD = 0;
003792   9ea6     bcf     0xa6, 0x7, 0     	BCF	_EECON1bits, 7
                                           ;	.line	39; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.CFGS = 0;
003794   9ca6     bcf     0xa6, 0x6, 0     	BCF	_EECON1bits, 6
                                           ;	.line	40; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.WREN = 1; // enable writes to data EEPROM
003796   84a6     bsf     0xa6, 0x2, 0     	BSF	_EECON1bits, 2
                                           ;	.line	41; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEH = 0;  // disable interrupts
003798   9ef2     bcf     0xf2, 0x7, 0     	BCF	_INTCONbits, 7
                                           ;	.line	42; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEL = 0;  // disable interrupts
00379a   9cf2     bcf     0xf2, 0x6, 0     	BCF	_INTCONbits, 6
                                           ;	.line	43; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON2 = 0x55;
00379c   0e55     movlw   0x55             	MOVLW	0x55
00379e   6ea7     movwf   0xa7, 0          	MOVWF	_EECON2
                                           ;	.line	44; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON2 = 0x0AA;
0037a0   0eaa     movlw   0xaa             	MOVLW	0xaa
0037a2   6ea7     movwf   0xa7, 0          	MOVWF	_EECON2
                                           ;	.line	45; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.WR = 1;   // start writing
0037a4   82a6     bsf     0xa6, 0x1, 0     	BSF	_EECON1bits, 1
                                           _00105_DS_:
                                           ;	.line	46; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	while(EECON1bits.WR){
0037a6   a2a6     btfss   0xa6, 0x1, 0     	BTFSS	_EECON1bits, 1
0037a8   d002     bra     0x37ae           	BRA	_00107_DS_
0037aa   0000     nop                      	nop	
0037ac   d7fc     bra     0x37a6           	BRA	_00105_DS_
                                           _00107_DS_:
                                           ;	.line	51; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.WREN = 0;
0037ae   94a6     bcf     0xa6, 0x2, 0     	BCF	_EECON1bits, 2
                                           ;	.line	52; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEH = 1;  // enable interrupts
0037b0   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	53; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEL = 1;  // enable interrupts
0037b2   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
0037b4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0037b6   f000
0037b8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0037ba   ffd9
0037bc   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  596 (0x0254) bytes ( 0.45%)
                                           ;           	  298 (0x012a) words
                                           ; udata size:	   12 (0x000c) bytes ( 0.33%)
                                           ; access size:	    1 (0x0001) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_FraiseState
                                           	global	_FrTXtries
                                           	global	_fraiseSetID
                                           	global	_fraiseInit
                                           	global	_fraiseSetInterruptEnable
                                           	global	_fraiseGetInterruptEnable
                                           	global	_fraiseSend
                                           	global	_fraiseSendBroadcast
                                           	global	_fraiseISR
                                           	global	_fraiseGetChar
                                           	global	_fraisePeekChar
                                           	global	_fraiseGetLen
                                           	global	_fraiseGetIndex
                                           	global	_fraiseGetAt
                                           	global	_fraiseSendCopy
                                           	global	_fraiseService
                                           	global	_putchar
                                           	global	_FrTXbuf
                                           	global	_FrTXin
                                           	global	_FrTXout
                                           	global	_FrTXbufFree
                                           	global	_FrTXpacket
                                           	global	_FrTXpacket_i
                                           	global	_FrTXpacket_len
                                           	global	_FrTXchksum
                                           	global	_FrRXbuf
                                           	global	_FrRXchksum
                                           	global	_FrRXin
                                           	global	_FrRXin_tmp
                                           	global	_FrRXin_end
                                           	global	_FrRXout
                                           	global	_FrRXout_end
                                           	global	_FrRXout_len
                                           	global	_FrRXout_first
                                           	global	_FraiseStatus
                                           	global	_FrInterruptEnabled
                                           	global	_FrID
                                           	global	_txbuf
                                           	global	_txlen
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrget1
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_printf
                                           	extern	_eeWriteByte
                                           	extern	_eeReadByte
                                           	extern	_fraiseReceiveChar
                                           	extern	__modsint
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           
                                           
                                           	idata
                                           _FrTXin	db	0x00
                                           _FrTXout	db	0x00
                                           _FrTXbufFree	db	0xff
                                           _FrInterruptEnabled	db	0x00
                                           _FrID	db	0x00
                                           _txlen	db	0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           
                                           udata_fraisedevice_0	udata
                                           _FrTXtries	res	1
                                           
                                           udata_fraisedevice_1	udata
                                           _FraiseState	res	1
                                           
                                           udata_fraisedevice_2	udata
                                           _fraiseISR_c_1_112	res	1
                                           
                                           udata_fraisedevice_3	udata
                                           _fraiseISR_c2_1_112	res	1
                                           
                                           udata_fraisedevice_4	udata
                                           _FrRXin	res	1
                                           
                                           udata_fraisedevice_5	udata
                                           _FrRXout	res	1
                                           
                                           udata_fraisedevice_6	udata
                                           _FrTXpacket_len	res	1
                                           
                                           udata_fraisedevice_7	udata
                                           _FraiseStatus	res	1
                                           
                                           udata_fraisedevice_8	udata
                                           _FrTXbuf	res	256
                                           
                                           udata_fraisedevice_9	udata
                                           _FrTXchksum	res	1
                                           
                                           udata_fraisedevice_10	udata
                                           _FrTXpacket_i	res	1
                                           
                                           udata_fraisedevice_11	udata
                                           _fraiseDecodeNextTXPacket_ischar_1_92	res	1
                                           
                                           udata_fraisedevice_12	udata
                                           _FrTXpacket	res	35
                                           
                                           udata_fraisedevice_13	udata
                                           _FrRXchksum	res	1
                                           
                                           udata_fraisedevice_14	udata
                                           _FrRXin_tmp	res	1
                                           
                                           udata_fraisedevice_15	udata
                                           _FrRXin_end	res	1
                                           
                                           udata_fraisedevice_16	udata
                                           _FrRXbuf	res	128
                                           
                                           udata_fraisedevice_17	udata
                                           _FrRXout_end	res	1
                                           
                                           udata_fraisedevice_18	udata
                                           _FrRXout_len	res	1
                                           
                                           udata_fraisedevice_19	udata
                                           _FrRXout_first	res	1
                                           
                                           udata_fraisedevice_20	udata
                                           _txbuf	res	35
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_fraisedevice__putchar	code
                                           _putchar:
                                           ;	.line	780; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	PUTCHAR (c) {
0034d4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0034d6   ffe5
0034d8   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0034da   ffe5
0034dc   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0034de   ffe5
0034e0   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	781; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	txbuf[txlen] = c;
0034e2   0e00     movlw   0                	MOVLW	LOW(_txbuf)
0034e4   010a     movlb   0xa              	BANKSEL	_txlen
0034e6   2527     addwf   0x27, 0, 0x1     	ADDWF	_txlen, W, B
0034e8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0034ea   6a02     clrf    0x2, 0           	CLRF	r0x02
0034ec   0e0f     movlw   0xf              	MOVLW	HIGH(_txbuf)
0034ee   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0034f0   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0034f2   ffe9
0034f4   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0034f6   ffea
0034f8   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
0034fa   ffef
                                           ;	.line	782; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(txlen < (sizeof(txbuf) - 1)) txlen++;
0034fc   0e22     movlw   0x22             	MOVLW	0x22
                                           ; #	SUBWF	_txlen, W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_00807_DS_
                                           ; #	INCF	_txlen, F, B
                                           ; #	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
                                           ;	.line	783; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == '\n') {
0034fe   5d27     subwf   0x27, 0, 0x1     	SUBWF	_txlen, W, B
003500   e201     bc      0x3504           	BC	_10806_DS_
                                           ; removed redundant BANKSEL
003502   2b27     incf    0x27, 0x1, 0x1   	INCF	_txlen, F, B
                                           _10806_DS_:
003504   5000     movf    0, 0, 0          	MOVF	r0x00, W
003506   0a0a     xorlw   0xa              	XORLW	0x0a
003508   e10f     bnz     0x3528           	BNZ	_00810_DS_
                                           _00820_DS_:
00350a   010a     movlb   0xa              	BANKSEL	_txlen
                                           ;	.line	784; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSend(txbuf, txlen);
00350c   5127     movf    0x27, 0, 0x1     	MOVF	_txlen, W, B
00350e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003510   0e80     movlw   0x80             	MOVLW	0x80
003512   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003514   0e0f     movlw   0xf              	MOVLW	HIGH(_txbuf)
003516   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003518   0e00     movlw   0                	MOVLW	LOW(_txbuf)
00351a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00351c   ec94     call    0x2528, 0        	CALL	_fraiseSend
00351e   f012
003520   0e04     movlw   0x4              	MOVLW	0x04
003522   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003524   010a     movlb   0xa              	BANKSEL	_txlen
                                           ;	.line	785; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	txlen = 0;
003526   6b27     clrf    0x27, 0x1        	CLRF	_txlen, B
                                           _00810_DS_:
003528   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00352a   f002
00352c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00352e   f001
003530   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003532   f000
003534   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseService	code
                                           _fraiseService:
                                           ;	.line	696; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseService(void)
001fe0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
001fe2   ffe5
001fe4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
001fe6   ffe5
001fe8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
001fea   ffe5
001fec   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
001fee   ffe5
001ff0   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
001ff2   ffe5
001ff4   010a     movlb   0xa              	BANKSEL	_FrRXout
                                           ;	.line	700; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXout != FrRXin) //FraiseStatus.RX_FULL
001ff6   5150     movf    0x50, 0, 0x1     	MOVF	_FrRXout, W, B
001ff8   010a     movlb   0xa              	BANKSEL	_FrRXin
001ffa   194f     xorwf   0x4f, 0, 0x1     	XORWF	_FrRXin, W, B
001ffc   e101     bnz     0x2000           	BNZ	_00784_DS_
001ffe   d05c     bra     0x20b8           	BRA	_00730_DS_
                                           _00784_DS_:
                                           ;	.line	702; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = FrRXout;
002000   ca50     movff   0xa50, 0         	MOVFF	_FrRXout, r0x00
002002   f000
                                           ;	.line	703; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c += 1;
002004   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
                                           ;	.line	704; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c %= sizeof(FrRXbuf);
002006   9e00     bcf     0, 0x7, 0        	BCF	r0x00, 7
                                           ;	.line	705; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len = FrRXbuf[c];
002008   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
00200a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00200c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00200e   6a02     clrf    0x2, 0           	CLRF	r0x02
002010   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
002012   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002014   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002016   ffe9
002018   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00201a   ffea
00201c   cfef     movff   0xfef, 0xa5a     	MOVFF	INDF0, _FrRXout_len
00201e   fa5a
                                           ;	.line	706; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len &= 31;
002020   0e1f     movlw   0x1f             	MOVLW	0x1f
002022   010a     movlb   0xa              	BANKSEL	_FrRXout_len
002024   175a     andwf   0x5a, 0x1, 0x1   	ANDWF	_FrRXout_len, F, B
                                           ;	.line	708; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end = FrRXout;
002026   ca50     movff   0xa50, 0xa59     	MOVFF	_FrRXout, _FrRXout_end
002028   fa59
                                           ; removed redundant BANKSEL
                                           ;	.line	709; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end += FrRXout_len;
00202a   515a     movf    0x5a, 0, 0x1     	MOVF	_FrRXout_len, W, B
00202c   010a     movlb   0xa              	BANKSEL	_FrRXout_end
00202e   2759     addwf   0x59, 0x1, 0x1   	ADDWF	_FrRXout_end, F, B
                                           ;	.line	710; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end += 2;
002030   2b59     incf    0x59, 0x1, 0x1   	INCF	_FrRXout_end, F, B
002032   2b59     incf    0x59, 0x1, 0x1   	INCF	_FrRXout_end, F, B
                                           ;	.line	711; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end %= sizeof(FrRXbuf);
002034   9f59     bcf     0x59, 0x7, 0x1   	BCF	_FrRXout_end, 7, B
                                           ;	.line	713; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	isbroadcast = (fraiseGetChar() == 0);
002036   ecf6     call    0x35ec, 0        	CALL	_fraiseGetChar
002038   f01a
00203a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00203c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00203e   e103     bnz     0x2046           	BNZ	_00788_DS_
002040   6a01     clrf    0x1, 0           	CLRF	r0x01
002042   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
002044   d001     bra     0x2048           	BRA	_00789_DS_
                                           _00788_DS_:
002046   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00789_DS_:
                                           ;	.line	714; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len = fraiseGetChar();
002048   ecf6     call    0x35ec, 0        	CALL	_fraiseGetChar
00204a   f01a
00204c   010a     movlb   0xa              	BANKSEL	_FrRXout_len
00204e   6f5a     movwf   0x5a, 0x1        	MOVWF	_FrRXout_len, B
                                           ;	.line	715; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	ischar = FrRXout_len & 128;
002050   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
002052   155a     andwf   0x5a, 0, 0x1     	ANDWF	_FrRXout_len, W, B
002054   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	717; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!(FrRXout_len &= 31)){ //packet error
002056   0e1f     movlw   0x1f             	MOVLW	0x1f
                                           ; removed redundant BANKSEL
002058   155a     andwf   0x5a, 0, 0x1     	ANDWF	_FrRXout_len, W, B
00205a   6e03     movwf   0x3, 0           	MOVWF	r0x03
00205c   c003     movff   0x3, 0x4         	MOVFF	r0x03, r0x04
00205e   f004
002060   c003     movff   0x3, 0xa5a       	MOVFF	r0x03, _FrRXout_len
002062   fa5a
002064   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002066   e103     bnz     0x206e           	BNZ	_00709_DS_
                                           ;	.line	718; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout = FrRXin;
002068   ca4f     movff   0xa4f, 0xa50     	MOVFF	_FrRXin, _FrRXout
00206a   fa50
                                           ;	.line	719; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
00206c   d038     bra     0x20de           	BRA	_00739_DS_
                                           _00709_DS_:
                                           ;	.line	722; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(isbroadcast) //Broadcast packet
00206e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002070   e01b     bz      0x20a8           	BZ	_00726_DS_
                                           ;	.line	724; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(ischar){
002072   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002074   e01f     bz      0x20b4           	BZ	_00728_DS_
                                           ;	.line	725; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetChar();
002076   ecf6     call    0x35ec, 0        	CALL	_fraiseGetChar
002078   f01a
00207a   6e00     movwf   0, 0             	MOVWF	r0x00
00207c   010a     movlb   0xa              	BANKSEL	_FrRXout_len
                                           ;	.line	726; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len -= 1;
00207e   075a     decf    0x5a, 0x1, 0x1   	DECF	_FrRXout_len, F, B
                                           ;	.line	727; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if     (c == 'B') {
002080   5000     movf    0, 0, 0          	MOVF	r0x00, W
002082   0a42     xorlw   0x42             	XORLW	0x42
002084   e017     bz      0x20b4           	BZ	_00728_DS_
                                           ;	.line	732; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'N') Assign();		/* assign to id if name matchs */
002086   5000     movf    0, 0, 0          	MOVF	r0x00, W
002088   0a4e     xorlw   0x4e             	XORLW	0x4e
00208a   e103     bnz     0x2092           	BNZ	_00716_DS_
00208c   ecc9     call    0x2f92, 0        	CALL	_Assign
00208e   f017
002090   d011     bra     0x20b4           	BRA	_00728_DS_
                                           _00716_DS_:
                                           ;	.line	733; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'F') ResetToBld();	/* goto Fraisebootloader if name matchs */
002092   5000     movf    0, 0, 0          	MOVF	r0x00, W
002094   0a46     xorlw   0x46             	XORLW	0x46
002096   e103     bnz     0x209e           	BNZ	_00713_DS_
002098   ecff     call    0x3bfe, 0        	CALL	_ResetToBld
00209a   f01d
00209c   d00b     bra     0x20b4           	BRA	_00728_DS_
                                           _00713_DS_:
                                           ;	.line	734; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'I') __asm reset __endasm; //init
00209e   5000     movf    0, 0, 0          	MOVF	r0x00, W
0020a0   0a49     xorlw   0x49             	XORLW	0x49
0020a2   e108     bnz     0x20b4           	BNZ	_00728_DS_
                                           _00799_DS_:
0020a4   00ff     reset                    	reset	
0020a6   d006     bra     0x20b4           	BRA	_00728_DS_
                                           _00726_DS_:
                                           ;	.line	746; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_first = FrRXout;
0020a8   ca50     movff   0xa50, 0xa5b     	MOVFF	_FrRXout, _FrRXout_first
0020aa   fa5b
                                           ; #	MOVF	r0x02, W
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00728_DS_
                                           ; #	CALL	_fraiseReceiveChar
                                           ; #	MOVFF	_FrRXout_end, _FrRXout
                                           ;	.line	747; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) {
0020ac   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ;	.line	749; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseReceiveChar();
0020ae   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
                                           ;	.line	760; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout = FrRXout_end;
0020b0   ec0b     call    0x3216, 0        	CALL	_fraiseReceiveChar
0020b2   f019
                                           _00728_DS_:
0020b4   ca59     movff   0xa59, 0xa50     	MOVFF	_FrRXout_end, _FrRXout
0020b6   fa50
                                           _00730_DS_:
0020b8   010a     movlb   0xa              	BANKSEL	_FrTXin
                                           ;	.line	763; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if((!FrTXempty) && (!FrTXpacket_len)) { // if there is sth to send to master and nothing in TXpacket :
0020ba   5122     movf    0x22, 0, 0x1     	MOVF	_FrTXin, W, B
0020bc   010a     movlb   0xa              	BANKSEL	_FrTXout
0020be   1923     xorwf   0x23, 0, 0x1     	XORWF	_FrTXout, W, B
0020c0   e006     bz      0x20ce           	BZ	_00736_DS_
                                           _00801_DS_:
0020c2   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
0020c4   5151     movf    0x51, 0, 0x1     	MOVF	_FrTXpacket_len, W, B
0020c6   e103     bnz     0x20ce           	BNZ	_00736_DS_
                                           ;	.line	764; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseDecodeNextTXPacket();
0020c8   ec04     call    0x2208, 0        	CALL	_fraiseDecodeNextTXPacket
0020ca   f011
0020cc   d008     bra     0x20de           	BRA	_00739_DS_
                                           _00736_DS_:
                                           ;	.line	766; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(Serial_Is_Driver() && (!FrTXpacket_len) && TXSTAxbits.TRMT)// security:
0020ce   b094     btfsc   0x94, 0, 0       	BTFSC	_TRISCbits, 0
0020d0   d006     bra     0x20de           	BRA	_00739_DS_
0020d2   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
0020d4   5151     movf    0x51, 0, 0x1     	MOVF	_FrTXpacket_len, W, B
                                           ;	.line	767; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0020d6   e103     bnz     0x20de           	BNZ	_00739_DS_
                                           ; #	GOTO	_00739_DS_
                                           ; #	BTFSS	_TXSTAbits, 1
                                           ; #	GOTO	_00739_DS_
                                           ; #	CALL	_Serial_Init_Receiver
                                           ; #; info ==> [localregs] exit begin
                                           
                                           ; #	MOVFF	PREINC1, r0x04
                                           ;	.line	769; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;	
0020d8   b2ac     btfsc   0xac, 0x1, 0     	BTFSC	_TXSTAbits, 1
0020da   eccb     call    0x3b96, 0        	CALL	_Serial_Init_Receiver
0020dc   f01d
                                           _00739_DS_:
0020de   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0020e0   f004
0020e2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0020e4   f003
0020e6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0020e8   f002
0020ea   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0020ec   f001
0020ee   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0020f0   f000
0020f2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__ResetToBld	code
                                           _ResetToBld:
                                           ;	.line	682; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static void ResetToBld() //"F" command
003bfe   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003c00   ffe5
                                           ;	.line	685; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(CompareName()) {
003c02   ecfc     call    0x33f8, 0        	CALL	_CompareName
003c04   f019
003c06   6e00     movwf   0, 0             	MOVWF	r0x00
003c08   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ;	.line	687; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
003c0a   e101     bnz     0x3c0e           	BNZ	_00703_DS_
                                           _00702_DS_:
003c0c   00ff     reset                    	reset	
                                           _00703_DS_:
003c0e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003c10   f000
003c12   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__Assign	code
                                           _Assign:
                                           ;	.line	664; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static void Assign() //"N" command
002f92   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002f94   ffe5
002f96   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002f98   ffe5
002f9a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002f9c   ffe5
                                           ;	.line	667; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetChar();
002f9e   ecf6     call    0x35ec, 0        	CALL	_fraiseGetChar
002fa0   f01a
002fa2   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	668; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c2 = fraiseGetChar();
002fa4   ecf6     call    0x35ec, 0        	CALL	_fraiseGetChar
002fa6   f01a
002fa8   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           ;	.line	669; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c -= '0'; if (c > 9) c -= 'A' - '9' - 1;
002faa   5000     movf    0, 0, 0          	MOVF	r0x00, W
002fac   6e02     movwf   0x2, 0           	MOVWF	r0x02
002fae   0ed0     movlw   0xd0             	MOVLW	0xd0
002fb0   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
002fb2   6e00     movwf   0, 0             	MOVWF	r0x00
002fb4   0e0a     movlw   0xa              	MOVLW	0x0a
002fb6   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002fb8   e305     bnc     0x2fc4           	BNC	_00671_DS_
002fba   5000     movf    0, 0, 0          	MOVF	r0x00, W
002fbc   6e02     movwf   0x2, 0           	MOVWF	r0x02
002fbe   0ef9     movlw   0xf9             	MOVLW	0xf9
002fc0   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
002fc2   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _00671_DS_:
                                           ;	.line	670; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c2 -= '0'; if (c2 > 9) c2 -= 'A' - '9' - 1;
002fc4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002fc6   6e02     movwf   0x2, 0           	MOVWF	r0x02
002fc8   0ed0     movlw   0xd0             	MOVLW	0xd0
002fca   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
002fcc   6e01     movwf   0x1, 0           	MOVWF	r0x01
002fce   0e0a     movlw   0xa              	MOVLW	0x0a
002fd0   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002fd2   e305     bnc     0x2fde           	BNC	_00673_DS_
002fd4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002fd6   6e02     movwf   0x2, 0           	MOVWF	r0x02
002fd8   0ef9     movlw   0xf9             	MOVLW	0xf9
002fda   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
002fdc   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           _00673_DS_:
                                           ;	.line	671; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if((c > 7) || (c2 > 15)) { // bad id... discard
002fde   0e08     movlw   0x8              	MOVLW	0x08
002fe0   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002fe2   e212     bc      0x3008           	BC	_00679_DS_
002fe4   0e10     movlw   0x10             	MOVLW	0x10
                                           ; #	SUBWF	r0x01, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00675_DS_
                                           ; #	GOTO	_00679_DS_
                                           ; #	SWAPF	r0x00, W
                                           ;	.line	672; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return; 
002fe6   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           ;	.line	674; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	tmpid = c2 + (c << 4);
002fe8   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
                                           _00674_DS_:
002fea   d00e     bra     0x3008           	BRA	_00679_DS_
002fec   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
002fee   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
002ff0   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002ff2   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	676; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(CompareName()) return;
002ff4   ecfc     call    0x33f8, 0        	CALL	_CompareName
002ff6   f019
002ff8   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00678_DS_
                                           ; #	GOTO	_00679_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	678; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSetID(tmpid);
002ffa   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002ffc   e105     bnz     0x3008           	BNZ	_00679_DS_
002ffe   5000     movf    0, 0, 0          	MOVF	r0x00, W
003000   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003002   ec8e     call    0x391c, 0        	CALL	_fraiseSetID
003004   f01c
003006   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00679_DS_:
                                           ;	.line	679; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
003008   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00300a   f002
00300c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00300e   f001
003010   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003012   f000
003014   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__CompareName	code
                                           _CompareName:
                                           ;	.line	632; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static char CompareName() 
0033f8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0033fa   ffe5
0033fc   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0033fe   ffe5
003400   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003402   ffe5
                                           ;	.line	636; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	eei = EE_PREFIX;
003404   0e01     movlw   0x1              	MOVLW	0x01
003406   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _00636_DS_:
                                           ;	.line	637; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(c = fraiseGetChar()){
003408   ecf6     call    0x35ec, 0        	CALL	_fraiseGetChar
00340a   f01a
00340c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00340e   c001     movff   0x1, 0x2         	MOVFF	r0x01, r0x02
003410   f002
003412   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003414   e023     bz      0x345c           	BZ	_00638_DS_
                                           ;	.line	638; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c2 = eeReadByte(eei);
003416   5000     movf    0, 0, 0          	MOVF	r0x00, W
003418   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00341a   ecbd     call    0x3b7a, 0        	CALL	_eeReadByte
00341c   f01d
00341e   6e01     movwf   0x1, 0           	MOVWF	r0x01
003420   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	639; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c2 == 0) { //end of string
003422   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003424   e110     bnz     0x3446           	BNZ	_00631_DS_
                                           ;	.line	640; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(eei < EE_NAME) { //end of prefix
003426   0e0a     movlw   0xa              	MOVLW	0x0a
003428   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00342a   e20b     bc      0x3442           	BC	_00628_DS_
                                           ; #	MOVLW	0x0a
                                           ; #	MOVWF	r0x00
                                           ; #	MOVLW	0x0a
                                           ;	.line	641; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	eei = EE_NAME; //goto to name first char
00342c   0e0a     movlw   0xa              	MOVLW	0x0a
                                           ;	.line	642; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c2 = eeReadByte(eei);
00342e   6e00     movwf   0, 0             	MOVWF	r0x00
003430   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003432   ecbd     call    0x3b7a, 0        	CALL	_eeReadByte
003434   f01d
003436   6e01     movwf   0x1, 0           	MOVWF	r0x01
003438   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	643; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c2 == 0) { //no name?!
00343a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00343c   e104     bnz     0x3446           	BNZ	_00631_DS_
                                           ;	.line	644; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return -1; 
00343e   68e8     setf    0xe8, 0          	SETF	WREG
003440   d00e     bra     0x345e           	BRA	_00639_DS_
                                           _00628_DS_:
                                           ;	.line	648; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return -1; 
003442   68e8     setf    0xe8, 0          	SETF	WREG
003444   d00c     bra     0x345e           	BRA	_00639_DS_
                                           _00631_DS_:
                                           ;	.line	651; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c2 != c) { //spelled name differs from device name; discard.
003446   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003448   1802     xorwf   0x2, 0, 0        	XORWF	r0x02, W
00344a   e002     bz      0x3450           	BZ	_00633_DS_
                                           ;	.line	652; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return -1; 
00344c   68e8     setf    0xe8, 0          	SETF	WREG
00344e   d007     bra     0x345e           	BRA	_00639_DS_
                                           _00633_DS_:
                                           ;	.line	654; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	eei++;
003450   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
                                           ;	.line	655; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(eei > EE_NAMEMAX) { //spelled name too long; discard.
003452   0e1b     movlw   0x1b             	MOVLW	0x1b
003454   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003456   e3d8     bnc     0x3408           	BNC	_00636_DS_
                                           ;	.line	656; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return -1;
003458   68e8     setf    0xe8, 0          	SETF	WREG
00345a   d001     bra     0x345e           	BRA	_00639_DS_
                                           _00638_DS_:
                                           ;	.line	660; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return 0;
00345c   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00639_DS_:
00345e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003460   f002
003462   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003464   f001
003466   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003468   f000
00346a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSendCopy	code
                                           _fraiseSendCopy:
                                           ;	.line	614; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSendCopy()
002c90   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002c92   ffe5
002c94   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002c96   ffe5
002c98   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002c9a   ffe5
002c9c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002c9e   ffe5
                                           ;	.line	618; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	l = (FrRXout - FrRXout_first)%sizeof(FrRXbuf);
002ca0   ca50     movff   0xa50, 0         	MOVFF	_FrRXout, r0x00
002ca2   f000
002ca4   6a01     clrf    0x1, 0           	CLRF	r0x01
002ca6   ca5b     movff   0xa5b, 0x2       	MOVFF	_FrRXout_first, r0x02
002ca8   f002
002caa   6a03     clrf    0x3, 0           	CLRF	r0x03
002cac   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002cae   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
002cb0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002cb2   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
002cb4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002cb6   0e80     movlw   0x80             	MOVLW	0x80
002cb8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002cba   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002cbc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002cbe   5000     movf    0, 0, 0          	MOVF	r0x00, W
002cc0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002cc2   ec86     call    0x270c, 0        	CALL	__modsint
002cc4   f013
002cc6   6e00     movwf   0, 0             	MOVWF	r0x00
002cc8   0e04     movlw   0x4              	MOVLW	0x04
002cca   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	619; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	l--;
002ccc   0600     decf    0, 0x1, 0        	DECF	r0x00, F
                                           ;	.line	620; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	i = FrRXout_first;
002cce   ca5b     movff   0xa5b, 0x1       	MOVFF	_FrRXout_first, r0x01
002cd0   f001
                                           ;	.line	621; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	putchar('C'); putchar(' '); 
002cd2   0e43     movlw   0x43             	MOVLW	0x43
002cd4   ec6a     call    0x34d4, 0        	CALL	_putchar
002cd6   f01a
002cd8   0e20     movlw   0x20             	MOVLW	0x20
002cda   ec6a     call    0x34d4, 0        	CALL	_putchar
002cdc   f01a
                                           _00604_DS_:
                                           ;	.line	623; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(l > 0) {
002cde   5000     movf    0, 0, 0          	MOVF	r0x00, W
002ce0   e020     bz      0x2d22           	BZ	_00607_DS_
                                           ;	.line	624; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	printf("%d ", FrRXbuf[i]);
002ce2   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
002ce4   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002ce6   6e02     movwf   0x2, 0           	MOVWF	r0x02
002ce8   6a03     clrf    0x3, 0           	CLRF	r0x03
002cea   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
002cec   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
002cee   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
002cf0   ffe9
002cf2   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
002cf4   ffea
002cf6   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
002cf8   f002
002cfa   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002cfc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002cfe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002d00   0e00     movlw   0                	MOVLW	UPPER(___str_0)
002d02   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002d04   0e3b     movlw   0x3b             	MOVLW	HIGH(___str_0)
002d06   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002d08   0eae     movlw   0xae             	MOVLW	LOW(___str_0)
002d0a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002d0c   ec8c     call    0x3118, 0        	CALL	_printf
002d0e   f018
002d10   0e05     movlw   0x5              	MOVLW	0x05
002d12   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	625; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	i++;
002d14   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
                                           ;	.line	626; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(i == sizeof(FrRXbuf)) i = 0;
002d16   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002d18   0a80     xorlw   0x80             	XORLW	0x80
002d1a   e101     bnz     0x2d1e           	BNZ	_00603_DS_
002d1c   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00603_DS_:
                                           ;	.line	627; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	l--;
002d1e   0600     decf    0, 0x1, 0        	DECF	r0x00, F
002d20   d7de     bra     0x2cde           	BRA	_00604_DS_
                                           _00607_DS_:
002d22   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002d24   f003
002d26   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002d28   f002
002d2a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002d2c   f001
002d2e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002d30   f000
002d32   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetAt	code
                                           _fraiseGetAt:
                                           ;	.line	609; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	unsigned char fraiseGetAt(unsigned char i)
003382   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003384   ffe5
003386   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003388   ffd9
00338a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00338c   ffe5
00338e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003390   ffe5
003392   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003394   ffe5
003396   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003398   ffe5
00339a   0e02     movlw   0x2              	MOVLW	0x02
00339c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00339e   f000
                                           ;	.line	611; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return FrRXbuf[(i + FrRXout_first)%sizeof(FrRXbuf)];
0033a0   6a01     clrf    0x1, 0           	CLRF	r0x01
0033a2   ca5b     movff   0xa5b, 0x2       	MOVFF	_FrRXout_first, r0x02
0033a4   f002
0033a6   6a03     clrf    0x3, 0           	CLRF	r0x03
0033a8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0033aa   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0033ac   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0033ae   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0033b0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0033b2   0e80     movlw   0x80             	MOVLW	0x80
0033b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0033b6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0033b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0033ba   5000     movf    0, 0, 0          	MOVF	r0x00, W
0033bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0033be   ec86     call    0x270c, 0        	CALL	__modsint
0033c0   f013
0033c2   6e00     movwf   0, 0             	MOVWF	r0x00
0033c4   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0033c6   f001
0033c8   0e04     movlw   0x4              	MOVLW	0x04
0033ca   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0033cc   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
0033ce   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0033d0   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
0033d2   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0033d4   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0033d6   ffe9
0033d8   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0033da   ffea
0033dc   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
0033de   f000
0033e0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0033e2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0033e4   f003
0033e6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0033e8   f002
0033ea   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0033ec   f001
0033ee   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0033f0   f000
0033f2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0033f4   ffd9
0033f6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetIndex	code
                                           _fraiseGetIndex:
003caa   010a     movlb   0xa              	BANKSEL	_FrRXout
                                           ;	.line	606; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return FrRXout;
003cac   5150     movf    0x50, 0, 0x1     	MOVF	_FrRXout, W, B
003cae   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetLen	code
                                           _fraiseGetLen:
003cb0   010a     movlb   0xa              	BANKSEL	_FrRXout_len
                                           ;	.line	601; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return FrRXout_len;
003cb2   515a     movf    0x5a, 0, 0x1     	MOVF	_FrRXout_len, W, B
003cb4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraisePeekChar	code
                                           _fraisePeekChar:
                                           ;	.line	594; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	unsigned char fraisePeekChar()
00397c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00397e   ffe5
003980   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003982   ffe5
                                           ;	.line	596; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return FrRXbuf[FrRXout];
003984   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
003986   010a     movlb   0xa              	BANKSEL	_FrRXout
003988   2550     addwf   0x50, 0, 0x1     	ADDWF	_FrRXout, W, B
00398a   6e00     movwf   0, 0             	MOVWF	r0x00
00398c   6a01     clrf    0x1, 0           	CLRF	r0x01
00398e   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
003990   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003992   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003994   ffe9
003996   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
003998   ffea
00399a   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
00399c   f000
00399e   5000     movf    0, 0, 0          	MOVF	r0x00, W
0039a0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0039a2   f001
0039a4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0039a6   f000
0039a8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetChar	code
                                           _fraiseGetChar:
                                           ;	.line	584; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	unsigned char fraiseGetChar()
0035ec   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0035ee   ffe5
0035f0   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0035f2   ffe5
0035f4   010a     movlb   0xa              	BANKSEL	_FrRXout
                                           ;	.line	588; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if((FrRXout == FrRXout_end) || (FrRXout == FrRXin)) return 0; //underflow error
0035f6   5150     movf    0x50, 0, 0x1     	MOVF	_FrRXout, W, B
0035f8   010a     movlb   0xa              	BANKSEL	_FrRXout_end
0035fa   1959     xorwf   0x59, 0, 0x1     	XORWF	_FrRXout_end, W, B
0035fc   e005     bz      0x3608           	BZ	_00559_DS_
                                           _00573_DS_:
0035fe   010a     movlb   0xa              	BANKSEL	_FrRXout
003600   5150     movf    0x50, 0, 0x1     	MOVF	_FrRXout, W, B
003602   010a     movlb   0xa              	BANKSEL	_FrRXin
003604   194f     xorwf   0x4f, 0, 0x1     	XORWF	_FrRXin, W, B
003606   e102     bnz     0x360c           	BNZ	_00560_DS_
                                           _00559_DS_:
003608   6ae8     clrf    0xe8, 0          	CLRF	WREG
00360a   d015     bra     0x3636           	BRA	_00564_DS_
                                           _00560_DS_:
                                           ;	.line	589; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = FrRXbuf[FrRXout++];
00360c   ca50     movff   0xa50, 0         	MOVFF	_FrRXout, r0x00
00360e   f000
003610   010a     movlb   0xa              	BANKSEL	_FrRXout
003612   2b50     incf    0x50, 0x1, 0x1   	INCF	_FrRXout, F, B
003614   6a01     clrf    0x1, 0           	CLRF	r0x01
003616   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
003618   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00361a   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
00361c   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00361e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003620   ffe9
003622   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
003624   ffea
003626   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
003628   f000
                                           ; removed redundant BANKSEL
                                           ;	.line	590; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXout == sizeof(FrRXbuf)) FrRXout = 0;
00362a   5150     movf    0x50, 0, 0x1     	MOVF	_FrRXout, W, B
00362c   0a80     xorlw   0x80             	XORLW	0x80
00362e   e102     bnz     0x3634           	BNZ	_00563_DS_
                                           _00577_DS_:
003630   010a     movlb   0xa              	BANKSEL	_FrRXout
003632   6b50     clrf    0x50, 0x1        	CLRF	_FrRXout, B
                                           _00563_DS_:
                                           ;	.line	591; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return c;
003634   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           _00564_DS_:
003636   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003638   f001
00363a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00363c   f000
00363e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseISR	code
                                           _fraiseISR:
                                           ;	.line	467; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseISR(void)
001592   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
001594   ffe5
001596   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
001598   ffe5
                                           ; #	MOVF	_FrInterruptEnabled, W, B
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00391_DS_
                                           ; #	GOTO	_00457_DS_
                                           ; #	BTFSS	_PIE1bits, 4
00159a   010a     movlb   0xa              	BANKSEL	_FrInterruptEnabled
                                           ;	.line	471; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrInterruptEnabled == 0) return;
00159c   5125     movf    0x25, 0, 0x1     	MOVF	_FrInterruptEnabled, W, B
                                           ;	.line	473; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(TXxIE && TXxIF) {
00159e   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
0015a0   d0f7     bra     0x1790           	BRA	_00457_DS_
0015a2   a89d     btfss   0x9d, 0x4, 0     	BTFSS	_PIE1bits, 4
0015a4   d01d     bra     0x15e0           	BRA	_00395_DS_
0015a6   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
0015a8   d01b     bra     0x15e0           	BRA	_00395_DS_
0015aa   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
                                           ;	.line	474; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrTXpacket_i == FrTXpacket_len) { //if end of the packet:
0015ac   5154     movf    0x54, 0, 0x1     	MOVF	_FrTXpacket_i, W, B
0015ae   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
0015b0   1951     xorwf   0x51, 0, 0x1     	XORWF	_FrTXpacket_len, W, B
0015b2   e105     bnz     0x15be           	BNZ	_00393_DS_
                                           ;	.line	475; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0015b4   eccb     call    0x3b96, 0        	CALL	_Serial_Init_Receiver
0015b6   f01d
0015b8   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
                                           ;	.line	476; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXpacket_len = 0;
0015ba   6b51     clrf    0x51, 0x1        	CLRF	_FrTXpacket_len, B
                                           ;	.line	477; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0015bc   d0e9     bra     0x1790           	BRA	_00457_DS_
                                           _00393_DS_:
                                           ;	.line	479; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = FrTXpacket[FrTXpacket_i];
0015be   0e00     movlw   0                	MOVLW	LOW(_FrTXpacket)
0015c0   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
0015c2   2554     addwf   0x54, 0, 0x1     	ADDWF	_FrTXpacket_i, W, B
0015c4   6e00     movwf   0, 0             	MOVWF	r0x00
0015c6   6a01     clrf    0x1, 0           	CLRF	r0x01
0015c8   0e04     movlw   0x4              	MOVLW	HIGH(_FrTXpacket)
0015ca   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0015cc   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0015ce   ffe9
0015d0   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0015d2   ffea
0015d4   cfef     movff   0xfef, 0xa4d     	MOVFF	INDF0, _fraiseISR_c_1_112
0015d6   fa4d
                                           ; removed redundant BANKSEL
                                           ;	.line	480; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXpacket_i++;
0015d8   2b54     incf    0x54, 0x1, 0x1   	INCF	_FrTXpacket_i, F, B
                                           ;	.line	481; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = c; // send next byte
0015da   ca4d     movff   0xa4d, 0xfad     	MOVFF	_fraiseISR_c_1_112, _TXREG
0015dc   ffad
                                           ;	.line	483; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0015de   d0d8     bra     0x1790           	BRA	_00457_DS_
                                           _00395_DS_:
                                           ;	.line	486; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(RCxIE && RCxIF) {
0015e0   aa9d     btfss   0x9d, 0x5, 0     	BTFSS	_PIE1bits, 5
0015e2   d0d6     bra     0x1790           	BRA	_00457_DS_
0015e4   aa9e     btfss   0x9e, 0x5, 0     	BTFSS	_PIR1bits, 5
0015e6   d0d4     bra     0x1790           	BRA	_00457_DS_
                                           ;	.line	487; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(RCSTAxbits.OERR){
0015e8   a2ab     btfss   0xab, 0x1, 0     	BTFSS	_RCSTAbits, 1
0015ea   d005     bra     0x15f6           	BRA	_00398_DS_
0015ec   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	488; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_OERR = 1;
0015ee   8152     bsf     0x52, 0, 0x1     	BSF	_FraiseStatus, 0, B
                                           ;	.line	489; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0015f0   eccb     call    0x3b96, 0        	CALL	_Serial_Init_Receiver
0015f2   f01d
                                           ;	.line	490; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0015f4   d0cd     bra     0x1790           	BRA	_00457_DS_
                                           _00398_DS_:
                                           ;	.line	492; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(RCSTAxbits.FERR){
0015f6   a4ab     btfss   0xab, 0x2, 0     	BTFSS	_RCSTAbits, 2
0015f8   d005     bra     0x1604           	BRA	_00400_DS_
0015fa   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	493; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_FERR = 1;
0015fc   8352     bsf     0x52, 0x1, 0x1   	BSF	_FraiseStatus, 1, B
                                           ;	.line	494; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0015fe   eccb     call    0x3b96, 0        	CALL	_Serial_Init_Receiver
001600   f01d
                                           ;	.line	495; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001602   d0c6     bra     0x1790           	BRA	_00457_DS_
                                           _00400_DS_:
                                           ;	.line	498; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if (RCSTAxbits.RX9D) { // -------  address : 
001604   a0ab     btfss   0xab, 0, 0       	BTFSS	_RCSTAbits, 0
001606   d03e     bra     0x1684           	BRA	_00412_DS_
                                           ;	.line	499; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = RCREGx; // get byte
001608   cfae     movff   0xfae, 0xa4d     	MOVFF	_RCREG, _fraiseISR_c_1_112
00160a   fa4d
                                           ;	.line	500; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == (FrID | 128)) { // poll signal
00160c   0e80     movlw   0x80             	MOVLW	0x80
00160e   010a     movlb   0xa              	BANKSEL	_FrID
001610   1126     iorwf   0x26, 0, 0x1     	IORWF	_FrID, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	_fraiseISR_c_1_112, W, B
                                           ; #	XORWF	r0x00, W
001612   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
001614   194d     xorwf   0x4d, 0, 0x1     	XORWF	_fraiseISR_c_1_112, W, B
001616   e104     bnz     0x1620           	BNZ	_00402_DS_
                                           _00535_DS_:
001618   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	501; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_POLL = 1;
00161a   8952     bsf     0x52, 0x4, 0x1   	BSF	_FraiseStatus, 4, B
                                           ;	.line	502; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 0;
00161c   96ab     bcf     0xab, 0x3, 0     	BCF	_RCSTAbits, 3
                                           ;	.line	503; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
00161e   d0b8     bra     0x1790           	BRA	_00457_DS_
                                           _00402_DS_:
001620   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
                                           ;	.line	505; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if ((c == 0) || (c == FrID)) {
001622   514d     movf    0x4d, 0, 0x1     	MOVF	_fraiseISR_c_1_112, W, B
001624   e004     bz      0x162e           	BZ	_00408_DS_
                                           ; removed redundant BANKSEL
001626   514d     movf    0x4d, 0, 0x1     	MOVF	_fraiseISR_c_1_112, W, B
001628   010a     movlb   0xa              	BANKSEL	_FrID
00162a   1926     xorwf   0x26, 0, 0x1     	XORWF	_FrID, W, B
00162c   e127     bnz     0x167c           	BNZ	_00409_DS_
                                           _00408_DS_:
00162e   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	506; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_POLL = 0;
001630   9952     bcf     0x52, 0x4, 0x1   	BCF	_FraiseStatus, 4, B
                                           ;	.line	507; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 0;
001632   96ab     bcf     0xab, 0x3, 0     	BCF	_RCSTAbits, 3
001634   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
                                           ;	.line	508; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c) FraiseStatus.RX_BRDCST = 0;
001636   514d     movf    0x4d, 0, 0x1     	MOVF	_fraiseISR_c_1_112, W, B
001638   e003     bz      0x1640           	BZ	_00404_DS_
00163a   010a     movlb   0xa              	BANKSEL	_FraiseStatus
00163c   9752     bcf     0x52, 0x3, 0x1   	BCF	_FraiseStatus, 3, B
00163e   d002     bra     0x1644           	BRA	_00405_DS_
                                           _00404_DS_:
001640   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	509; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else FraiseStatus.RX_BRDCST = 1;
001642   8752     bsf     0x52, 0x3, 0x1   	BSF	_FraiseStatus, 3, B
                                           _00405_DS_:
                                           ;	.line	511; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXchksum = c;
001644   ca4d     movff   0xa4d, 0xa56     	MOVFF	_fraiseISR_c_1_112, _FrRXchksum
001646   fa56
                                           ;	.line	512; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_tmp = FrRXin;
001648   ca4f     movff   0xa4f, 0xa57     	MOVFF	_FrRXin, _FrRXin_tmp
00164a   fa57
00164c   010a     movlb   0xa              	BANKSEL	_FrRXin
                                           ;	.line	513; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end = FrRXin - 1; // protect FrRXin_end
00164e   054f     decf    0x4f, 0, 0x1     	DECF	_FrRXin, W, B
001650   010a     movlb   0xa              	BANKSEL	_FrRXin_end
001652   6f58     movwf   0x58, 0x1        	MOVWF	_FrRXin_end, B
                                           ;	.line	514; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXbuf[FrRXin_tmp] = c;
001654   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
001656   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
001658   2557     addwf   0x57, 0, 0x1     	ADDWF	_FrRXin_tmp, W, B
00165a   6e00     movwf   0, 0             	MOVWF	r0x00
00165c   6a01     clrf    0x1, 0           	CLRF	r0x01
00165e   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
001660   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
001662   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001664   ffe9
001666   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001668   ffea
00166a   ca4d     movff   0xa4d, 0xfef     	MOVFF	_fraiseISR_c_1_112, INDF0
00166c   ffef
                                           ; removed redundant BANKSEL
                                           ;	.line	515; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_tmp++;
00166e   2b57     incf    0x57, 0x1, 0x1   	INCF	_FrRXin_tmp, F, B
                                           ;	.line	516; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == sizeof(FrRXbuf)) FrRXin_tmp = 0;
001670   5157     movf    0x57, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
001672   0a80     xorlw   0x80             	XORLW	0x80
001674   e102     bnz     0x167a           	BNZ	_00407_DS_
                                           _00539_DS_:
001676   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
001678   6b57     clrf    0x57, 0x1        	CLRF	_FrRXin_tmp, B
                                           _00407_DS_:
                                           ;	.line	517; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
00167a   d08a     bra     0x1790           	BRA	_00457_DS_
                                           _00409_DS_:
00167c   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	519; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_POLL= 0;
00167e   9952     bcf     0x52, 0x4, 0x1   	BCF	_FraiseStatus, 4, B
                                           ;	.line	520; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1;
001680   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	521; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001682   d086     bra     0x1790           	BRA	_00457_DS_
                                           _00412_DS_:
                                           ;	.line	524; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = RCREGx; // get byte
001684   cfae     movff   0xfae, 0xa4d     	MOVFF	_RCREG, _fraiseISR_c_1_112
001686   fa4d
001688   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	525; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FraiseStatus.RX_POLL) { // had a poll signal
00168a   a952     btfss   0x52, 0x4, 0x1   	BTFSS	_FraiseStatus, 4, B
00168c   d019     bra     0x16c0           	BRA	_00425_DS_
                                           ;	.line	526; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == (FrID | 128)){ 	// confirmation byte of poll signal:
00168e   0e80     movlw   0x80             	MOVLW	0x80
001690   010a     movlb   0xa              	BANKSEL	_FrID
001692   1126     iorwf   0x26, 0, 0x1     	IORWF	_FrID, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	_fraiseISR_c_1_112, W, B
                                           ; #	XORWF	r0x00, W
001694   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
001696   194d     xorwf   0x4d, 0, 0x1     	XORWF	_fraiseISR_c_1_112, W, B
001698   e111     bnz     0x16bc           	BNZ	_00423_DS_
                                           ;	.line	528; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
00169a   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
00169c   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
00169e   9094     bcf     0x94, 0, 0       	BCF	_TRISCbits, 0
0016a0   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
                                           ;	.line	529; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrTXpacket_len == 0) {
0016a2   5151     movf    0x51, 0, 0x1     	MOVF	_FrTXpacket_len, W, B
0016a4   e104     bnz     0x16ae           	BNZ	_00420_DS_
                                           ;	.line	530; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = 0;
0016a6   6aad     clrf    0xad, 0          	CLRF	_TXREG
                                           ;	.line	531; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0016a8   eccb     call    0x3b96, 0        	CALL	_Serial_Init_Receiver
0016aa   f01d
0016ac   d007     bra     0x16bc           	BRA	_00423_DS_
                                           _00420_DS_:
                                           ;	.line	533; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendLaunch();
0016ae   c400     movff   0x400, 0xfad     	MOVFF	_FrTXpacket, _TXREG
0016b0   ffad
0016b2   0e01     movlw   0x1              	MOVLW	0x01
0016b4   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
0016b6   6f54     movwf   0x54, 0x1        	MOVWF	_FrTXpacket_i, B
0016b8   889d     bsf     0x9d, 0x4, 0     	BSF	_PIE1bits, 4
                                           ;	.line	534; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0016ba   d06a     bra     0x1790           	BRA	_00457_DS_
                                           _00423_DS_:
                                           ;	.line	537; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1;
0016bc   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	538; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0016be   d068     bra     0x1790           	BRA	_00457_DS_
                                           _00425_DS_:
0016c0   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
                                           ;	.line	541; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXchksum += c;
0016c2   514d     movf    0x4d, 0, 0x1     	MOVF	_fraiseISR_c_1_112, W, B
0016c4   010a     movlb   0xa              	BANKSEL	_FrRXchksum
0016c6   2756     addwf   0x56, 0x1, 0x1   	ADDWF	_FrRXchksum, F, B
0016c8   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
                                           ;	.line	543; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == FrRXin_end) {// RX packet complete
0016ca   5157     movf    0x57, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
0016cc   010a     movlb   0xa              	BANKSEL	_FrRXin_end
0016ce   1958     xorwf   0x58, 0, 0x1     	XORWF	_FrRXin_end, W, B
0016d0   e11b     bnz     0x1708           	BNZ	_00446_DS_
                                           _00544_DS_:
0016d2   010a     movlb   0xa              	BANKSEL	_FrRXchksum
                                           ;	.line	544; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!FrRXchksum) { // RX packet checksum ok 
0016d4   5156     movf    0x56, 0, 0x1     	MOVF	_FrRXchksum, W, B
0016d6   e10c     bnz     0x16f0           	BNZ	_00443_DS_
                                           ;	.line	545; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin = FrRXin_tmp; //validation of packet
0016d8   ca57     movff   0xa57, 0xa4f     	MOVFF	_FrRXin_tmp, _FrRXin
0016da   fa4f
0016dc   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	546; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!FraiseStatus.RX_BRDCST){
0016de   b752     btfsc   0x52, 0x3, 0x1   	BTFSC	_FraiseStatus, 3, B
0016e0   d012     bra     0x1706           	BRA	_00444_DS_
                                           ;	.line	547; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
0016e2   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
0016e4   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
0016e6   9094     bcf     0x94, 0, 0       	BCF	_TRISCbits, 0
                                           ;	.line	548; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = 0; //Acknowldge
0016e8   6aad     clrf    0xad, 0          	CLRF	_TXREG
                                           ;	.line	549; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0016ea   eccb     call    0x3b96, 0        	CALL	_Serial_Init_Receiver
0016ec   f01d
0016ee   d00b     bra     0x1706           	BRA	_00444_DS_
                                           _00443_DS_:
0016f0   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	553; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_SERR = 1;
0016f2   8552     bsf     0x52, 0x2, 0x1   	BSF	_FraiseStatus, 2, B
                                           ;	.line	554; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!FraiseStatus.RX_BRDCST){
0016f4   b752     btfsc   0x52, 0x3, 0x1   	BTFSC	_FraiseStatus, 3, B
0016f6   d007     bra     0x1706           	BRA	_00444_DS_
                                           ;	.line	555; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
0016f8   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
0016fa   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
0016fc   9094     bcf     0x94, 0, 0       	BCF	_TRISCbits, 0
                                           ;	.line	556; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = 1; //Checksum nack
0016fe   0e01     movlw   0x1              	MOVLW	0x01
001700   6ead     movwf   0xad, 0          	MOVWF	_TXREG
                                           ;	.line	557; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
001702   eccb     call    0x3b96, 0        	CALL	_Serial_Init_Receiver
001704   f01d
                                           _00444_DS_:
                                           ;	.line	560; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001706   d044     bra     0x1790           	BRA	_00457_DS_
                                           _00446_DS_:
001708   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
                                           ;	.line	563; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if((FrRXin_tmp == FrRXout)&&(FrRXout != FrRXin)) { //collision case : RX buffer full !
00170a   5157     movf    0x57, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
00170c   010a     movlb   0xa              	BANKSEL	_FrRXout
00170e   1950     xorwf   0x50, 0, 0x1     	XORWF	_FrRXout, W, B
001710   e108     bnz     0x1722           	BNZ	_00448_DS_
                                           _00546_DS_:
001712   010a     movlb   0xa              	BANKSEL	_FrRXout
001714   5150     movf    0x50, 0, 0x1     	MOVF	_FrRXout, W, B
001716   010a     movlb   0xa              	BANKSEL	_FrRXin
001718   194f     xorwf   0x4f, 0, 0x1     	XORWF	_FrRXin, W, B
00171a   e003     bz      0x1722           	BZ	_00448_DS_
                                           ;	.line	564; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver(); // discard current packet... TODO:send an buffer full nack (2)
00171c   eccb     call    0x3b96, 0        	CALL	_Serial_Init_Receiver
00171e   f01d
                                           ;	.line	565; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001720   d037     bra     0x1790           	BRA	_00457_DS_
                                           _00448_DS_:
                                           ;	.line	568; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c2 = (FrRXin + 1) % sizeof(FrRXbuf);
001722   ca4f     movff   0xa4f, 0         	MOVFF	_FrRXin, r0x00
001724   f000
001726   6a01     clrf    0x1, 0           	CLRF	r0x01
001728   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
00172a   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
00172c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00172e   0e80     movlw   0x80             	MOVLW	0x80
001730   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001732   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001734   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001736   5000     movf    0, 0, 0          	MOVF	r0x00, W
001738   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00173a   ec86     call    0x270c, 0        	CALL	__modsint
00173c   f013
00173e   6e00     movwf   0, 0             	MOVWF	r0x00
001740   0e04     movlw   0x4              	MOVLW	0x04
001742   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001744   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; #	MOVWF	_fraiseISR_c2_1_112, B
                                           ; #	MOVF	_FrRXin_tmp, W, B
                                           ; #	XORWF	_fraiseISR_c2_1_112, W, B
001746   010a     movlb   0xa              	BANKSEL	_fraiseISR_c2_1_112
                                           ;	.line	569; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == c2) { //FrRXin_tmp == (FrRXin + 1): first byte following address = data length...
001748   6f4e     movwf   0x4e, 0x1        	MOVWF	_fraiseISR_c2_1_112, B
00174a   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
00174c   1957     xorwf   0x57, 0, 0x1     	XORWF	_FrRXin_tmp, W, B
00174e   e10c     bnz     0x1768           	BNZ	_00451_DS_
                                           ;	.line	570; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end = (c & 31);
001750   0e1f     movlw   0x1f             	MOVLW	0x1f
001752   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
001754   154d     andwf   0x4d, 0, 0x1     	ANDWF	_fraiseISR_c_1_112, W, B
001756   010a     movlb   0xa              	BANKSEL	_FrRXin_end
001758   6f58     movwf   0x58, 0x1        	MOVWF	_FrRXin_end, B
                                           ;	.line	571; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end += 2;
00175a   2b58     incf    0x58, 0x1, 0x1   	INCF	_FrRXin_end, F, B
00175c   2b58     incf    0x58, 0x1, 0x1   	INCF	_FrRXin_end, F, B
00175e   010a     movlb   0xa              	BANKSEL	_FrRXin
                                           ;	.line	572; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end += FrRXin;
001760   514f     movf    0x4f, 0, 0x1     	MOVF	_FrRXin, W, B
001762   010a     movlb   0xa              	BANKSEL	_FrRXin_end
001764   2758     addwf   0x58, 0x1, 0x1   	ADDWF	_FrRXin_end, F, B
                                           ;	.line	573; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end %= sizeof(FrRXbuf);
001766   9f58     bcf     0x58, 0x7, 0x1   	BCF	_FrRXin_end, 7, B
                                           _00451_DS_:
                                           ;	.line	576; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXbuf[FrRXin_tmp++] = c;
001768   ca57     movff   0xa57, 0         	MOVFF	_FrRXin_tmp, r0x00
00176a   f000
00176c   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
00176e   2b57     incf    0x57, 0x1, 0x1   	INCF	_FrRXin_tmp, F, B
001770   6a01     clrf    0x1, 0           	CLRF	r0x01
001772   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
001774   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
001776   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
001778   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00177a   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00177c   ffe9
00177e   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001780   ffea
001782   ca4d     movff   0xa4d, 0xfef     	MOVFF	_fraiseISR_c_1_112, INDF0
001784   ffef
                                           ; removed redundant BANKSEL
                                           ;	.line	577; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == sizeof(FrRXbuf)) FrRXin_tmp = 0; //ring buffer index
001786   5157     movf    0x57, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
001788   0a80     xorlw   0x80             	XORLW	0x80
00178a   e102     bnz     0x1790           	BNZ	_00457_DS_
                                           _00554_DS_:
00178c   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
00178e   6b57     clrf    0x57, 0x1        	CLRF	_FrRXin_tmp, B
                                           _00457_DS_:
                                           ;	.line	578; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001790   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
001792   f001
001794   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
001796   f000
001798   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSendBroadcast	code
                                           _fraiseSendBroadcast:
                                           ;	.line	420; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSendBroadcast(const unsigned char *buf, unsigned char len)
00231a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00231c   ffe5
00231e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002320   ffd9
002322   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002324   ffe5
002326   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002328   ffe5
00232a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00232c   ffe5
00232e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002330   ffe5
002332   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002334   ffe5
002336   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002338   ffe5
00233a   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
00233c   ffe5
00233e   0e02     movlw   0x2              	MOVLW	0x02
002340   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002342   f000
002344   0e03     movlw   0x3              	MOVLW	0x03
002346   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002348   f001
00234a   0e04     movlw   0x4              	MOVLW	0x04
00234c   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
00234e   f002
002350   0e05     movlw   0x5              	MOVLW	0x05
002352   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
002354   f003
                                           ;	.line	422; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	unsigned char i = len;
002356   c003     movff   0x3, 0x4         	MOVFF	r0x03, r0x04
002358   f004
                                           ;	.line	423; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	unsigned char ischar = 0;
00235a   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           ; #	MOVF	r0x03, W
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00294_DS_
                                           ; #	GOTO	_00327_DS_
                                           ; #	MOVFF	r0x00, FSR0L
                                           ;	.line	426; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!i) return;
00235c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ;	.line	427; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(*buf == 'C') {
00235e   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
002360   d04f     bra     0x2400           	BRA	_00327_DS_
002362   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002364   ffe9
002366   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
002368   fff3
00236a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00236c   ec7d     call    0x3afa, 0        	CALL	__gptrget1
00236e   f01d
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
002370   6e06     movwf   0x6, 0           	MOVWF	r0x06
002372   0a43     xorlw   0x43             	XORLW	0x43
002374   e103     bnz     0x237c           	BNZ	_00296_DS_
                                           ;	.line	428; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	ischar = 1;
002376   0e01     movlw   0x1              	MOVLW	0x01
002378   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           ;	.line	429; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	len |= 128;
00237a   8e03     bsf     0x3, 0x7, 0      	BSF	r0x03, 7
                                           _00296_DS_:
                                           ;	.line	432; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	i--;
00237c   0604     decf    0x4, 0x1, 0      	DECF	r0x04, F
                                           ;	.line	433; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	buf++;
00237e   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002380   e302     bnc     0x2386           	BNC	_00384_DS_
002382   4a01     infsnz  0x1, 0x1, 0      	INFSNZ	r0x01, F
002384   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
                                           _00384_DS_:
                                           ;	.line	434; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
002386   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
002388   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
00238a   9094     bcf     0x94, 0, 0       	BCF	_TRISCbits, 0
                                           ;	.line	435; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
00238c   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           _00303_DS_:
                                           ;	.line	437; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(TXxIF == 0);
00238e   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
002390   d7fe     bra     0x238e           	BRA	_00303_DS_
                                           ;	.line	439; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9D = 1; 	// address byte
002392   80ac     bsf     0xac, 0, 0       	BSF	_TXSTAbits, 0
                                           ;	.line	440; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	chksum += (TXREGx = 0);	// adress is null = broadcast
002394   6aad     clrf    0xad, 0          	CLRF	_TXREG
002396   0000     nop                      	nop	
                                           _00306_DS_:
002398   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
00239a   d7fe     bra     0x2398           	BRA	_00306_DS_
                                           ;	.line	443; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9D = 0;
00239c   90ac     bcf     0xac, 0, 0       	BCF	_TXSTAbits, 0
                                           ;	.line	445; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	chksum += (TXREGx = len);
00239e   c003     movff   0x3, 0xfad       	MOVFF	r0x03, _TXREG
0023a0   ffad
0023a2   0000     nop                      	nop	
                                           _00309_DS_:
0023a4   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
0023a6   d7fe     bra     0x23a4           	BRA	_00309_DS_
                                           ;	.line	448; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) chksum += (TXREGx = 'B');
0023a8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0023aa   e004     bz      0x23b4           	BZ	_00313_DS_
                                           ; #	MOVLW	0x42
                                           ; #	MOVWF	_TXREG
                                           ; #	MOVLW	0x42
0023ac   0e42     movlw   0x42             	MOVLW	0x42
0023ae   6ead     movwf   0xad, 0          	MOVWF	_TXREG
0023b0   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0023b2   d004     bra     0x23bc           	BRA	_00318_DS_
                                           _00313_DS_:
                                           ;	.line	449; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else chksum += (TXREGx = 'b');
0023b4   0e62     movlw   0x62             	MOVLW	0x62
0023b6   6ead     movwf   0xad, 0          	MOVWF	_TXREG
0023b8   0e62     movlw   0x62             	MOVLW	0x62
0023ba   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
                                           _00318_DS_:
                                           ;	.line	451; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(i) {
0023bc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0023be   e015     bz      0x23ea           	BZ	_00320_DS_
0023c0   0000     nop                      	nop	
                                           _00315_DS_:
0023c2   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
0023c4   d7fe     bra     0x23c2           	BRA	_00315_DS_
                                           ;	.line	453; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	chksum += (TXREGx = *buf);
0023c6   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0023c8   ffe9
0023ca   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0023cc   fff3
0023ce   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0023d0   ec7d     call    0x3afa, 0        	CALL	__gptrget1
0023d2   f01d
0023d4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0023d6   c005     movff   0x5, 0xfad       	MOVFF	r0x05, _TXREG
0023d8   ffad
0023da   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0023dc   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
                                           ;	.line	454; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	i--;
0023de   0604     decf    0x4, 0x1, 0      	DECF	r0x04, F
                                           ;	.line	455; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	buf++;
0023e0   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0023e2   e302     bnc     0x23e8           	BNC	_00385_DS_
0023e4   4a01     infsnz  0x1, 0x1, 0      	INFSNZ	r0x01, F
0023e6   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
                                           _00385_DS_:
0023e8   d7e9     bra     0x23bc           	BRA	_00318_DS_
                                           _00320_DS_:
0023ea   0000     nop                      	nop	
                                           _00321_DS_:
0023ec   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
0023ee   d7fe     bra     0x23ec           	BRA	_00321_DS_
                                           ;	.line	459; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = -chksum;
0023f0   1c03     comf    0x3, 0, 0        	COMF	r0x03, W
0023f2   6ead     movwf   0xad, 0          	MOVWF	_TXREG
0023f4   2aad     incf    0xad, 0x1, 0     	INCF	_TXREG, F
0023f6   0000     nop                      	nop	
                                           _00324_DS_:
0023f8   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
0023fa   d7fe     bra     0x23f8           	BRA	_00324_DS_
                                           ;	.line	462; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0023fc   eccb     call    0x3b96, 0        	CALL	_Serial_Init_Receiver
0023fe   f01d
                                           _00327_DS_:
002400   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002402   f006
002404   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002406   f005
002408   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00240a   f004
00240c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00240e   f003
002410   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002412   f002
002414   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002416   f001
002418   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00241a   f000
00241c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00241e   ffd9
002420   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseDecodeNextTXPacket	code
                                           _fraiseDecodeNextTXPacket:
                                           ;	.line	337; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static void fraiseDecodeNextTXPacket()
002208   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00220a   ffe5
00220c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00220e   ffe5
002210   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002212   ffe5
                                           ; #	MOVFF	r0x03, POSTDEC1
                                           ; #; info ==> [localregs] entry end
                                           
                                           ; #	BTFSC	_TXSTAbits, 1
                                           ; #	GOTO	_00200_DS_
                                           ; #	GOTO	_00238_DS_
                                           ; #	CALL	_fraiseGetTXChar
                                           ;	.line	341; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(TXSTAxbits.TRMT == 0) return; //return if a serial transmission is in progress
002214   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002216   ffe5
                                           ;	.line	343; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	len = fraiseGetTXChar(); //1st byte = len
002218   a2ac     btfss   0xac, 0x1, 0     	BTFSS	_TXSTAbits, 1
00221a   d076     bra     0x2308           	BRA	_00238_DS_
00221c   ecff     call    0x37fe, 0        	CALL	_fraiseGetTXChar
00221e   f01b
002220   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	344; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!len) {
002222   5000     movf    0, 0, 0          	MOVF	r0x00, W
002224   e105     bnz     0x2230           	BNZ	_00202_DS_
002226   010a     movlb   0xa              	BANKSEL	_FrTXout
                                           ;	.line	346; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXin = FrTXout=0;
002228   6b23     clrf    0x23, 0x1        	CLRF	_FrTXout, B
00222a   010a     movlb   0xa              	BANKSEL	_FrTXin
00222c   6b22     clrf    0x22, 0x1        	CLRF	_FrTXin, B
                                           ;	.line	347; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return; //?
00222e   d06c     bra     0x2308           	BRA	_00238_DS_
                                           _00202_DS_:
                                           ;	.line	350; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	txout_end = FrTXout;
002230   ca23     movff   0xa23, 0x1       	MOVFF	_FrTXout, r0x01
002232   f001
                                           ;	.line	351; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	txout_end += len;
002234   5000     movf    0, 0, 0          	MOVF	r0x00, W
002236   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
                                           ;	.line	353; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c=fraiseGetTXChar(); //2nd byte = command (or hi nibble of address)
002238   ecff     call    0x37fe, 0        	CALL	_fraiseGetTXChar
00223a   f01b
00223c   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	354; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	len -= 1;
00223e   0600     decf    0, 0x1, 0        	DECF	r0x00, F
                                           ;	.line	356; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == '#') {						
002240   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002242   0a23     xorlw   0x23             	XORLW	0x23
002244   e11f     bnz     0x2284           	BNZ	_00217_DS_
                                           ;	.line	358; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(len < 1) goto discard;
002246   0e01     movlw   0x1              	MOVLW	0x01
002248   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00224a   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
00224c   d05b     bra     0x2304           	BRA	_00237_DS_
                                           ;	.line	359; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetTXChar(); //what is the command ?
00224e   ecff     call    0x37fe, 0        	CALL	_fraiseGetTXChar
002250   f01b
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
                                           ;	.line	360; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == 'i'){
002252   6e02     movwf   0x2, 0           	MOVWF	r0x02
002254   0a69     xorlw   0x69             	XORLW	0x69
002256   e103     bnz     0x225e           	BNZ	_00214_DS_
                                           ;	.line	362; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseInit();
002258   ec9b     call    0x3536, 0        	CALL	_fraiseInit
00225a   f01a
                                           ;	.line	363; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	goto discard;
00225c   d053     bra     0x2304           	BRA	_00237_DS_
                                           _00214_DS_:
                                           ;	.line	370; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'r'){
00225e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002260   0a72     xorlw   0x72             	XORLW	0x72
002262   e103     bnz     0x226a           	BNZ	_00211_DS_
                                           ;	.line	371; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
002264   eccb     call    0x3b96, 0        	CALL	_Serial_Init_Receiver
002266   f01d
                                           ;	.line	372; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	goto discard;
002268   d04d     bra     0x2304           	BRA	_00237_DS_
                                           _00211_DS_:
                                           ;	.line	374; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 's'){
00226a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00226c   0a73     xorlw   0x73             	XORLW	0x73
00226e   e001     bz      0x2272           	BZ	_00281_DS_
002270   d049     bra     0x2304           	BRA	_00237_DS_
                                           _00281_DS_:
                                           ;	.line	376; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	SerDrv_Off();
002272   8094     bsf     0x94, 0, 0       	BSF	_TRISCbits, 0
                                           ;	.line	377; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1; 
002274   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	378; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCxIE = 1;		
002276   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	379; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
002278   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           	;	VOLATILE READ - BEGIN
00227a   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
                                           	;	VOLATILE READ - END
                                           	;	VOLATILE READ - BEGIN
00227c   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
                                           	;	VOLATILE READ - END
                                           ;	.line	382; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 0;		
00227e   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
                                           ;	.line	383; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 1;		
002280   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	385; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	goto discard;
002282   d040     bra     0x2304           	BRA	_00237_DS_
                                           _00217_DS_:
                                           ;	.line	391; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == 'C') { //"char" packet
002284   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002286   0a43     xorlw   0x43             	XORLW	0x43
002288   e005     bz      0x2294           	BZ	_00222_DS_
                                           ;	.line	396; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == 'B') { //"bytes" packet
00228a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00228c   0a42     xorlw   0x42             	XORLW	0x42
00228e   e001     bz      0x2292           	BZ	_00285_DS_
002290   d039     bra     0x2304           	BRA	_00237_DS_
                                           _00285_DS_:
                                           ;	.line	404; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) len |= 128;
002292   d001     bra     0x2296           	BRA	_00225_DS_
                                           _00222_DS_:
                                           ;	.line	404; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) len |= 128;
002294   8e00     bsf     0, 0x7, 0        	BSF	r0x00, 7
                                           _00225_DS_:
                                           ;	.line	406; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendInit(len);
002296   c000     movff   0, 0xa53         	MOVFF	r0x00, _FrTXchksum
002298   fa53
00229a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00229c   0104     movlb   0x4              	BANKSEL	_FrTXpacket
00229e   6f00     movwf   0, 0x1           	MOVWF	_FrTXpacket, B
0022a0   0e01     movlw   0x1              	MOVLW	0x01
0022a2   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
0022a4   6f54     movwf   0x54, 0x1        	MOVWF	_FrTXpacket_i, B
                                           _00231_DS_:
0022a6   010a     movlb   0xa              	BANKSEL	_FrTXout
                                           ;	.line	408; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(FrTXout != txout_end) {
0022a8   5123     movf    0x23, 0, 0x1     	MOVF	_FrTXout, W, B
0022aa   1801     xorwf   0x1, 0, 0        	XORWF	r0x01, W
0022ac   e014     bz      0x22d6           	BZ	_00234_DS_
                                           ;	.line	409; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetTXChar();
0022ae   ecff     call    0x37fe, 0        	CALL	_fraiseGetTXChar
0022b0   f01b
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
                                           ;	.line	410; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendData(c); 
0022b2   6e02     movwf   0x2, 0           	MOVWF	r0x02
0022b4   010a     movlb   0xa              	BANKSEL	_FrTXchksum
0022b6   2753     addwf   0x53, 0x1, 0x1   	ADDWF	_FrTXchksum, F, B
0022b8   0e00     movlw   0                	MOVLW	LOW(_FrTXpacket)
0022ba   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
0022bc   2554     addwf   0x54, 0, 0x1     	ADDWF	_FrTXpacket_i, W, B
0022be   6e00     movwf   0, 0             	MOVWF	r0x00
0022c0   6a03     clrf    0x3, 0           	CLRF	r0x03
0022c2   0e04     movlw   0x4              	MOVLW	HIGH(_FrTXpacket)
0022c4   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0022c6   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0022c8   ffe9
0022ca   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0022cc   ffea
0022ce   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
0022d0   ffef
                                           ; removed redundant BANKSEL
0022d2   2b54     incf    0x54, 0x1, 0x1   	INCF	_FrTXpacket_i, F, B
0022d4   d7e8     bra     0x22a6           	BRA	_00231_DS_
                                           _00234_DS_:
                                           ;	.line	412; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendClose();	
0022d6   0e00     movlw   0                	MOVLW	LOW(_FrTXpacket)
0022d8   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
0022da   2554     addwf   0x54, 0, 0x1     	ADDWF	_FrTXpacket_i, W, B
0022dc   6e00     movwf   0, 0             	MOVWF	r0x00
0022de   6a02     clrf    0x2, 0           	CLRF	r0x02
0022e0   0e04     movlw   0x4              	MOVLW	HIGH(_FrTXpacket)
0022e2   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0022e4   010a     movlb   0xa              	BANKSEL	_FrTXchksum
0022e6   1d53     comf    0x53, 0, 0x1     	COMF	_FrTXchksum, W, B
0022e8   6e03     movwf   0x3, 0           	MOVWF	r0x03
0022ea   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
0022ec   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0022ee   ffe9
0022f0   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0022f2   ffea
0022f4   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
0022f6   ffef
0022f8   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
0022fa   2b54     incf    0x54, 0x1, 0x1   	INCF	_FrTXpacket_i, F, B
0022fc   ca54     movff   0xa54, 0xa51     	MOVFF	_FrTXpacket_i, _FrTXpacket_len
0022fe   fa51
002300   010a     movlb   0xa              	BANKSEL	_FrTXtries
                                           ;	.line	413; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXtries = 0;
002302   6b4b     clrf    0x4b, 0x1        	CLRF	_FrTXtries, B
                                           _00237_DS_:
                                           ;	.line	416; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXout = txout_end;
002304   c001     movff   0x1, 0xa23       	MOVFF	r0x01, _FrTXout
002306   fa23
                                           _00238_DS_:
                                           ;	.line	417; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
002308   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00230a   f003
00230c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00230e   f002
002310   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002312   f001
002314   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002316   f000
002318   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSend	code
                                           _fraiseSend:
                                           ;	.line	294; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	char fraiseSend(const unsigned char *buf,unsigned char len)
002528   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00252a   ffe5
00252c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00252e   ffd9
002530   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002532   ffe5
002534   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002536   ffe5
002538   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00253a   ffe5
00253c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00253e   ffe5
002540   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002542   ffe5
002544   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002546   ffe5
002548   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
00254a   ffe5
00254c   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00254e   ffe5
002550   0e02     movlw   0x2              	MOVLW	0x02
002552   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002554   f000
002556   0e03     movlw   0x3              	MOVLW	0x03
002558   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00255a   f001
00255c   0e04     movlw   0x4              	MOVLW	0x04
00255e   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002560   f002
002562   0e05     movlw   0x5              	MOVLW	0x05
002564   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
002566   f003
                                           ;	.line	298; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree = FrTXout;
002568   ca23     movff   0xa23, 0xa24     	MOVFF	_FrTXout, _FrTXbufFree
00256a   fa24
00256c   010a     movlb   0xa              	BANKSEL	_FrTXin
                                           ;	.line	299; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= FrTXin;
00256e   5122     movf    0x22, 0, 0x1     	MOVF	_FrTXin, W, B
002570   010a     movlb   0xa              	BANKSEL	_FrTXbufFree
002572   5f24     subwf   0x24, 0x1, 0x1   	SUBWF	_FrTXbufFree, F, B
                                           ;	.line	300; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= 1;
002574   0724     decf    0x24, 0x1, 0x1   	DECF	_FrTXbufFree, F, B
                                           ;	.line	302; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if ((len + 3) > FrTXbufFree) {
002576   c003     movff   0x3, 0x4         	MOVFF	r0x03, r0x04
002578   f004
00257a   6a05     clrf    0x5, 0           	CLRF	r0x05
00257c   0e03     movlw   0x3              	MOVLW	0x03
00257e   2604     addwf   0x4, 0x1, 0      	ADDWF	r0x04, F
002580   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002582   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
002584   ca24     movff   0xa24, 0x6       	MOVFF	_FrTXbufFree, r0x06
002586   f006
002588   6a07     clrf    0x7, 0           	CLRF	r0x07
00258a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00258c   0f80     addlw   0x80             	ADDLW	0x80
00258e   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
002590   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002592   0f80     addlw   0x80             	ADDLW	0x80
002594   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
002596   e102     bnz     0x259c           	BNZ	_00192_DS_
002598   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00259a   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
                                           _00192_DS_:
00259c   e202     bc      0x25a2           	BC	_00171_DS_
                                           ;	.line	304; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return -1;
00259e   68e8     setf    0xe8, 0          	SETF	WREG
0025a0   d02b     bra     0x25f8           	BRA	_00177_DS_
                                           _00171_DS_:
                                           ;	.line	306; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if (len < 2) {
0025a2   0e02     movlw   0x2              	MOVLW	0x02
0025a4   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
0025a6   e202     bc      0x25ac           	BC	_00173_DS_
                                           ;	.line	308; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return 0;
0025a8   6ae8     clrf    0xe8, 0          	CLRF	WREG
0025aa   d026     bra     0x25f8           	BRA	_00177_DS_
                                           _00173_DS_:
                                           ;	.line	310; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	len -= 1; //don't keep '\n' terminator
0025ac   0603     decf    0x3, 0x1, 0      	DECF	r0x03, F
                                           ;	.line	311; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraisePutChar(len); //prefix tx packet buffer by its length
0025ae   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0025b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0025b2   ec85     call    0x330a, 0        	CALL	_fraisePutChar
0025b4   f019
0025b6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	313; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(i < len) { //fill tx packet buffer
0025b8   6a04     clrf    0x4, 0           	CLRF	r0x04
                                           _00174_DS_:
0025ba   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0025bc   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
0025be   e214     bc      0x25e8           	BC	_00176_DS_
                                           ;	.line	314; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = buf[i];
0025c0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0025c2   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0025c4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0025c6   6ae8     clrf    0xe8, 0          	CLRF	WREG
0025c8   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0025ca   6e06     movwf   0x6, 0           	MOVWF	r0x06
0025cc   6ae8     clrf    0xe8, 0          	CLRF	WREG
0025ce   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
0025d0   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0025d2   ffe9
0025d4   c006     movff   0x6, 0xff3       	MOVFF	r0x06, PRODL
0025d6   fff3
0025d8   ec7d     call    0x3afa, 0        	CALL	__gptrget1
0025da   f01d
                                           ;	.line	315; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	i++;
0025dc   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
                                           ;	.line	316; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraisePutChar(c);
0025de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0025e0   ec85     call    0x330a, 0        	CALL	_fraisePutChar
0025e2   f019
0025e4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0025e6   d7e9     bra     0x25ba           	BRA	_00174_DS_
                                           _00176_DS_:
                                           ;	.line	320; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree = FrTXout;
0025e8   ca23     movff   0xa23, 0xa24     	MOVFF	_FrTXout, _FrTXbufFree
0025ea   fa24
0025ec   010a     movlb   0xa              	BANKSEL	_FrTXin
                                           ;	.line	321; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= FrTXin;
0025ee   5122     movf    0x22, 0, 0x1     	MOVF	_FrTXin, W, B
0025f0   010a     movlb   0xa              	BANKSEL	_FrTXbufFree
0025f2   5f24     subwf   0x24, 0x1, 0x1   	SUBWF	_FrTXbufFree, F, B
                                           ;	.line	322; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= 1;
0025f4   0724     decf    0x24, 0x1, 0x1   	DECF	_FrTXbufFree, F, B
                                           ;	.line	323; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return 0;
0025f6   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00177_DS_:
0025f8   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
0025fa   f007
0025fc   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0025fe   f006
002600   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002602   f005
002604   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002606   f004
002608   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00260a   f003
00260c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00260e   f002
002610   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002612   f001
002614   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002616   f000
002618   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00261a   ffd9
00261c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetTXChar	code
                                           _fraiseGetTXChar:
                                           ;	.line	284; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static unsigned char fraiseGetTXChar()
0037fe   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003800   ffe5
003802   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003804   ffe5
003806   010a     movlb   0xa              	BANKSEL	_FrTXin
                                           ;	.line	288; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrTXin == FrTXout) return 0; //underflow check
003808   5122     movf    0x22, 0, 0x1     	MOVF	_FrTXin, W, B
00380a   010a     movlb   0xa              	BANKSEL	_FrTXout
00380c   1923     xorwf   0x23, 0, 0x1     	XORWF	_FrTXout, W, B
00380e   e102     bnz     0x3814           	BNZ	_00158_DS_
003810   6ae8     clrf    0xe8, 0          	CLRF	WREG
003812   d00f     bra     0x3832           	BRA	_00159_DS_
                                           _00158_DS_:
                                           ;	.line	289; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = FrTXbuf[FrTXout];
003814   0e00     movlw   0                	MOVLW	LOW(_FrTXbuf)
003816   010a     movlb   0xa              	BANKSEL	_FrTXout
003818   2523     addwf   0x23, 0, 0x1     	ADDWF	_FrTXout, W, B
00381a   6e00     movwf   0, 0             	MOVWF	r0x00
00381c   6a01     clrf    0x1, 0           	CLRF	r0x01
00381e   0e07     movlw   0x7              	MOVLW	HIGH(_FrTXbuf)
003820   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003822   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003824   ffe9
003826   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
003828   ffea
00382a   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
00382c   f000
                                           ; removed redundant BANKSEL
                                           ;	.line	290; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXout++;
00382e   2b23     incf    0x23, 0x1, 0x1   	INCF	_FrTXout, F, B
                                           ;	.line	291; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return c;
003830   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           _00159_DS_:
003832   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003834   f001
003836   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003838   f000
00383a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraisePutChar	code
                                           _fraisePutChar:
                                           ;	.line	274; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static void fraisePutChar(unsigned char c)
00330a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00330c   ffe5
00330e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003310   ffd9
003312   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003314   ffe5
003316   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003318   ffe5
00331a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00331c   ffe5
00331e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003320   ffe5
003322   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003324   ffe5
003326   0e02     movlw   0x2              	MOVLW	0x02
003328   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00332a   f000
                                           ;	.line	276; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if((FrTXin + 1) == FrTXout) {
00332c   ca22     movff   0xa22, 0x1       	MOVFF	_FrTXin, r0x01
00332e   f001
003330   6a02     clrf    0x2, 0           	CLRF	r0x02
003332   4a01     infsnz  0x1, 0x1, 0      	INFSNZ	r0x01, F
003334   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
003336   ca23     movff   0xa23, 0x3       	MOVFF	_FrTXout, r0x03
003338   f003
00333a   6a04     clrf    0x4, 0           	CLRF	r0x04
00333c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00333e   1803     xorwf   0x3, 0, 0        	XORWF	r0x03, W
003340   e103     bnz     0x3348           	BNZ	_00151_DS_
003342   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003344   1804     xorwf   0x4, 0, 0        	XORWF	r0x04, W
003346   e001     bz      0x334a           	BZ	_00152_DS_
                                           _00151_DS_:
003348   d001     bra     0x334c           	BRA	_00145_DS_
                                           _00152_DS_:
                                           ;	.line	278; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return; //overflow check done by fraiseSend, but...
00334a   d00e     bra     0x3368           	BRA	_00146_DS_
                                           _00145_DS_:
                                           ;	.line	280; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbuf[FrTXin] = c;
00334c   0e00     movlw   0                	MOVLW	LOW(_FrTXbuf)
00334e   010a     movlb   0xa              	BANKSEL	_FrTXin
003350   2522     addwf   0x22, 0, 0x1     	ADDWF	_FrTXin, W, B
003352   6e01     movwf   0x1, 0           	MOVWF	r0x01
003354   6a02     clrf    0x2, 0           	CLRF	r0x02
003356   0e07     movlw   0x7              	MOVLW	HIGH(_FrTXbuf)
003358   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00335a   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00335c   ffe9
00335e   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003360   ffea
003362   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
003364   ffef
                                           ; removed redundant BANKSEL
                                           ;	.line	281; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXin++;
003366   2b22     incf    0x22, 0x1, 0x1   	INCF	_FrTXin, F, B
                                           _00146_DS_:
003368   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00336a   f004
00336c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00336e   f003
003370   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003372   f002
003374   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003376   f001
003378   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00337a   f000
00337c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00337e   ffd9
003380   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetInterruptEnable	code
                                           _fraiseGetInterruptEnable:
003cb6   010a     movlb   0xa              	BANKSEL	_FrInterruptEnabled
                                           ;	.line	268; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return FrInterruptEnabled;
003cb8   5125     movf    0x25, 0, 0x1     	MOVF	_FrInterruptEnabled, W, B
003cba   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSetInterruptEnable	code
                                           _fraiseSetInterruptEnable:
                                           ;	.line	256; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSetInterruptEnable(char enable)
003a04   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003a06   ffe5
003a08   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003a0a   ffd9
003a0c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003a0e   ffe5
003a10   0e02     movlw   0x2              	MOVLW	0x02
003a12   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003a14   f000
                                           ;	.line	258; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrInterruptEnabled = enable;
003a16   c000     movff   0, 0xa25         	MOVFF	r0x00, _FrInterruptEnabled
003a18   fa25
                                           ;	.line	259; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(enable == 0) {
003a1a   5000     movf    0, 0, 0          	MOVF	r0x00, W
003a1c   e104     bnz     0x3a26           	BNZ	_00134_DS_
                                           ;	.line	260; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
003a1e   eccb     call    0x3b96, 0        	CALL	_Serial_Init_Receiver
003a20   f01d
                                           ;	.line	261; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCxIE = 0;
003a22   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
                                           ;	.line	262; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
003a24   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           _00134_DS_:
003a26   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003a28   f000
003a2a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003a2c   ffd9
003a2e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseInit	code
                                           _fraiseInit:
003536   010a     movlb   0xa              	BANKSEL	_FrTXin
                                           ;	.line	214; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXin = 0;
003538   6b22     clrf    0x22, 0x1        	CLRF	_FrTXin, B
00353a   010a     movlb   0xa              	BANKSEL	_FrTXout
                                           ;	.line	215; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXout = 0;
00353c   6b23     clrf    0x23, 0x1        	CLRF	_FrTXout, B
00353e   010a     movlb   0xa              	BANKSEL	_FrTXbufFree
                                           ;	.line	216; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree = 255;
003540   6924     setf    0x24, 0x1        	SETF	_FrTXbufFree, B
                                           ;	.line	219; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	SerDrv_Off();
003542   8094     bsf     0x94, 0, 0       	BSF	_TRISCbits, 0
                                           ;	.line	220; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	InitSerDrv();
003544   908b     bcf     0x8b, 0, 0       	BCF	_LATCbits, 0
003546   8094     bsf     0x94, 0, 0       	BSF	_TRISCbits, 0
                                           ;	.line	224; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	SPBRGHx = BRGHL/256;
003548   6ab0     clrf    0xb0, 0          	CLRF	_SPBRGH
                                           ;	.line	225; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	SPBRGx = BRGHL%256;
00354a   0e3f     movlw   0x3f             	MOVLW	0x3f
00354c   6eaf     movwf   0xaf, 0          	MOVWF	_SPBRG
                                           ;	.line	227; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	BAUDCONxbits.BRG16 = 1;
00354e   86b8     bsf     0xb8, 0x3, 0     	BSF	_BAUDCONbits, 3
                                           ;	.line	229; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TXEN = 1;
003550   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
                                           ;	.line	230; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.BRGH = 1;
003552   84ac     bsf     0xac, 0x2, 0     	BSF	_TXSTAbits, 2
                                           ;	.line	231; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9 = 1;
003554   8cac     bsf     0xac, 0x6, 0     	BSF	_TXSTAbits, 6
                                           ;	.line	232; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9D = 0;
003556   90ac     bcf     0xac, 0, 0       	BCF	_TXSTAbits, 0
                                           ;	.line	234; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.RX9 = 1;
003558   8cab     bsf     0xab, 0x6, 0     	BSF	_RCSTAbits, 6
                                           ;	.line	235; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.SPEN = 1;
00355a   8eab     bsf     0xab, 0x7, 0     	BSF	_RCSTAbits, 7
00355c   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	237; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.VAL = 0;
00355e   6b52     clrf    0x52, 0x1        	CLRF	_FraiseStatus, B
003560   010a     movlb   0xa              	BANKSEL	_FraiseState
                                           ;	.line	238; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseState = fIDLE;
003562   6b4c     clrf    0x4c, 0x1        	CLRF	_FraiseState, B
003564   010a     movlb   0xa              	BANKSEL	_FrRXin
                                           ;	.line	239; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin = 0;
003566   6b4f     clrf    0x4f, 0x1        	CLRF	_FrRXin, B
003568   010a     movlb   0xa              	BANKSEL	_FrRXout
                                           ;	.line	240; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout = 0;
00356a   6b50     clrf    0x50, 0x1        	CLRF	_FrRXout, B
00356c   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
                                           ;	.line	241; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXpacket_len = 0;
00356e   6b51     clrf    0x51, 0x1        	CLRF	_FrTXpacket_len, B
                                           ;	.line	243; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrID = eeReadByte(EE_ID);
003570   0e00     movlw   0                	MOVLW	0x00
003572   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003574   ecbd     call    0x3b7a, 0        	CALL	_eeReadByte
003576   f01d
003578   010a     movlb   0xa              	BANKSEL	_FrID
00357a   6f26     movwf   0x26, 0x1        	MOVWF	_FrID, B
00357c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	246; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXxIP = 0;
00357e   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	247; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCxIP = 0;
003580   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	248; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrInterruptEnabled = 1;
003582   0e01     movlw   0x1              	MOVLW	0x01
003584   010a     movlb   0xa              	BANKSEL	_FrInterruptEnabled
003586   6f25     movwf   0x25, 0x1        	MOVWF	_FrInterruptEnabled, B
003588   0104     movlb   0x4              	BANKSEL	_stdout
                                           ;	.line	251; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	stdout = STREAM_USER;
00358a   6b7d     clrf    0x7d, 0x1        	CLRF	_stdout, B
                                           ; removed redundant BANKSEL
00358c   6b7e     clrf    0x7e, 0x1        	CLRF	(_stdout + 1), B
00358e   0e2f     movlw   0x2f             	MOVLW	0x2f
                                           ; removed redundant BANKSEL
003590   6f7f     movwf   0x7f, 0x1        	MOVWF	(_stdout + 2), B
                                           ;	.line	253; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
003592   eccb     call    0x3b96, 0        	CALL	_Serial_Init_Receiver
003594   f01d
003596   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSetID	code
                                           _fraiseSetID:
                                           ;	.line	207; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSetID(unsigned char id)
00391c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00391e   ffe5
003920   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003922   ffd9
003924   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003926   ffe5
003928   0e02     movlw   0x2              	MOVLW	0x02
00392a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00392c   f000
                                           ;	.line	209; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	eeWriteByte(EE_ID,FrID = id);
00392e   c000     movff   0, 0xa26         	MOVFF	r0x00, _FrID
003930   fa26
003932   5000     movf    0, 0, 0          	MOVF	r0x00, W
003934   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003936   0e00     movlw   0                	MOVLW	0x00
003938   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00393a   ecbb     call    0x3776, 0        	CALL	_eeWriteByte
00393c   f01b
00393e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003940   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003942   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003944   f000
003946   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003948   ffd9
00394a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__Serial_Init_Receiver	code
                                           _Serial_Init_Receiver:
                                           _00105_DS_:
                                           ;	.line	110; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(TXSTAxbits.TRMT == 0);
003b96   a2ac     btfss   0xac, 0x1, 0     	BTFSS	_TXSTAbits, 1
003b98   d7fe     bra     0x3b96           	BRA	_00105_DS_
                                           ;	.line	111; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	SerDrv_Off();
003b9a   8094     bsf     0x94, 0, 0       	BSF	_TRISCbits, 0
                                           ;	.line	112; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	WREG=RCREGx;
003b9c   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
003b9e   0000     nop                      	nop	
                                           ;	.line	114; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	WREG=RCREGx;
003ba0   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
                                           ;	.line	115; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 0;
003ba2   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
                                           ;	.line	116; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 1;
003ba4   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	117; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1;
003ba6   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	118; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCxIE = 1;
003ba8   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	119; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
003baa   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
003bac   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
003bae   6425     cpfsgt  0x25, 0          	DB	0x25, 0x64, 0x20, 0x00
003bb0   0020     dw      0x20             
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 2784 (0x0ae0) bytes ( 2.12%)
                                           ;           	 1392 (0x0570) words
                                           ; udata size:	  471 (0x01d7) bytes (12.80%)
                                           ; access size:	    8 (0x0008) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_analogInit
                                           	global	_analogInitTouch
                                           	global	_analogSelectAdc
                                           	global	_analogSelectAdcTouch
                                           	global	_analogDeselect
                                           	global	_analogService
                                           	global	_analogSend
                                           	global	_analogSetMode
                                           	global	_analogSet
                                           	global	_analogGet
                                           	global	_analogGetDistance
                                           	global	_analogScaling
                                           	global	_analogDeclareEE
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_printf
                                           	extern	_fraiseSend
                                           	extern	_EEdeclareInt
                                           	extern	__mullong
                                           	extern	__divulong
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           INTCON	equ	0xff2
                                           WREG	equ	0xfe8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _Scaling	db	0x00
                                           _Threshold	db	0x02, 0x00
                                           _Mode	db	0x02
                                           _analogService_chan_1_97	db	0x00
                                           _analogService_conv_1_97	db	0x00
                                           _analogSend_chan_1_104	db	0x00
                                           _analogSend_buf_1_104	db	0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           
                                           udata_analog_0	udata
                                           _Selected	res	2
                                           
                                           udata_analog_1	udata
                                           _Value	res	32
                                           
                                           udata_analog_2	udata
                                           _inValue	res	32
                                           
                                           udata_analog_3	udata
                                           _oldValue	res	32
                                           
                                           udata_analog_4	udata
                                           _Min	res	32
                                           
                                           udata_analog_5	udata
                                           _Max	res	32
                                           
                                           udata_analog_6	udata
                                           _Pins	res	16
                                           
                                           udata_analog_7	udata
                                           _HWChan	res	16
                                           
                                           udata_analog_8	udata
                                           _Dist	res	32
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_analog__analogDeclareEE	code
                                           _analogDeclareEE:
                                           ;	.line	276; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(0);
0010fc   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0010fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001100   0e04     movlw   0x4              	MOVLW	HIGH(_Max)
001102   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001104   0eb3     movlw   0xb3             	MOVLW	LOW(_Max)
001106   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001108   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
00110a   f016
00110c   0e03     movlw   0x3              	MOVLW	0x03
00110e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001110   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001112   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001114   0e04     movlw   0x4              	MOVLW	HIGH(_Min)
001116   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001118   0e93     movlw   0x93             	MOVLW	LOW(_Min)
00111a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00111c   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
00111e   f016
001120   0e03     movlw   0x3              	MOVLW	0x03
001122   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	277; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(1);
001124   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001126   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001128   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 2)
00112a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00112c   0eb5     movlw   0xb5             	MOVLW	LOW(_Max + 2)
00112e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001130   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
001132   f016
001134   0e03     movlw   0x3              	MOVLW	0x03
001136   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001138   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00113a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00113c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 2)
00113e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001140   0e95     movlw   0x95             	MOVLW	LOW(_Min + 2)
001142   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001144   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
001146   f016
001148   0e03     movlw   0x3              	MOVLW	0x03
00114a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	278; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(2);
00114c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00114e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001150   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 4)
001152   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001154   0eb7     movlw   0xb7             	MOVLW	LOW(_Max + 4)
001156   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001158   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
00115a   f016
00115c   0e03     movlw   0x3              	MOVLW	0x03
00115e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001160   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001162   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001164   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 4)
001166   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001168   0e97     movlw   0x97             	MOVLW	LOW(_Min + 4)
00116a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00116c   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
00116e   f016
001170   0e03     movlw   0x3              	MOVLW	0x03
001172   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	279; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(3);
001174   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001176   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001178   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 6)
00117a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00117c   0eb9     movlw   0xb9             	MOVLW	LOW(_Max + 6)
00117e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001180   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
001182   f016
001184   0e03     movlw   0x3              	MOVLW	0x03
001186   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001188   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00118a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00118c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 6)
00118e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001190   0e99     movlw   0x99             	MOVLW	LOW(_Min + 6)
001192   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001194   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
001196   f016
001198   0e03     movlw   0x3              	MOVLW	0x03
00119a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	282; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(4);
00119c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00119e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011a0   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 8)
0011a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011a4   0ebb     movlw   0xbb             	MOVLW	LOW(_Max + 8)
0011a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011a8   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
0011aa   f016
0011ac   0e03     movlw   0x3              	MOVLW	0x03
0011ae   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0011b0   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0011b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011b4   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 8)
0011b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011b8   0e9b     movlw   0x9b             	MOVLW	LOW(_Min + 8)
0011ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011bc   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
0011be   f016
0011c0   0e03     movlw   0x3              	MOVLW	0x03
0011c2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	283; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(5);
0011c4   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0011c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011c8   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 10)
0011ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011cc   0ebd     movlw   0xbd             	MOVLW	LOW(_Max + 10)
0011ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011d0   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
0011d2   f016
0011d4   0e03     movlw   0x3              	MOVLW	0x03
0011d6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0011d8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0011da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011dc   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 10)
0011de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011e0   0e9d     movlw   0x9d             	MOVLW	LOW(_Min + 10)
0011e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011e4   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
0011e6   f016
0011e8   0e03     movlw   0x3              	MOVLW	0x03
0011ea   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	284; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(6);
0011ec   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0011ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011f0   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 12)
0011f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011f4   0ebf     movlw   0xbf             	MOVLW	LOW(_Max + 12)
0011f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011f8   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
0011fa   f016
0011fc   0e03     movlw   0x3              	MOVLW	0x03
0011fe   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001200   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001202   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001204   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 12)
001206   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001208   0e9f     movlw   0x9f             	MOVLW	LOW(_Min + 12)
00120a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00120c   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
00120e   f016
001210   0e03     movlw   0x3              	MOVLW	0x03
001212   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	285; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(7);
001214   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001216   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001218   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 14)
00121a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00121c   0ec1     movlw   0xc1             	MOVLW	LOW(_Max + 14)
00121e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001220   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
001222   f016
001224   0e03     movlw   0x3              	MOVLW	0x03
001226   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001228   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00122a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00122c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 14)
00122e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001230   0ea1     movlw   0xa1             	MOVLW	LOW(_Min + 14)
001232   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001234   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
001236   f016
001238   0e03     movlw   0x3              	MOVLW	0x03
00123a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	288; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(8);
00123c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00123e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001240   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 16)
001242   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001244   0ec3     movlw   0xc3             	MOVLW	LOW(_Max + 16)
001246   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001248   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
00124a   f016
00124c   0e03     movlw   0x3              	MOVLW	0x03
00124e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001250   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001252   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001254   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 16)
001256   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001258   0ea3     movlw   0xa3             	MOVLW	LOW(_Min + 16)
00125a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00125c   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
00125e   f016
001260   0e03     movlw   0x3              	MOVLW	0x03
001262   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	289; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(9);
001264   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001266   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001268   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 18)
00126a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00126c   0ec5     movlw   0xc5             	MOVLW	LOW(_Max + 18)
00126e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001270   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
001272   f016
001274   0e03     movlw   0x3              	MOVLW	0x03
001276   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001278   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00127a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00127c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 18)
00127e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001280   0ea5     movlw   0xa5             	MOVLW	LOW(_Min + 18)
001282   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001284   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
001286   f016
001288   0e03     movlw   0x3              	MOVLW	0x03
00128a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	290; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(10);
00128c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00128e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001290   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 20)
001292   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001294   0ec7     movlw   0xc7             	MOVLW	LOW(_Max + 20)
001296   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001298   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
00129a   f016
00129c   0e03     movlw   0x3              	MOVLW	0x03
00129e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0012a0   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0012a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012a4   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 20)
0012a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012a8   0ea7     movlw   0xa7             	MOVLW	LOW(_Min + 20)
0012aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012ac   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
0012ae   f016
0012b0   0e03     movlw   0x3              	MOVLW	0x03
0012b2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	291; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(11);
0012b4   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0012b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012b8   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 22)
0012ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012bc   0ec9     movlw   0xc9             	MOVLW	LOW(_Max + 22)
0012be   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012c0   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
0012c2   f016
0012c4   0e03     movlw   0x3              	MOVLW	0x03
0012c6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0012c8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0012ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012cc   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 22)
0012ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012d0   0ea9     movlw   0xa9             	MOVLW	LOW(_Min + 22)
0012d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012d4   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
0012d6   f016
0012d8   0e03     movlw   0x3              	MOVLW	0x03
0012da   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	294; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(12);
0012dc   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0012de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012e0   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 24)
0012e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012e4   0ecb     movlw   0xcb             	MOVLW	LOW(_Max + 24)
0012e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012e8   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
0012ea   f016
0012ec   0e03     movlw   0x3              	MOVLW	0x03
0012ee   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0012f0   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0012f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012f4   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 24)
0012f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012f8   0eab     movlw   0xab             	MOVLW	LOW(_Min + 24)
0012fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012fc   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
0012fe   f016
001300   0e03     movlw   0x3              	MOVLW	0x03
001302   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	295; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(13);
001304   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001306   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001308   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 26)
00130a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00130c   0ecd     movlw   0xcd             	MOVLW	LOW(_Max + 26)
00130e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001310   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
001312   f016
001314   0e03     movlw   0x3              	MOVLW	0x03
001316   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001318   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00131a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00131c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 26)
00131e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001320   0ead     movlw   0xad             	MOVLW	LOW(_Min + 26)
001322   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001324   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
001326   f016
001328   0e03     movlw   0x3              	MOVLW	0x03
00132a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	296; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(14);
00132c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00132e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001330   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 28)
001332   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001334   0ecf     movlw   0xcf             	MOVLW	LOW(_Max + 28)
001336   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001338   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
00133a   f016
00133c   0e03     movlw   0x3              	MOVLW	0x03
00133e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001340   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001342   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001344   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 28)
001346   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001348   0eaf     movlw   0xaf             	MOVLW	LOW(_Min + 28)
00134a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00134c   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
00134e   f016
001350   0e03     movlw   0x3              	MOVLW	0x03
001352   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	297; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(15);
001354   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001356   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001358   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 30)
00135a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00135c   0ed1     movlw   0xd1             	MOVLW	LOW(_Max + 30)
00135e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001360   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
001362   f016
001364   0e03     movlw   0x3              	MOVLW	0x03
001366   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001368   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00136a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00136c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 30)
00136e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001370   0eb1     movlw   0xb1             	MOVLW	LOW(_Min + 30)
001372   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001374   ec9a     call    0x2d34, 0        	CALL	_EEdeclareInt
001376   f016
001378   0e03     movlw   0x3              	MOVLW	0x03
00137a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00137c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogScaling	code
                                           _analogScaling:
                                           ;	.line	255; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogScaling(unsigned char scaling) // when scaling, min and max are updated each sample
002f00   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002f02   ffe5
002f04   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002f06   ffd9
002f08   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002f0a   ffe5
002f0c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002f0e   ffe5
002f10   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002f12   ffe5
002f14   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002f16   ffe5
002f18   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002f1a   ffe5
002f1c   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002f1e   ffe5
002f20   0e02     movlw   0x2              	MOVLW	0x02
002f22   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002f24   f000
                                           ;	.line	259; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(scaling==1) {
002f26   5000     movf    0, 0, 0          	MOVF	r0x00, W
002f28   0a01     xorlw   0x1              	XORLW	0x01
002f2a   e122     bnz     0x2f70           	BNZ	_00415_DS_
                                           ;	.line	260; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<ANALOG_MAX_CHANNELS;i++) {
002f2c   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ; ;multiply lit val:0x02 by variable r0x01 and store in r0x02
                                           _00416_DS_:
                                           ;	.line	261; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Min[i]=0x7FFF;
002f2e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002f30   0d02     mullw   0x2              	MULLW	0x02
002f32   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
002f34   6e03     movwf   0x3, 0           	MOVWF	r0x03
002f36   cff3     movff   0xff3, 0x2       	MOVFF	PRODL, r0x02
002f38   f002
002f3a   0e93     movlw   0x93             	MOVLW	LOW(_Min)
002f3c   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
002f3e   6e04     movwf   0x4, 0           	MOVWF	r0x04
002f40   0e04     movlw   0x4              	MOVLW	HIGH(_Min)
002f42   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
002f44   6e05     movwf   0x5, 0           	MOVWF	r0x05
002f46   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002f48   ffe9
002f4a   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002f4c   ffea
002f4e   68ee     setf    0xee, 0          	SETF	POSTINC0
002f50   0e7f     movlw   0x7f             	MOVLW	0x7f
002f52   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           ;	.line	262; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Max[i]=0;
002f54   0eb3     movlw   0xb3             	MOVLW	LOW(_Max)
002f56   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
002f58   0e04     movlw   0x4              	MOVLW	HIGH(_Max)
002f5a   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
002f5c   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
002f5e   ffe9
002f60   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
002f62   ffea
002f64   6aee     clrf    0xee, 0          	CLRF	POSTINC0
002f66   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	260; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<ANALOG_MAX_CHANNELS;i++) {
002f68   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
002f6a   0e10     movlw   0x10             	MOVLW	0x10
002f6c   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
002f6e   e3df     bnc     0x2f2e           	BNC	_00416_DS_
                                           _00415_DS_:
                                           ;	.line	266; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Scaling=scaling;
002f70   c000     movff   0, 0xa28         	MOVFF	r0x00, _Scaling
002f72   fa28
002f74   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002f76   f005
002f78   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002f7a   f004
002f7c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002f7e   f003
002f80   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002f82   f002
002f84   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002f86   f001
002f88   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002f8a   f000
002f8c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002f8e   ffd9
002f90   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogGetDistance	code
                                           _analogGetDistance:
                                           ;	.line	250; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	int analogGetDistance(unsigned char chan)
00368e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003690   ffe5
003692   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003694   ffd9
003696   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003698   ffe5
00369a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00369c   ffe5
00369e   0e02     movlw   0x2              	MOVLW	0x02
0036a0   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0036a2   f000
                                           ; ;multiply lit val:0x02 by variable r0x00 and store in r0x00
                                           ;	.line	252; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	return Dist[chan];
0036a4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0036a6   0d02     mullw   0x2              	MULLW	0x02
0036a8   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
0036aa   6e01     movwf   0x1, 0           	MOVWF	r0x01
0036ac   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
0036ae   f000
0036b0   0ed3     movlw   0xd3             	MOVLW	LOW(_Dist)
0036b2   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0036b4   0e04     movlw   0x4              	MOVLW	HIGH(_Dist)
0036b6   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0036b8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0036ba   ffe9
0036bc   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0036be   ffea
0036c0   cfee     movff   0xfee, 0         	MOVFF	POSTINC0, r0x00
0036c2   f000
0036c4   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
0036c6   f001
0036c8   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0036ca   fff3
0036cc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0036ce   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0036d0   f001
0036d2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0036d4   f000
0036d6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0036d8   ffd9
0036da   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogGet	code
                                           _analogGet:
                                           ;	.line	245; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	int analogGet(unsigned char chan)
0036dc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0036de   ffe5
0036e0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0036e2   ffd9
0036e4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0036e6   ffe5
0036e8   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0036ea   ffe5
0036ec   0e02     movlw   0x2              	MOVLW	0x02
0036ee   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0036f0   f000
                                           ; ;multiply lit val:0x02 by variable r0x00 and store in r0x00
                                           ;	.line	247; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	return Value[chan];
0036f2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0036f4   0d02     mullw   0x2              	MULLW	0x02
0036f6   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
0036f8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0036fa   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
0036fc   f000
0036fe   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
003700   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003702   0e00     movlw   0                	MOVLW	HIGH(_Value)
003704   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003706   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003708   ffe9
00370a   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00370c   ffea
00370e   cfee     movff   0xfee, 0         	MOVFF	POSTINC0, r0x00
003710   f000
003712   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
003714   f001
003716   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003718   fff3
00371a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00371c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00371e   f001
003720   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003722   f000
003724   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003726   ffd9
003728   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogSet	code
                                           _analogSet:
                                           ;	.line	233; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogSet(unsigned char chan, int val)
00261e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002620   ffe5
002622   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002624   ffd9
002626   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002628   ffe5
00262a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00262c   ffe5
00262e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002630   ffe5
002632   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002634   ffe5
002636   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002638   ffe5
00263a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00263c   ffe5
00263e   0e02     movlw   0x2              	MOVLW	0x02
002640   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002642   f000
002644   0e03     movlw   0x3              	MOVLW	0x03
002646   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002648   f001
00264a   0e04     movlw   0x4              	MOVLW	0x04
00264c   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
00264e   f002
                                           ; ;multiply lit val:0x02 by variable r0x00 and store in r0x00
                                           ;	.line	237; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	inValue[chan] = val;
002650   5000     movf    0, 0, 0          	MOVF	r0x00, W
002652   0d02     mullw   0x2              	MULLW	0x02
002654   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
002656   6e03     movwf   0x3, 0           	MOVWF	r0x03
002658   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
00265a   f000
00265c   0e39     movlw   0x39             	MOVLW	LOW(_inValue)
00265e   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002660   6e04     movwf   0x4, 0           	MOVWF	r0x04
002662   0e04     movlw   0x4              	MOVLW	HIGH(_inValue)
002664   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
002666   6e05     movwf   0x5, 0           	MOVWF	r0x05
002668   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
00266a   ffe9
00266c   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
00266e   ffea
002670   c001     movff   0x1, 0xfee       	MOVFF	r0x01, POSTINC0
002672   ffee
002674   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
002676   ffef
                                           ;	.line	238; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	d = oldValue[chan] - val;
002678   0e59     movlw   0x59             	MOVLW	LOW(_oldValue)
00267a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00267c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00267e   0e04     movlw   0x4              	MOVLW	HIGH(_oldValue)
002680   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
002682   6e05     movwf   0x5, 0           	MOVWF	r0x05
002684   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002686   ffe9
002688   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
00268a   ffea
00268c   cfee     movff   0xfee, 0x4       	MOVFF	POSTINC0, r0x04
00268e   f004
002690   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
002692   f005
002694   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002696   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
002698   6e01     movwf   0x1, 0           	MOVWF	r0x01
00269a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00269c   5805     subwfb  0x5, 0, 0        	SUBWFB	r0x05, W
00269e   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	239; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Dist[chan] = d;
0026a0   0ed3     movlw   0xd3             	MOVLW	LOW(_Dist)
0026a2   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0026a4   0e04     movlw   0x4              	MOVLW	HIGH(_Dist)
0026a6   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0026a8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0026aa   ffe9
0026ac   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0026ae   ffea
0026b0   c001     movff   0x1, 0xfee       	MOVFF	r0x01, POSTINC0
0026b2   ffee
0026b4   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
0026b6   ffef
                                           ;	.line	240; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(d < 0) d = -d;
0026b8   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0026ba   ae02     btfss   0x2, 0x7, 0      	BTFSS	r0x02, 7
0026bc   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0026be   e304     bnc     0x26c8           	BNC	_00381_DS_
0026c0   1e02     comf    0x2, 0x1, 0      	COMF	r0x02, F
0026c2   6c01     negf    0x1, 0           	NEGF	r0x01
0026c4   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
0026c6   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
                                           _00381_DS_:
                                           ;	.line	241; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(d < 3) d = 0;
0026c8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0026ca   0f80     addlw   0x80             	ADDLW	0x80
0026cc   0f80     addlw   0x80             	ADDLW	0x80
0026ce   e102     bnz     0x26d4           	BNZ	_00398_DS_
0026d0   0e03     movlw   0x3              	MOVLW	0x03
0026d2   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _00398_DS_:
0026d4   e202     bc      0x26da           	BC	_00383_DS_
0026d6   6a01     clrf    0x1, 0           	CLRF	r0x01
0026d8   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           _00383_DS_:
                                           ;	.line	242; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(d == 0) Dist[chan] = 0;
0026da   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0026dc   1002     iorwf   0x2, 0, 0        	IORWF	r0x02, W
0026de   e107     bnz     0x26ee           	BNZ	_00386_DS_
0026e0   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0026e2   ffe9
0026e4   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0026e6   ffea
0026e8   0e00     movlw   0                	MOVLW	0x00
0026ea   6aee     clrf    0xee, 0          	CLRF	POSTINC0
0026ec   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           _00386_DS_:
0026ee   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0026f0   f005
0026f2   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0026f4   f004
0026f6   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0026f8   f003
0026fa   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0026fc   f002
0026fe   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002700   f001
002702   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002704   f000
002706   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002708   ffd9
00270a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogSetMode	code
                                           _analogSetMode:
                                           ;	.line	228; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogSetMode(unsigned char mode) // scale : bit0 = scale_on ; bit1 = num_on(=text_off) ; bit2 = cross_inval
003c40   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003c42   ffe5
003c44   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003c46   ffd9
003c48   0e02     movlw   0x2              	MOVLW	0x02
003c4a   cfdb     movff   0xfdb, 0xa2b     	MOVFF	PLUSW2, _Mode
003c4c   fa2b
                                           ;	.line	230; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Mode = mode;
003c4e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003c50   ffd9
003c52   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogSend	code
                                           _analogSend:
                                           ;	.line	165; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	char analogSend()
00081c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00081e   ffe5
000820   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
000822   ffe5
000824   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
000826   ffe5
000828   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00082a   ffe5
00082c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00082e   ffe5
000830   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
000832   ffe5
000834   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
000836   ffe5
000838   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00083a   ffe5
00083c   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
00083e   ffe5
000840   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
000842   ffe5
000844   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
000846   ffe5
000848   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
00084a   ffe5
00084c   c00c     movff   0xc, 0xfe5       	MOVFF	r0x0c, POSTDEC1
00084e   ffe5
                                           ;	.line	168; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	unsigned char loop = 0, count = 0, len = 0;
000850   6a00     clrf    0, 0             	CLRF	r0x00
                                           ;	.line	172; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	while((count < 4) && (loop++ < ANALOG_MAX_CHANNELS)){
000852   6a01     clrf    0x1, 0           	CLRF	r0x01
000854   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           _00279_DS_:
000856   0e04     movlw   0x4              	MOVLW	0x04
000858   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
00085a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00085c   d1e8     bra     0xc2e            	BRA	_00307_DS_
00085e   c001     movff   0x1, 0x3         	MOVFF	r0x01, r0x03
000860   f003
000862   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
000864   0e10     movlw   0x10             	MOVLW	0x10
000866   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
000868   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00086a   d1e1     bra     0xc2e            	BRA	_00307_DS_
00086c   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
                                           ;	.line	173; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	chan++;
00086e   2b2e     incf    0x2e, 0x1, 0x1   	INCF	_analogSend_chan_1_104, F, B
                                           ;	.line	174; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(chan >= ANALOG_MAX_CHANNELS) {
000870   0e10     movlw   0x10             	MOVLW	0x10
                                           ; #	SUBWF	_analogSend_chan_1_104, W, B
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00245_DS_
                                           ; #	CLRF	_analogSend_chan_1_104, B
                                           ; #	SWAPF	_analogSend_chan_1_104, W, B
                                           ; removed redundant BANKSEL
                                           ;	.line	175; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	chan = 0;
000872   5d2e     subwf   0x2e, 0, 0x1     	SUBWF	_analogSend_chan_1_104, W, B
                                           ;	.line	177; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(! isSelected(chan)) continue;
000874   e301     bnc     0x878            	BNC	_10434_DS_
                                           ; removed redundant BANKSEL
000876   6b2e     clrf    0x2e, 0x1        	CLRF	_analogSend_chan_1_104, B
                                           _10434_DS_:
000878   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
00087a   392e     swapf   0x2e, 0, 0x1     	SWAPF	_analogSend_chan_1_104, W, B
00087c   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
00087e   0b1f     andlw   0x1f             	ANDLW	0x1f
000880   6e03     movwf   0x3, 0           	MOVWF	r0x03
000882   6a04     clrf    0x4, 0           	CLRF	r0x04
000884   0e49     movlw   0x49             	MOVLW	LOW(_Selected)
000886   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000888   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
00088a   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00088c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00088e   ffe9
000890   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000892   ffea
000894   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
000896   f003
000898   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
00089a   152e     andwf   0x2e, 0, 0x1     	ANDWF	_analogSend_chan_1_104, W, B
00089c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00089e   0e01     movlw   0x1              	MOVLW	0x01
0008a0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0008a2   0e00     movlw   0                	MOVLW	0x00
0008a4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008a6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0008a8   e006     bz      0x8b6            	BZ	_00352_DS_
0008aa   6ce8     negf    0xe8, 0          	NEGF	WREG
0008ac   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00353_DS_:
0008ae   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
0008b0   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
0008b2   0f01     addlw   0x1              	ADDLW	0x01
0008b4   e3fc     bnc     0x8ae            	BNC	_00353_DS_
                                           _00352_DS_:
0008b6   6a07     clrf    0x7, 0           	CLRF	r0x07
0008b8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0008ba   1605     andwf   0x5, 0x1, 0      	ANDWF	r0x05, F
0008bc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008be   1606     andwf   0x6, 0x1, 0      	ANDWF	r0x06, F
0008c0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008c2   1006     iorwf   0x6, 0, 0        	IORWF	r0x06, W
0008c4   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0008c6   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
0008c8   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0008ca   6a05     clrf    0x5, 0           	CLRF	r0x05
0008cc   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
0008ce   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008d0   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
0008d2   d7c1     bra     0x856            	BRA	_00279_DS_
                                           ; ;multiply lit val:0x02 by variable _analogSend_chan_1_104 and store in r0x03
0008d4   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
                                           ;	.line	179; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	v = Value[chan];
0008d6   512e     movf    0x2e, 0, 0x1     	MOVF	_analogSend_chan_1_104, W, B
0008d8   0d02     mullw   0x2              	MULLW	0x02
0008da   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
0008dc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0008de   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0008e0   f003
0008e2   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
0008e4   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
0008e6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0008e8   0e00     movlw   0                	MOVLW	HIGH(_Value)
0008ea   2004     addwfc  0x4, 0, 0        	ADDWFC	r0x04, W
0008ec   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008ee   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0008f0   ffe9
0008f2   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0008f4   ffea
0008f6   cfee     movff   0xfee, 0x5       	MOVFF	POSTINC0, r0x05
0008f8   f005
0008fa   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
0008fc   f006
0008fe   010a     movlb   0xa              	BANKSEL	_Mode
                                           ;	.line	180; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(Mode & AMODE_SCALE) { // scale :
000900   a12b     btfss   0x2b, 0, 0x1     	BTFSS	_Mode, 0, B
000902   d09d     bra     0xa3e            	BRA	_00260_DS_
                                           ;	.line	181; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(v < Min[chan]) v = 0;
000904   0e93     movlw   0x93             	MOVLW	LOW(_Min)
000906   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
000908   6e07     movwf   0x7, 0           	MOVWF	r0x07
00090a   0e04     movlw   0x4              	MOVLW	HIGH(_Min)
00090c   2004     addwfc  0x4, 0, 0        	ADDWFC	r0x04, W
00090e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000910   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
000912   ffe9
000914   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
000916   ffea
000918   cfee     movff   0xfee, 0x7       	MOVFF	POSTINC0, r0x07
00091a   f007
00091c   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
00091e   f008
000920   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000922   0f80     addlw   0x80             	ADDLW	0x80
000924   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000926   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000928   0f80     addlw   0x80             	ADDLW	0x80
00092a   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
00092c   e102     bnz     0x932            	BNZ	_00356_DS_
00092e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000930   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _00356_DS_:
000932   e203     bc      0x93a            	BC	_00252_DS_
000934   6a05     clrf    0x5, 0           	CLRF	r0x05
000936   6a06     clrf    0x6, 0           	CLRF	r0x06
000938   d060     bra     0x9fa            	BRA	_00253_DS_
                                           _00252_DS_:
                                           ;	.line	182; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	else if(v > Max[chan]) v = ANALOG_SCALED_MAX;
00093a   0eb3     movlw   0xb3             	MOVLW	LOW(_Max)
00093c   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
00093e   0e04     movlw   0x4              	MOVLW	HIGH(_Max)
000940   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000942   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000944   ffe9
000946   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000948   ffea
00094a   cfee     movff   0xfee, 0x3       	MOVFF	POSTINC0, r0x03
00094c   f003
00094e   cfef     movff   0xfef, 0x4       	MOVFF	INDF0, r0x04
000950   f004
000952   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000954   0f80     addlw   0x80             	ADDLW	0x80
000956   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000958   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00095a   0f80     addlw   0x80             	ADDLW	0x80
00095c   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
00095e   e102     bnz     0x964            	BNZ	_00357_DS_
000960   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000962   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _00357_DS_:
000964   e204     bc      0x96e            	BC	_00249_DS_
000966   6805     setf    0x5, 0           	SETF	r0x05
000968   0e3f     movlw   0x3f             	MOVLW	0x3f
00096a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00096c   d046     bra     0x9fa            	BRA	_00253_DS_
                                           _00249_DS_:
                                           ;	.line	184; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	((ANALOG_SCALED_MAX+1UL) * (v - Min[chan])) / 
00096e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000970   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000972   6e09     movwf   0x9, 0           	MOVWF	r0x09
000974   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000976   5806     subwfb  0x6, 0, 0        	SUBWFB	r0x06, W
000978   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
00097a   6ae8     clrf    0xe8, 0          	CLRF	WREG
00097c   be0a     btfsc   0xa, 0x7, 0      	BTFSC	r0x0a, 7
00097e   0eff     movlw   0xff             	MOVLW	0xff
000980   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
                                           ; #	MOVWF	r0x0c
                                           ; #	MOVF	r0x0c, W
                                           ;	.line	185; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	(Max[chan] - Min[chan]) );
000982   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000984   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000986   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000988   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
00098a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00098c   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00098e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000990   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
000992   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
000994   0e40     movlw   0x40             	MOVLW	0x40
000996   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000998   0e00     movlw   0                	MOVLW	0x00
00099a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00099c   ecbf     call    0x137e, 0        	CALL	__mullong
00099e   f009
0009a0   6e09     movwf   0x9, 0           	MOVWF	r0x09
0009a2   cff3     movff   0xff3, 0xa       	MOVFF	PRODL, r0x0a
0009a4   f00a
0009a6   cff4     movff   0xff4, 0xb       	MOVFF	PRODH, r0x0b
0009a8   f00b
0009aa   cfe9     movff   0xfe9, 0xc       	MOVFF	FSR0L, r0x0c
0009ac   f00c
0009ae   0e08     movlw   0x8              	MOVLW	0x08
0009b0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0009b2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009b4   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
0009b6   6e07     movwf   0x7, 0           	MOVWF	r0x07
0009b8   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0009ba   5804     subwfb  0x4, 0, 0        	SUBWFB	r0x04, W
0009bc   6e08     movwf   0x8, 0           	MOVWF	r0x08
0009be   6ae8     clrf    0xe8, 0          	CLRF	WREG
0009c0   be08     btfsc   0x8, 0x7, 0      	BTFSC	r0x08, 7
0009c2   0eff     movlw   0xff             	MOVLW	0xff
0009c4   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0009c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009c8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0009ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009cc   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0009ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009d0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009d4   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0009d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009d8   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0009da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009dc   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0009de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009e0   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0009e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009e4   ec47     call    0x1c8e, 0        	CALL	__divulong
0009e6   f00e
0009e8   6e03     movwf   0x3, 0           	MOVWF	r0x03
0009ea   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
0009ec   f004
0009ee   0e08     movlw   0x8              	MOVLW	0x08
0009f0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0009f2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0009f4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0009f6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009f8   6e06     movwf   0x6, 0           	MOVWF	r0x06
                                           _00253_DS_:
0009fa   010a     movlb   0xa              	BANKSEL	(_Threshold + 1)
                                           ;	.line	187; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(v <= Threshold ) v = 0;
0009fc   512a     movf    0x2a, 0, 0x1     	MOVF	(_Threshold + 1), W, B
0009fe   0f80     addlw   0x80             	ADDLW	0x80
000a00   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000a02   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000a04   0f80     addlw   0x80             	ADDLW	0x80
000a06   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
000a08   e102     bnz     0xa0e            	BNZ	_00358_DS_
000a0a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
                                           ; removed redundant BANKSEL
000a0c   5d29     subwf   0x29, 0, 0x1     	SUBWF	_Threshold, W, B
                                           _00358_DS_:
000a0e   e303     bnc     0xa16            	BNC	_00257_DS_
000a10   6a05     clrf    0x5, 0           	CLRF	r0x05
000a12   6a06     clrf    0x6, 0           	CLRF	r0x06
000a14   d014     bra     0xa3e            	BRA	_00260_DS_
                                           _00257_DS_:
000a16   010a     movlb   0xa              	BANKSEL	_Threshold
                                           ;	.line	188; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	else if(v >= (ANALOG_SCALED_MAX - Threshold)) 
000a18   5129     movf    0x29, 0, 0x1     	MOVF	_Threshold, W, B
000a1a   08ff     sublw   0xff             	SUBLW	0xff
000a1c   6e03     movwf   0x3, 0           	MOVWF	r0x03
000a1e   0e3f     movlw   0x3f             	MOVLW	0x3f
                                           ; removed redundant BANKSEL
000a20   552a     subfwb  0x2a, 0, 0x1     	SUBFWB	(_Threshold + 1), W, B
000a22   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a24   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000a26   0f80     addlw   0x80             	ADDLW	0x80
000a28   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000a2a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a2c   0f80     addlw   0x80             	ADDLW	0x80
000a2e   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
000a30   e102     bnz     0xa36            	BNZ	_00359_DS_
000a32   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000a34   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _00359_DS_:
000a36   e303     bnc     0xa3e            	BNC	_00260_DS_
                                           ;	.line	189; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	v = ANALOG_SCALED_MAX;
000a38   6805     setf    0x5, 0           	SETF	r0x05
000a3a   0e3f     movlw   0x3f             	MOVLW	0x3f
000a3c   6e06     movwf   0x6, 0           	MOVWF	r0x06
                                           ; ;multiply lit val:0x02 by variable _analogSend_chan_1_104 and store in r0x03
                                           _00260_DS_:
000a3e   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
                                           ;	.line	191; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	d = v - oldValue[chan];
000a40   512e     movf    0x2e, 0, 0x1     	MOVF	_analogSend_chan_1_104, W, B
000a42   0d02     mullw   0x2              	MULLW	0x02
000a44   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000a46   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a48   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000a4a   f003
000a4c   0e59     movlw   0x59             	MOVLW	LOW(_oldValue)
000a4e   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000a50   0e04     movlw   0x4              	MOVLW	HIGH(_oldValue)
000a52   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000a54   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000a56   ffe9
000a58   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000a5a   ffea
000a5c   cfee     movff   0xfee, 0x3       	MOVFF	POSTINC0, r0x03
000a5e   f003
000a60   cfef     movff   0xfef, 0x4       	MOVFF	INDF0, r0x04
000a62   f004
000a64   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000a66   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000a68   6e03     movwf   0x3, 0           	MOVWF	r0x03
000a6a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a6c   5806     subwfb  0x6, 0, 0        	SUBWFB	r0x06, W
000a6e   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ;	.line	192; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(d < 0) d = -d;
000a70   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
000a72   ae04     btfss   0x4, 0x7, 0      	BTFSS	r0x04, 7
000a74   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
000a76   e304     bnc     0xa80            	BNC	_00262_DS_
000a78   1e04     comf    0x4, 0x1, 0      	COMF	r0x04, F
000a7a   6c03     negf    0x3, 0           	NEGF	r0x03
000a7c   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
000a7e   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
                                           _00262_DS_:
                                           ;	.line	194; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	count++;
000a80   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
000a82   010a     movlb   0xa              	BANKSEL	(_Threshold + 1)
                                           ;	.line	196; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(d <= Threshold) continue;
000a84   512a     movf    0x2a, 0, 0x1     	MOVF	(_Threshold + 1), W, B
000a86   0f80     addlw   0x80             	ADDLW	0x80
000a88   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000a8a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a8c   0f80     addlw   0x80             	ADDLW	0x80
000a8e   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
000a90   e102     bnz     0xa96            	BNZ	_00361_DS_
000a92   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
000a94   5d29     subwf   0x29, 0, 0x1     	SUBWF	_Threshold, W, B
                                           _00361_DS_:
000a96   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000a98   d6de     bra     0x856            	BRA	_00279_DS_
                                           ; ;multiply lit val:0x02 by variable _analogSend_chan_1_104 and store in r0x07
000a9a   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
                                           ;	.line	198; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	oldValue[chan] = v;
000a9c   512e     movf    0x2e, 0, 0x1     	MOVF	_analogSend_chan_1_104, W, B
000a9e   0d02     mullw   0x2              	MULLW	0x02
000aa0   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000aa2   6e08     movwf   0x8, 0           	MOVWF	r0x08
000aa4   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
000aa6   f007
000aa8   0e59     movlw   0x59             	MOVLW	LOW(_oldValue)
000aaa   2607     addwf   0x7, 0x1, 0      	ADDWF	r0x07, F
000aac   0e04     movlw   0x4              	MOVLW	HIGH(_oldValue)
000aae   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
000ab0   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
000ab2   ffe9
000ab4   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
000ab6   ffea
000ab8   c005     movff   0x5, 0xfee       	MOVFF	r0x05, POSTINC0
000aba   ffee
000abc   c006     movff   0x6, 0xfef       	MOVFF	r0x06, INDF0
000abe   ffef
000ac0   010a     movlb   0xa              	BANKSEL	_Mode
                                           ;	.line	200; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(Mode & AMODE_CROSS) {
000ac2   a52b     btfss   0x2b, 0x2, 0x1   	BTFSS	_Mode, 2, B
000ac4   d05a     bra     0xb7a            	BRA	_00272_DS_
                                           ; ;multiply lit val:0x02 by variable _analogSend_chan_1_104 and store in r0x07
000ac6   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
                                           ;	.line	201; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(Dist[chan] != 0) {
000ac8   512e     movf    0x2e, 0, 0x1     	MOVF	_analogSend_chan_1_104, W, B
000aca   0d02     mullw   0x2              	MULLW	0x02
000acc   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000ace   6e08     movwf   0x8, 0           	MOVWF	r0x08
000ad0   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
000ad2   f007
000ad4   0ed3     movlw   0xd3             	MOVLW	LOW(_Dist)
000ad6   2407     addwf   0x7, 0, 0        	ADDWF	r0x07, W
000ad8   6e09     movwf   0x9, 0           	MOVWF	r0x09
000ada   0e04     movlw   0x4              	MOVLW	HIGH(_Dist)
000adc   2008     addwfc  0x8, 0, 0        	ADDWFC	r0x08, W
000ade   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000ae0   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
000ae2   ffe9
000ae4   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
000ae6   ffea
000ae8   cfee     movff   0xfee, 0xb       	MOVFF	POSTINC0, r0x0b
000aea   f00b
000aec   cfef     movff   0xfef, 0xc       	MOVFF	INDF0, r0x0c
000aee   f00c
000af0   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000af2   100c     iorwf   0xc, 0, 0        	IORWF	r0x0c, W
000af4   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
000af6   d041     bra     0xb7a            	BRA	_00272_DS_
                                           ;	.line	202; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	d = v - inValue[chan];
000af8   0e39     movlw   0x39             	MOVLW	LOW(_inValue)
000afa   2607     addwf   0x7, 0x1, 0      	ADDWF	r0x07, F
000afc   0e04     movlw   0x4              	MOVLW	HIGH(_inValue)
000afe   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
000b00   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
000b02   ffe9
000b04   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
000b06   ffea
000b08   cfee     movff   0xfee, 0x7       	MOVFF	POSTINC0, r0x07
000b0a   f007
000b0c   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
000b0e   f008
000b10   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b12   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000b14   6e03     movwf   0x3, 0           	MOVWF	r0x03
000b16   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000b18   5806     subwfb  0x6, 0, 0        	SUBWFB	r0x06, W
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x03, W
                                           ; #	IORWF	r0x04, W
                                           ;	.line	203; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if((d != 0) && ((d > 0) == (Dist[chan] > 0))) { 
000b1a   6e04     movwf   0x4, 0           	MOVWF	r0x04
000b1c   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
000b1e   e01c     bz      0xb58            	BZ	_00266_DS_
000b20   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000b22   0f80     addlw   0x80             	ADDLW	0x80
000b24   0f80     addlw   0x80             	ADDLW	0x80
000b26   e102     bnz     0xb2c            	BNZ	_00364_DS_
000b28   0e01     movlw   0x1              	MOVLW	0x01
000b2a   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _00364_DS_:
000b2c   6a07     clrf    0x7, 0           	CLRF	r0x07
000b2e   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
000b30   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000b32   0f80     addlw   0x80             	ADDLW	0x80
000b34   0f80     addlw   0x80             	ADDLW	0x80
000b36   e102     bnz     0xb3c            	BNZ	_00366_DS_
000b38   0e01     movlw   0x1              	MOVLW	0x01
000b3a   5c0b     subwf   0xb, 0, 0        	SUBWF	r0x0b, W
                                           _00366_DS_:
000b3c   6a0b     clrf    0xb, 0           	CLRF	r0x0b
000b3e   360b     rlcf    0xb, 0x1, 0      	RLCF	r0x0b, F
000b40   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b42   180b     xorwf   0xb, 0, 0        	XORWF	r0x0b, W
000b44   e109     bnz     0xb58            	BNZ	_00266_DS_
                                           ;	.line	204; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Dist[chan] = d;
000b46   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
000b48   ffe9
000b4a   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
000b4c   ffea
000b4e   c003     movff   0x3, 0xfee       	MOVFF	r0x03, POSTINC0
000b50   ffee
000b52   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
000b54   ffef
                                           ;	.line	205; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	continue; 
000b56   d67f     bra     0x856            	BRA	_00279_DS_
                                           ; ;multiply lit val:0x02 by variable _analogSend_chan_1_104 and store in r0x03
                                           _00266_DS_:
000b58   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
                                           ;	.line	207; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	else Dist[chan] = 0;
000b5a   512e     movf    0x2e, 0, 0x1     	MOVF	_analogSend_chan_1_104, W, B
000b5c   0d02     mullw   0x2              	MULLW	0x02
000b5e   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000b60   6e04     movwf   0x4, 0           	MOVWF	r0x04
000b62   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000b64   f003
000b66   0ed3     movlw   0xd3             	MOVLW	LOW(_Dist)
000b68   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000b6a   0e04     movlw   0x4              	MOVLW	HIGH(_Dist)
000b6c   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000b6e   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000b70   ffe9
000b72   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000b74   ffea
000b76   6aee     clrf    0xee, 0          	CLRF	POSTINC0
000b78   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           _00272_DS_:
000b7a   010a     movlb   0xa              	BANKSEL	_Mode
                                           ;	.line	211; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(Mode & AMODE_NUM) {
000b7c   a32b     btfss   0x2b, 0x1, 0x1   	BTFSS	_Mode, 1, B
000b7e   d043     bra     0xc06            	BRA	_00276_DS_
                                           ;	.line	212; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if( !len ) buf[len++] = 'B';
000b80   5000     movf    0, 0, 0          	MOVF	r0x00, W
000b82   e10e     bnz     0xba0            	BNZ	_00274_DS_
000b84   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
000b86   f003
000b88   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
000b8a   6a04     clrf    0x4, 0           	CLRF	r0x04
000b8c   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_104)
000b8e   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000b90   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_104)
000b92   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000b94   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000b96   ffe9
000b98   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000b9a   ffea
000b9c   0e42     movlw   0x42             	MOVLW	0x42
000b9e   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           _00274_DS_:
                                           ;	.line	213; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	buf[len++] = chan + 100;
000ba0   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
000ba2   f003
000ba4   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
000ba6   6a04     clrf    0x4, 0           	CLRF	r0x04
000ba8   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_104)
000baa   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000bac   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_104)
000bae   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000bb0   0e64     movlw   0x64             	MOVLW	0x64
000bb2   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_104
000bb4   252e     addwf   0x2e, 0, 0x1     	ADDWF	_analogSend_chan_1_104, W, B
000bb6   6e07     movwf   0x7, 0           	MOVWF	r0x07
000bb8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000bba   ffe9
000bbc   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000bbe   ffea
000bc0   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
000bc2   ffef
                                           ;	.line	214; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	buf[len++] = v >> 8;
000bc4   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
000bc6   f003
000bc8   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
000bca   6a04     clrf    0x4, 0           	CLRF	r0x04
000bcc   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_104)
000bce   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000bd0   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_104)
000bd2   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000bd4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000bd6   6e07     movwf   0x7, 0           	MOVWF	r0x07
000bd8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000bda   ffe9
000bdc   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000bde   ffea
000be0   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
000be2   ffef
                                           ;	.line	215; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	buf[len++] = v & 255;
000be4   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
000be6   f003
000be8   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
000bea   6a04     clrf    0x4, 0           	CLRF	r0x04
000bec   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_104)
000bee   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000bf0   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_104)
000bf2   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000bf4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000bf6   6e07     movwf   0x7, 0           	MOVWF	r0x07
000bf8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000bfa   ffe9
000bfc   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000bfe   ffea
000c00   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
000c02   ffef
000c04   d628     bra     0x856            	BRA	_00279_DS_
                                           _00276_DS_:
                                           ;	.line	217; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	else printf("C A %d %d\n",chan,v);
000c06   ca2e     movff   0xa2e, 0x3       	MOVFF	_analogSend_chan_1_104, r0x03
000c08   f003
000c0a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000c0c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c0e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000c10   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c12   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
000c14   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000c16   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c18   0e00     movlw   0                	MOVLW	UPPER(___str_0)
000c1a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c1c   0e25     movlw   0x25             	MOVLW	HIGH(___str_0)
000c1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c20   0e1c     movlw   0x1c             	MOVLW	LOW(___str_0)
000c22   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c24   ec8c     call    0x3118, 0        	CALL	_printf
000c26   f018
000c28   0e07     movlw   0x7              	MOVLW	0x07
000c2a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000c2c   d614     bra     0x856            	BRA	_00279_DS_
                                           _00307_DS_:
000c2e   c002     movff   0x2, 0x1         	MOVFF	r0x02, r0x01
000c30   f001
                                           ;	.line	220; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if((len != 0) && (Mode & AMODE_NUM)) {
000c32   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c34   e01d     bz      0xc70            	BZ	_00283_DS_
000c36   010a     movlb   0xa              	BANKSEL	_Mode
000c38   a32b     btfss   0x2b, 0x1, 0x1   	BTFSS	_Mode, 1, B
000c3a   d01a     bra     0xc70            	BRA	_00283_DS_
                                           ;	.line	221; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	buf[len++] = '\n';
000c3c   c000     movff   0, 0x2           	MOVFF	r0x00, r0x02
000c3e   f002
000c40   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
000c42   6a03     clrf    0x3, 0           	CLRF	r0x03
000c44   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_104)
000c46   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
000c48   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_104)
000c4a   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
000c4c   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
000c4e   ffe9
000c50   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
000c52   ffea
000c54   0e0a     movlw   0xa              	MOVLW	0x0a
000c56   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           ;	.line	222; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	fraiseSend(buf,len);
000c58   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c5a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c5c   0e80     movlw   0x80             	MOVLW	0x80
000c5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c60   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_104)
000c62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c64   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_104)
000c66   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c68   ec94     call    0x2528, 0        	CALL	_fraiseSend
000c6a   f012
000c6c   0e04     movlw   0x4              	MOVLW	0x04
000c6e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00283_DS_:
                                           ;	.line	225; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	return count;		
000c70   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000c72   cfe4     movff   0xfe4, 0xc       	MOVFF	PREINC1, r0x0c
000c74   f00c
000c76   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
000c78   f00b
000c7a   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
000c7c   f00a
000c7e   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
000c80   f009
000c82   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
000c84   f008
000c86   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
000c88   f007
000c8a   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
000c8c   f006
000c8e   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
000c90   f005
000c92   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
000c94   f004
000c96   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
000c98   f003
000c9a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
000c9c   f002
000c9e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
000ca0   f001
000ca2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
000ca4   f000
000ca6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogService	code
                                           _analogService:
                                           ;	.line	107; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	unsigned char analogService(void)
000ca8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
000caa   ffe5
000cac   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
000cae   ffe5
000cb0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
000cb2   ffe5
000cb4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
000cb6   ffe5
000cb8   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
000cba   ffe5
000cbc   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
000cbe   ffe5
000cc0   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
000cc2   ffe5
000cc4   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
000cc6   ffe5
000cc8   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
000cca   ffe5
000ccc   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
000cce   ffe5
000cd0   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
000cd2   ffe5
                                           ;	.line	113; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(ADCON0bits.GO) return chan;
000cd4   a2c2     btfss   0xc2, 0x1, 0     	BTFSS	_ADCON0bits, 1
000cd6   d004     bra     0xce0            	BRA	_00166_DS_
000cd8   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
000cda   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_97, W, B
000cdc   ef67     goto    0x10ce           	GOTO	_00183_DS_
000cde   f008
                                           _00166_DS_:
000ce0   010a     movlb   0xa              	BANKSEL	_analogService_conv_1_97
                                           ;	.line	115; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(conv) {
000ce2   512d     movf    0x2d, 0, 0x1     	MOVF	_analogService_conv_1_97, W, B
000ce4   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
000ce6   d11b     bra     0xf1e            	BRA	_00176_DS_
                                           ; ;multiply lit val:0x02 by variable _analogService_chan_1_97 and store in r0x00
000ce8   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
                                           ;	.line	116; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	v = Value[chan];
000cea   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_97, W, B
000cec   0d02     mullw   0x2              	MULLW	0x02
000cee   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000cf0   6e01     movwf   0x1, 0           	MOVWF	r0x01
000cf2   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
000cf4   f000
000cf6   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
000cf8   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
000cfa   0e00     movlw   0                	MOVLW	HIGH(_Value)
000cfc   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
000cfe   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
000d00   ffe9
000d02   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
000d04   ffea
000d06   cfee     movff   0xfee, 0         	MOVFF	POSTINC0, r0x00
000d08   f000
000d0a   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
000d0c   f001
                                           ;	.line	118; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	pin = Pins[chan];
000d0e   0e23     movlw   0x23             	MOVLW	LOW(_Pins)
                                           ; removed redundant BANKSEL
000d10   252c     addwf   0x2c, 0, 0x1     	ADDWF	_analogService_chan_1_97, W, B
000d12   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d14   6a03     clrf    0x3, 0           	CLRF	r0x03
000d16   0e04     movlw   0x4              	MOVLW	HIGH(_Pins)
000d18   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
000d1a   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
000d1c   ffe9
000d1e   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
000d20   ffea
000d22   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
000d24   f002
                                           ;	.line	119; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(pin != 255) {
000d26   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d28   0aff     xorlw   0xff             	XORLW	0xff
000d2a   e101     bnz     0xd2e            	BNZ	_00213_DS_
000d2c   d052     bra     0xdd2            	BRA	_00168_DS_
                                           _00213_DS_:
                                           ;	.line	120; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitclr(*(&TRISA+(pin>>4)),pin&7);
000d2e   3802     swapf   0x2, 0, 0        	SWAPF	r0x02, W
000d30   0b0f     andlw   0xf              	ANDLW	0x0f
000d32   6e03     movwf   0x3, 0           	MOVWF	r0x03
000d34   0e92     movlw   0x92             	MOVLW	LOW(_TRISA)
000d36   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
000d38   6e04     movwf   0x4, 0           	MOVWF	r0x04
000d3a   6a05     clrf    0x5, 0           	CLRF	r0x05
000d3c   0e0f     movlw   0xf              	MOVLW	HIGH(_TRISA)
000d3e   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
000d40   6a06     clrf    0x6, 0           	CLRF	r0x06
000d42   0e92     movlw   0x92             	MOVLW	LOW(_TRISA)
000d44   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000d46   0e0f     movlw   0xf              	MOVLW	HIGH(_TRISA)
000d48   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
000d4a   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000d4c   ffe9
000d4e   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
000d50   ffea
000d52   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
000d54   f003
000d56   0e07     movlw   0x7              	MOVLW	0x07
000d58   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
000d5a   6e06     movwf   0x6, 0           	MOVWF	r0x06
000d5c   0e01     movlw   0x1              	MOVLW	0x01
000d5e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000d60   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000d62   e005     bz      0xd6e            	BZ	_00215_DS_
000d64   6ce8     negf    0xe8, 0          	NEGF	WREG
000d66   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00216_DS_:
000d68   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
000d6a   0f01     addlw   0x1              	ADDLW	0x01
000d6c   e3fd     bnc     0xd68            	BNC	_00216_DS_
                                           _00215_DS_:
000d6e   1c07     comf    0x7, 0, 0        	COMF	r0x07, W
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
000d70   6e06     movwf   0x6, 0           	MOVWF	r0x06
000d72   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
000d74   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
000d76   ffe9
000d78   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
000d7a   ffea
000d7c   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
000d7e   ffef
                                           ;	.line	121; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitclr(*(&LATA+(pin>>4)),pin&7);
000d80   3802     swapf   0x2, 0, 0        	SWAPF	r0x02, W
000d82   0b0f     andlw   0xf              	ANDLW	0x0f
000d84   6e03     movwf   0x3, 0           	MOVWF	r0x03
000d86   0e89     movlw   0x89             	MOVLW	LOW(_LATA)
000d88   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
000d8a   6e04     movwf   0x4, 0           	MOVWF	r0x04
000d8c   6a05     clrf    0x5, 0           	CLRF	r0x05
000d8e   0e0f     movlw   0xf              	MOVLW	HIGH(_LATA)
000d90   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
000d92   6a06     clrf    0x6, 0           	CLRF	r0x06
000d94   0e89     movlw   0x89             	MOVLW	LOW(_LATA)
000d96   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000d98   0e0f     movlw   0xf              	MOVLW	HIGH(_LATA)
000d9a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
000d9c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000d9e   ffe9
000da0   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
000da2   ffea
000da4   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
000da6   f003
000da8   0e07     movlw   0x7              	MOVLW	0x07
000daa   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
000dac   6e06     movwf   0x6, 0           	MOVWF	r0x06
000dae   0e01     movlw   0x1              	MOVLW	0x01
000db0   6e07     movwf   0x7, 0           	MOVWF	r0x07
000db2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000db4   e005     bz      0xdc0            	BZ	_00219_DS_
000db6   6ce8     negf    0xe8, 0          	NEGF	WREG
000db8   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00220_DS_:
000dba   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
000dbc   0f01     addlw   0x1              	ADDLW	0x01
000dbe   e3fd     bnc     0xdba            	BNC	_00220_DS_
                                           _00219_DS_:
000dc0   1c07     comf    0x7, 0, 0        	COMF	r0x07, W
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
000dc2   6e06     movwf   0x6, 0           	MOVWF	r0x06
000dc4   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
000dc6   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
000dc8   ffe9
000dca   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
000dcc   ffea
000dce   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
000dd0   ffef
                                           ; ;multiply lit val:0x02 by variable _analogService_chan_1_97 and store in r0x03
                                           _00168_DS_:
000dd2   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
                                           ;	.line	123; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Value[chan] = v - (v>>ANALOG_FILTER) + ADRESL+(ADRESH<<8); 
000dd4   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_97, W, B
000dd6   0d02     mullw   0x2              	MULLW	0x02
000dd8   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000dda   6e04     movwf   0x4, 0           	MOVWF	r0x04
000ddc   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000dde   f003
000de0   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
000de2   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000de4   0e00     movlw   0                	MOVLW	HIGH(_Value)
000de6   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000de8   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
000dea   3001     rrcf    0x1, 0, 0        	RRCF	r0x01, W
000dec   6e06     movwf   0x6, 0           	MOVWF	r0x06
000dee   3000     rrcf    0, 0, 0          	RRCF	r0x00, W
000df0   6e05     movwf   0x5, 0           	MOVWF	r0x05
000df2   3406     rlcf    0x6, 0, 0        	RLCF	r0x06, W
000df4   3206     rrcf    0x6, 0x1, 0      	RRCF	r0x06, F
000df6   3205     rrcf    0x5, 0x1, 0      	RRCF	r0x05, F
000df8   3406     rlcf    0x6, 0, 0        	RLCF	r0x06, W
000dfa   3206     rrcf    0x6, 0x1, 0      	RRCF	r0x06, F
000dfc   3205     rrcf    0x5, 0x1, 0      	RRCF	r0x05, F
000dfe   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000e00   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
000e02   6e05     movwf   0x5, 0           	MOVWF	r0x05
000e04   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000e06   5801     subwfb  0x1, 0, 0        	SUBWFB	r0x01, W
000e08   6e06     movwf   0x6, 0           	MOVWF	r0x06
000e0a   cfc3     movff   0xfc3, 0x7       	MOVFF	_ADRESL, r0x07
000e0c   f007
000e0e   6a08     clrf    0x8, 0           	CLRF	r0x08
000e10   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000e12   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
000e14   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000e16   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
000e18   cfc4     movff   0xfc4, 0x7       	MOVFF	_ADRESH, r0x07
000e1a   f007
000e1c   6a08     clrf    0x8, 0           	CLRF	r0x08
000e1e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000e20   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000e22   6a09     clrf    0x9, 0           	CLRF	r0x09
000e24   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000e26   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
000e28   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000e2a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
000e2c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000e2e   ffe9
000e30   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000e32   ffea
000e34   c005     movff   0x5, 0xfee       	MOVFF	r0x05, POSTINC0
000e36   ffee
000e38   c006     movff   0x6, 0xfef       	MOVFF	r0x06, INDF0
000e3a   ffef
000e3c   010a     movlb   0xa              	BANKSEL	_Scaling
                                           ;	.line	124; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(Scaling == 1) {
000e3e   5128     movf    0x28, 0, 0x1     	MOVF	_Scaling, W, B
000e40   0a01     xorlw   0x1              	XORLW	0x01
000e42   e001     bz      0xe46            	BZ	_00223_DS_
000e44   d06a     bra     0xf1a            	BRA	_00174_DS_
                                           ; ;multiply lit val:0x02 by variable _analogService_chan_1_97 and store in r0x03
                                           _00223_DS_:
000e46   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
                                           ;	.line	125; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	v = Value[chan];
000e48   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_97, W, B
000e4a   0d02     mullw   0x2              	MULLW	0x02
000e4c   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000e4e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000e50   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000e52   f003
000e54   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
000e56   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
000e58   6e05     movwf   0x5, 0           	MOVWF	r0x05
000e5a   0e00     movlw   0                	MOVLW	HIGH(_Value)
000e5c   2004     addwfc  0x4, 0, 0        	ADDWFC	r0x04, W
000e5e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000e60   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
000e62   ffe9
000e64   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
000e66   ffea
000e68   cfee     movff   0xfee, 0         	MOVFF	POSTINC0, r0x00
000e6a   f000
000e6c   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
000e6e   f001
                                           ;	.line	126; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(v < (Min[chan]-MINMAX_MARGIN)) Min[chan] = v+MINMAX_MARGIN;
000e70   0e93     movlw   0x93             	MOVLW	LOW(_Min)
000e72   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000e74   0e04     movlw   0x4              	MOVLW	HIGH(_Min)
000e76   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000e78   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000e7a   ffe9
000e7c   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000e7e   ffea
000e80   cfee     movff   0xfee, 0x5       	MOVFF	POSTINC0, r0x05
000e82   f005
000e84   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
000e86   f006
000e88   0e9c     movlw   0x9c             	MOVLW	0x9c
000e8a   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
000e8c   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
000e8e   0606     decf    0x6, 0x1, 0      	DECF	r0x06, F
000e90   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000e92   0f80     addlw   0x80             	ADDLW	0x80
000e94   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000e96   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000e98   0f80     addlw   0x80             	ADDLW	0x80
000e9a   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
000e9c   e102     bnz     0xea2            	BNZ	_00224_DS_
000e9e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000ea0   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00224_DS_:
000ea2   e20e     bc      0xec0            	BC	_00170_DS_
000ea4   5000     movf    0, 0, 0          	MOVF	r0x00, W
000ea6   0f64     addlw   0x64             	ADDLW	0x64
000ea8   6e05     movwf   0x5, 0           	MOVWF	r0x05
000eaa   0e00     movlw   0                	MOVLW	0x00
000eac   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
000eae   6e06     movwf   0x6, 0           	MOVWF	r0x06
000eb0   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000eb2   ffe9
000eb4   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000eb6   ffea
000eb8   c005     movff   0x5, 0xfee       	MOVFF	r0x05, POSTINC0
000eba   ffee
000ebc   c006     movff   0x6, 0xfef       	MOVFF	r0x06, INDF0
000ebe   ffef
                                           ; ;multiply lit val:0x02 by variable _analogService_chan_1_97 and store in r0x03
                                           _00170_DS_:
000ec0   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
                                           ;	.line	127; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(v > (Max[chan]+MINMAX_MARGIN)) Max[chan] = v-MINMAX_MARGIN;
000ec2   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_97, W, B
000ec4   0d02     mullw   0x2              	MULLW	0x02
000ec6   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000ec8   6e04     movwf   0x4, 0           	MOVWF	r0x04
000eca   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000ecc   f003
000ece   0eb3     movlw   0xb3             	MOVLW	LOW(_Max)
000ed0   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000ed2   0e04     movlw   0x4              	MOVLW	HIGH(_Max)
000ed4   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000ed6   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000ed8   ffe9
000eda   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000edc   ffea
000ede   cfee     movff   0xfee, 0x5       	MOVFF	POSTINC0, r0x05
000ee0   f005
000ee2   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
000ee4   f006
000ee6   0e64     movlw   0x64             	MOVLW	0x64
000ee8   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
000eea   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000eec   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
000eee   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000ef0   0f80     addlw   0x80             	ADDLW	0x80
000ef2   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000ef4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000ef6   0f80     addlw   0x80             	ADDLW	0x80
000ef8   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
000efa   e102     bnz     0xf00            	BNZ	_00225_DS_
000efc   5000     movf    0, 0, 0          	MOVF	r0x00, W
000efe   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _00225_DS_:
000f00   e20c     bc      0xf1a            	BC	_00174_DS_
000f02   0e9c     movlw   0x9c             	MOVLW	0x9c
000f04   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
000f06   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
000f08   0601     decf    0x1, 0x1, 0      	DECF	r0x01, F
000f0a   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000f0c   ffe9
000f0e   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000f10   ffea
000f12   c000     movff   0, 0xfee         	MOVFF	r0x00, POSTINC0
000f14   ffee
000f16   c001     movff   0x1, 0xfef       	MOVFF	r0x01, INDF0
000f18   ffef
                                           _00174_DS_:
000f1a   010a     movlb   0xa              	BANKSEL	_analogService_conv_1_97
                                           ;	.line	129; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	conv=0;
000f1c   6b2d     clrf    0x2d, 0x1        	CLRF	_analogService_conv_1_97, B
                                           _00176_DS_:
000f1e   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
                                           ;	.line	132; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	chan++;
000f20   2b2c     incf    0x2c, 0x1, 0x1   	INCF	_analogService_chan_1_97, F, B
                                           ;	.line	133; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(chan >= ANALOG_MAX_CHANNELS) chan = 0;
000f22   0e10     movlw   0x10             	MOVLW	0x10
                                           ; #	SUBWF	_analogService_chan_1_97, W, B
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00178_DS_
                                           ; #	CLRF	_analogService_chan_1_97, B
                                           ; #	SWAPF	_analogService_chan_1_97, W, B
                                           ; removed redundant BANKSEL
                                           ;	.line	135; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(isSelected(chan))	{
000f24   5d2c     subwf   0x2c, 0, 0x1     	SUBWF	_analogService_chan_1_97, W, B
000f26   e301     bnc     0xf2a            	BNC	_20435_DS_
                                           ; removed redundant BANKSEL
000f28   6b2c     clrf    0x2c, 0x1        	CLRF	_analogService_chan_1_97, B
                                           _20435_DS_:
000f2a   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
000f2c   392c     swapf   0x2c, 0, 0x1     	SWAPF	_analogService_chan_1_97, W, B
000f2e   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
000f30   0b1f     andlw   0x1f             	ANDLW	0x1f
000f32   6e00     movwf   0, 0             	MOVWF	r0x00
000f34   6a01     clrf    0x1, 0           	CLRF	r0x01
000f36   0e49     movlw   0x49             	MOVLW	LOW(_Selected)
000f38   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
000f3a   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
000f3c   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
000f3e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
000f40   ffe9
000f42   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
000f44   ffea
000f46   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
000f48   f000
000f4a   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
000f4c   152c     andwf   0x2c, 0, 0x1     	ANDWF	_analogService_chan_1_97, W, B
000f4e   6e01     movwf   0x1, 0           	MOVWF	r0x01
000f50   0e01     movlw   0x1              	MOVLW	0x01
000f52   6e03     movwf   0x3, 0           	MOVWF	r0x03
000f54   0e00     movlw   0                	MOVLW	0x00
000f56   6e04     movwf   0x4, 0           	MOVWF	r0x04
000f58   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000f5a   e006     bz      0xf68            	BZ	_00228_DS_
000f5c   6ce8     negf    0xe8, 0          	NEGF	WREG
000f5e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00229_DS_:
000f60   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
000f62   3604     rlcf    0x4, 0x1, 0      	RLCF	r0x04, F
000f64   0f01     addlw   0x1              	ADDLW	0x01
000f66   e3fc     bnc     0xf60            	BNC	_00229_DS_
                                           _00228_DS_:
000f68   6a05     clrf    0x5, 0           	CLRF	r0x05
000f6a   5000     movf    0, 0, 0          	MOVF	r0x00, W
000f6c   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
000f6e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000f70   1604     andwf   0x4, 0x1, 0      	ANDWF	r0x04, F
000f72   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000f74   1004     iorwf   0x4, 0, 0        	IORWF	r0x04, W
000f76   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
000f78   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
000f7a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
000f7c   6a03     clrf    0x3, 0           	CLRF	r0x03
000f7e   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
000f80   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000f82   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
000f84   d0a2     bra     0x10ca           	BRA	_00182_DS_
                                           ;	.line	136; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON0=(HWChan[chan] << 2) + 1;
000f86   0e23     movlw   0x23             	MOVLW	LOW(_HWChan)
000f88   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
000f8a   252c     addwf   0x2c, 0, 0x1     	ADDWF	_analogService_chan_1_97, W, B
000f8c   6e00     movwf   0, 0             	MOVWF	r0x00
000f8e   6a01     clrf    0x1, 0           	CLRF	r0x01
000f90   0e0f     movlw   0xf              	MOVLW	HIGH(_HWChan)
000f92   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
000f94   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
000f96   ffe9
000f98   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
000f9a   ffea
000f9c   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
000f9e   f000
000fa0   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
000fa2   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
000fa4   0bfc     andlw   0xfc             	ANDLW	0xfc
000fa6   6e01     movwf   0x1, 0           	MOVWF	r0x01
000fa8   2801     incf    0x1, 0, 0        	INCF	r0x01, W
000faa   6ec2     movwf   0xc2, 0          	MOVWF	_ADCON0
                                           ;	.line	140; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	pin = Pins[chan];
000fac   0e23     movlw   0x23             	MOVLW	LOW(_Pins)
                                           ; removed redundant BANKSEL
000fae   252c     addwf   0x2c, 0, 0x1     	ADDWF	_analogService_chan_1_97, W, B
000fb0   6e00     movwf   0, 0             	MOVWF	r0x00
000fb2   6a01     clrf    0x1, 0           	CLRF	r0x01
000fb4   0e04     movlw   0x4              	MOVLW	HIGH(_Pins)
000fb6   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
000fb8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
000fba   ffe9
000fbc   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
000fbe   ffea
000fc0   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
000fc2   f002
                                           ;	.line	141; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(pin != 255) {
000fc4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000fc6   0aff     xorlw   0xff             	XORLW	0xff
000fc8   e101     bnz     0xfcc            	BNZ	_00232_DS_
000fca   d07b     bra     0x10c2           	BRA	_00180_DS_
                                           _00232_DS_:
                                           ;	.line	142; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitset(*(&TRISA+(pin>>4)),pin&7);// set channel to digital input
000fcc   3802     swapf   0x2, 0, 0        	SWAPF	r0x02, W
000fce   0b0f     andlw   0xf              	ANDLW	0x0f
000fd0   6e00     movwf   0, 0             	MOVWF	r0x00
000fd2   0e92     movlw   0x92             	MOVLW	LOW(_TRISA)
000fd4   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
000fd6   6e01     movwf   0x1, 0           	MOVWF	r0x01
000fd8   6a03     clrf    0x3, 0           	CLRF	r0x03
000fda   0e0f     movlw   0xf              	MOVLW	HIGH(_TRISA)
000fdc   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
000fde   6a04     clrf    0x4, 0           	CLRF	r0x04
000fe0   0e92     movlw   0x92             	MOVLW	LOW(_TRISA)
000fe2   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
000fe4   0e0f     movlw   0xf              	MOVLW	HIGH(_TRISA)
000fe6   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000fe8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
000fea   ffe9
000fec   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000fee   ffea
000ff0   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
000ff2   f000
000ff4   0e07     movlw   0x7              	MOVLW	0x07
000ff6   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
000ff8   6e04     movwf   0x4, 0           	MOVWF	r0x04
000ffa   0e01     movlw   0x1              	MOVLW	0x01
000ffc   6e05     movwf   0x5, 0           	MOVWF	r0x05
000ffe   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001000   e005     bz      0x100c           	BZ	_00234_DS_
001002   6ce8     negf    0xe8, 0          	NEGF	WREG
001004   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00235_DS_:
001006   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
001008   0f01     addlw   0x1              	ADDLW	0x01
00100a   e3fd     bnc     0x1006           	BNC	_00235_DS_
                                           _00234_DS_:
00100c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00100e   1200     iorwf   0, 0x1, 0        	IORWF	r0x00, F
001010   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
001012   ffe9
001014   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001016   ffea
001018   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
00101a   ffef
                                           ;	.line	143; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitset(*(__data unsigned char*)((int)&ANSELA + (pin>>4)),pin&7);// set channel to analog input
00101c   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
00101e   6e00     movwf   0, 0             	MOVWF	r0x00
001020   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001022   6e01     movwf   0x1, 0           	MOVWF	r0x01
001024   3802     swapf   0x2, 0, 0        	SWAPF	r0x02, W
001026   0b0f     andlw   0xf              	ANDLW	0x0f
001028   6e03     movwf   0x3, 0           	MOVWF	r0x03
00102a   6a04     clrf    0x4, 0           	CLRF	r0x04
00102c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00102e   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
001030   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001032   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
001034   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001036   6e05     movwf   0x5, 0           	MOVWF	r0x05
001038   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
00103a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00103c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00103e   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
001040   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001042   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
001044   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
001046   ffe9
001048   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
00104a   ffea
00104c   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
00104e   f003
001050   0e07     movlw   0x7              	MOVLW	0x07
001052   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
001054   0e01     movlw   0x1              	MOVLW	0x01
001056   6e04     movwf   0x4, 0           	MOVWF	r0x04
001058   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00105a   e005     bz      0x1066           	BZ	_00238_DS_
00105c   6ce8     negf    0xe8, 0          	NEGF	WREG
00105e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00239_DS_:
001060   3604     rlcf    0x4, 0x1, 0      	RLCF	r0x04, F
001062   0f01     addlw   0x1              	ADDLW	0x01
001064   e3fd     bnc     0x1060           	BNC	_00239_DS_
                                           _00238_DS_:
001066   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001068   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
00106a   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00106c   ffe9
00106e   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001070   ffea
001072   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
001074   ffef
001076   010f     movlb   0xf              	BANKSEL	_CTMUCONHbits
                                           ;	.line	144; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONHbits.IDISSEN = 1;		// Drain any charge on the A/D circuit
001078   8345     bsf     0x45, 0x1, 0x1   	BSF	_CTMUCONHbits, 1, B
00107a   0000     nop                      	nop	
00107c   0000     nop                      	nop	
                                           ;	.line	146; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONHbits.IDISSEN =  0;		// Stop discharge of A/D circuit
00107e   9345     bcf     0x45, 0x1, 0x1   	BCF	_CTMUCONHbits, 1, B
001080   010f     movlb   0xf              	BANKSEL	_CTMUCONLbits
                                           ;	.line	147; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONLbits.EDG2STAT = 0;		// Make sure edge2 is 0
001082   9344     bcf     0x44, 0x1, 0x1   	BCF	_CTMUCONLbits, 1, B
                                           ;	.line	156; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	}			
001084   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
001086   ffe5
001088   cff2     movff   0xff2, 0xb       	MOVFF	INTCON, r0x0b
00108a   f00b
00108c   9ef2     bcf     0xf2, 0x7, 0     	BCF	INTCON, 7
                                           ; removed redundant BANKSEL
                                           ;	.line	149; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONLbits.EDG1STAT = 1;	// Set edge1 - Start Charge
00108e   8144     bsf     0x44, 0, 0x1     	BSF	_CTMUCONLbits, 0, B
001090   0000     nop                      	nop	
001092   0000     nop                      	nop	
001094   0000     nop                      	nop	
001096   0000     nop                      	nop	
001098   0000     nop                      	nop	
00109a   0000     nop                      	nop	
00109c   0000     nop                      	nop	
00109e   0000     nop                      	nop	
0010a0   0000     nop                      	nop	
0010a2   0000     nop                      	nop	
0010a4   0000     nop                      	nop	
0010a6   0000     nop                      	nop	
0010a8   0000     nop                      	nop	
0010aa   0000     nop                      	nop	
0010ac   0000     nop                      	nop	
0010ae   0000     nop                      	nop	
0010b0   0000     nop                      	nop	
0010b2   0000     nop                      	nop	
0010b4   0000     nop                      	nop	
0010b6   0000     nop                      	nop	
                                           ;	.line	155; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONLbits.EDG1STAT = 0;	//Clear edge1 - Stop Charge
0010b8   9144     bcf     0x44, 0, 0x1     	BCF	_CTMUCONLbits, 0, B
0010ba   be0b     btfsc   0xb, 0x7, 0      	BTFSC	r0x0b, 7
0010bc   8ef2     bsf     0xf2, 0x7, 0     	BSF	INTCON, 7
0010be   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
0010c0   f00b
                                           _00180_DS_:
                                           ;	.line	158; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON0bits.GO = 1;
0010c2   82c2     bsf     0xc2, 0x1, 0     	BSF	_ADCON0bits, 1
                                           ;	.line	159; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	conv = 1;
0010c4   0e01     movlw   0x1              	MOVLW	0x01
0010c6   010a     movlb   0xa              	BANKSEL	_analogService_conv_1_97
0010c8   6f2d     movwf   0x2d, 0x1        	MOVWF	_analogService_conv_1_97, B
                                           _00182_DS_:
0010ca   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_97
                                           ;	.line	162; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	return chan;
0010cc   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_97, W, B
                                           _00183_DS_:
0010ce   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
0010d0   f00a
0010d2   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
0010d4   f009
0010d6   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
0010d8   f008
0010da   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
0010dc   f007
0010de   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0010e0   f006
0010e2   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0010e4   f005
0010e6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0010e8   f004
0010ea   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0010ec   f003
0010ee   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0010f0   f002
0010f2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0010f4   f001
0010f6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0010f8   f000
0010fa   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogDeselect	code
                                           _analogDeselect:
                                           ;	.line	98; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogDeselect(unsigned char chan)
003098   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00309a   ffe5
00309c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00309e   ffd9
0030a0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0030a2   ffe5
0030a4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0030a6   ffe5
0030a8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0030aa   ffe5
0030ac   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0030ae   ffe5
0030b0   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0030b2   ffe5
0030b4   0e02     movlw   0x2              	MOVLW	0x02
0030b6   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0030b8   f000
                                           ;	.line	100; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitclr(Selected[chan>>3],chan&7);
0030ba   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
0030bc   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
0030be   0b1f     andlw   0x1f             	ANDLW	0x1f
0030c0   6e01     movwf   0x1, 0           	MOVWF	r0x01
0030c2   6a02     clrf    0x2, 0           	CLRF	r0x02
0030c4   0e49     movlw   0x49             	MOVLW	LOW(_Selected)
0030c6   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
0030c8   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
0030ca   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0030cc   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0030ce   ffe9
0030d0   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0030d2   ffea
0030d4   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0030d6   f003
0030d8   0e07     movlw   0x7              	MOVLW	0x07
0030da   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
0030dc   0e01     movlw   0x1              	MOVLW	0x01
0030de   6e04     movwf   0x4, 0           	MOVWF	r0x04
0030e0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0030e2   e005     bz      0x30ee           	BZ	_00159_DS_
0030e4   6ce8     negf    0xe8, 0          	NEGF	WREG
0030e6   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00160_DS_:
0030e8   3604     rlcf    0x4, 0x1, 0      	RLCF	r0x04, F
0030ea   0f01     addlw   0x1              	ADDLW	0x01
0030ec   e3fd     bnc     0x30e8           	BNC	_00160_DS_
                                           _00159_DS_:
0030ee   1c04     comf    0x4, 0, 0        	COMF	r0x04, W
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0030f0   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
0030f2   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0030f4   ffe9
0030f6   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0030f8   ffea
0030fa   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
0030fc   ffef
0030fe   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003100   f004
003102   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003104   f003
003106   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003108   f002
00310a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00310c   f001
00310e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003110   f000
003112   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003114   ffd9
003116   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogSelectAdcTouch	code
                                           _analogSelectAdcTouch:
                                           ;	.line	91; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogSelectAdcTouch(unsigned char chan,unsigned char hwchan, unsigned char *port, unsigned char bit)
0020f4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0020f6   ffe5
0020f8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0020fa   ffd9
0020fc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0020fe   ffe5
002100   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002102   ffe5
002104   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002106   ffe5
002108   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00210a   ffe5
00210c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00210e   ffe5
002110   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002112   ffe5
002114   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002116   ffe5
002118   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00211a   ffe5
00211c   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
00211e   ffe5
002120   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
002122   ffe5
002124   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
002126   ffe5
002128   0e02     movlw   0x2              	MOVLW	0x02
00212a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00212c   f000
00212e   0e03     movlw   0x3              	MOVLW	0x03
002130   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002132   f001
002134   0e04     movlw   0x4              	MOVLW	0x04
002136   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002138   f002
00213a   0e05     movlw   0x5              	MOVLW	0x05
00213c   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
00213e   f003
002140   0e06     movlw   0x6              	MOVLW	0x06
002142   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
002144   f004
002146   0e07     movlw   0x7              	MOVLW	0x07
002148   cfdb     movff   0xfdb, 0x5       	MOVFF	PLUSW2, r0x05
00214a   f005
                                           ;	.line	93; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitset(Selected[chan>>3],chan&7);
00214c   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
00214e   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002150   0b1f     andlw   0x1f             	ANDLW	0x1f
002152   6e06     movwf   0x6, 0           	MOVWF	r0x06
002154   6a07     clrf    0x7, 0           	CLRF	r0x07
002156   0e49     movlw   0x49             	MOVLW	LOW(_Selected)
002158   2606     addwf   0x6, 0x1, 0      	ADDWF	r0x06, F
00215a   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
00215c   2207     addwfc  0x7, 0x1, 0      	ADDWFC	r0x07, F
00215e   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
002160   ffe9
002162   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
002164   ffea
002166   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
002168   f008
00216a   0e07     movlw   0x7              	MOVLW	0x07
00216c   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
00216e   6e09     movwf   0x9, 0           	MOVWF	r0x09
002170   0e01     movlw   0x1              	MOVLW	0x01
002172   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
002174   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
002176   e005     bz      0x2182           	BZ	_00150_DS_
002178   6ce8     negf    0xe8, 0          	NEGF	WREG
00217a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00151_DS_:
00217c   360a     rlcf    0xa, 0x1, 0      	RLCF	r0x0a, F
00217e   0f01     addlw   0x1              	ADDLW	0x01
002180   e3fd     bnc     0x217c           	BNC	_00151_DS_
                                           _00150_DS_:
002182   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
002184   1208     iorwf   0x8, 0x1, 0      	IORWF	r0x08, F
002186   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
002188   ffe9
00218a   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
00218c   ffea
00218e   c008     movff   0x8, 0xfef       	MOVFF	r0x08, INDF0
002190   ffef
                                           ;	.line	94; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	HWChan[chan]=hwchan;
002192   0e23     movlw   0x23             	MOVLW	LOW(_HWChan)
002194   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002196   6e06     movwf   0x6, 0           	MOVWF	r0x06
002198   6a07     clrf    0x7, 0           	CLRF	r0x07
00219a   0e0f     movlw   0xf              	MOVLW	HIGH(_HWChan)
00219c   2207     addwfc  0x7, 0x1, 0      	ADDWFC	r0x07, F
00219e   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
0021a0   ffe9
0021a2   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
0021a4   ffea
0021a6   c001     movff   0x1, 0xfef       	MOVFF	r0x01, INDF0
0021a8   ffef
                                           ;	.line	95; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Pins[chan]=(((unsigned int)(port-&PORTA)&7)<<4) + (bit&7);
0021aa   6a01     clrf    0x1, 0           	CLRF	r0x01
0021ac   0e23     movlw   0x23             	MOVLW	LOW(_Pins)
0021ae   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0021b0   0e04     movlw   0x4              	MOVLW	HIGH(_Pins)
0021b2   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0021b4   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0021b6   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
0021b8   0e07     movlw   0x7              	MOVLW	0x07
0021ba   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
0021bc   3802     swapf   0x2, 0, 0        	SWAPF	r0x02, W
0021be   0bf0     andlw   0xf0             	ANDLW	0xf0
0021c0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0021c2   0e07     movlw   0x7              	MOVLW	0x07
0021c4   1605     andwf   0x5, 0x1, 0      	ANDWF	r0x05, F
0021c6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0021c8   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0021ca   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0021cc   ffe9
0021ce   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0021d0   ffea
0021d2   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
0021d4   ffef
0021d6   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
0021d8   f00a
0021da   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
0021dc   f009
0021de   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
0021e0   f008
0021e2   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
0021e4   f007
0021e6   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0021e8   f006
0021ea   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0021ec   f005
0021ee   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0021f0   f004
0021f2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0021f4   f003
0021f6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0021f8   f002
0021fa   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0021fc   f001
0021fe   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002200   f000
002202   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002204   ffd9
002206   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogSelectAdc	code
                                           _analogSelectAdc:
                                           ;	.line	84; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogSelectAdc(unsigned char chan,unsigned char hwchan )
00298e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002990   ffe5
002992   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002994   ffd9
002996   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002998   ffe5
00299a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00299c   ffe5
00299e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0029a0   ffe5
0029a2   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0029a4   ffe5
0029a6   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0029a8   ffe5
0029aa   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0029ac   ffe5
0029ae   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0029b0   ffe5
0029b2   0e02     movlw   0x2              	MOVLW	0x02
0029b4   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0029b6   f000
0029b8   0e03     movlw   0x3              	MOVLW	0x03
0029ba   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0029bc   f001
                                           ;	.line	86; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitset(Selected[chan>>3],chan&7);
0029be   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
0029c0   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
0029c2   0b1f     andlw   0x1f             	ANDLW	0x1f
0029c4   6e02     movwf   0x2, 0           	MOVWF	r0x02
0029c6   6a03     clrf    0x3, 0           	CLRF	r0x03
0029c8   0e49     movlw   0x49             	MOVLW	LOW(_Selected)
0029ca   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
0029cc   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
0029ce   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0029d0   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
0029d2   ffe9
0029d4   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0029d6   ffea
0029d8   cfef     movff   0xfef, 0x4       	MOVFF	INDF0, r0x04
0029da   f004
0029dc   0e07     movlw   0x7              	MOVLW	0x07
0029de   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
0029e0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0029e2   0e01     movlw   0x1              	MOVLW	0x01
0029e4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0029e6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0029e8   e005     bz      0x29f4           	BZ	_00141_DS_
0029ea   6ce8     negf    0xe8, 0          	NEGF	WREG
0029ec   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00142_DS_:
0029ee   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
0029f0   0f01     addlw   0x1              	ADDLW	0x01
0029f2   e3fd     bnc     0x29ee           	BNC	_00142_DS_
                                           _00141_DS_:
0029f4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0029f6   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
0029f8   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
0029fa   ffe9
0029fc   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0029fe   ffea
002a00   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
002a02   ffef
                                           ;	.line	87; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	HWChan[chan]=hwchan;
002a04   0e23     movlw   0x23             	MOVLW	LOW(_HWChan)
002a06   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002a08   6e02     movwf   0x2, 0           	MOVWF	r0x02
002a0a   6a03     clrf    0x3, 0           	CLRF	r0x03
002a0c   0e0f     movlw   0xf              	MOVLW	HIGH(_HWChan)
002a0e   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
002a10   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
002a12   ffe9
002a14   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
002a16   ffea
002a18   c001     movff   0x1, 0xfef       	MOVFF	r0x01, INDF0
002a1a   ffef
                                           ;	.line	88; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Pins[chan]=255;
002a1c   6a01     clrf    0x1, 0           	CLRF	r0x01
002a1e   0e23     movlw   0x23             	MOVLW	LOW(_Pins)
002a20   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002a22   0e04     movlw   0x4              	MOVLW	HIGH(_Pins)
002a24   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002a26   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002a28   ffe9
002a2a   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
002a2c   ffea
002a2e   0eff     movlw   0xff             	MOVLW	0xff
002a30   68ef     setf    0xef, 0          	SETF	INDF0
002a32   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002a34   f006
002a36   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002a38   f005
002a3a   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002a3c   f004
002a3e   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002a40   f003
002a42   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002a44   f002
002a46   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002a48   f001
002a4a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002a4c   f000
002a4e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002a50   ffd9
002a52   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogInitTouch	code
                                           _analogInitTouch:
003c14   010f     movlb   0xf              	BANKSEL	_CTMUCONH
                                           ;	.line	78; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONH = 0x00;
003c16   6b45     clrf    0x45, 0x1        	CLRF	_CTMUCONH, B
                                           ;	.line	79; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONL = 0x90;
003c18   0e90     movlw   0x90             	MOVLW	0x90
003c1a   010f     movlb   0xf              	BANKSEL	_CTMUCONL
003c1c   6f44     movwf   0x44, 0x1        	MOVWF	_CTMUCONL, B
                                           ;	.line	80; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUICON = 0x03;			//55uA
003c1e   0e03     movlw   0x3              	MOVLW	0x03
003c20   010f     movlb   0xf              	BANKSEL	_CTMUICON
003c22   6f43     movwf   0x43, 0x1        	MOVWF	_CTMUICON, B
003c24   010f     movlb   0xf              	BANKSEL	_CTMUCONHbits
                                           ;	.line	81; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONHbits.CTMUEN = 1;	//Enable CTMU
003c26   8f45     bsf     0x45, 0x7, 0x1   	BSF	_CTMUCONHbits, 7, B
003c28   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogInit	code
                                           _analogInit:
                                           ;	.line	52; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogInit()
002422   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002424   ffe5
002426   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002428   ffe5
00242a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00242c   ffe5
00242e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002430   ffe5
002432   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002434   ffe5
                                           ;	.line	56; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<CHANNELS_GROUPS;i++) {
002436   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00107_DS_:
                                           ;	.line	57; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Selected[i]=0;
002438   0e49     movlw   0x49             	MOVLW	LOW(_Selected)
00243a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00243c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00243e   6a02     clrf    0x2, 0           	CLRF	r0x02
002440   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
002442   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002444   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002446   ffe9
002448   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00244a   ffea
00244c   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	56; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<CHANNELS_GROUPS;i++) {
00244e   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002450   0e02     movlw   0x2              	MOVLW	0x02
002452   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002454   e3f1     bnc     0x2438           	BNC	_00107_DS_
                                           ;	.line	60; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<ANALOG_MAX_CHANNELS;i++) {
002456   6a00     clrf    0, 0             	CLRF	r0x00
                                           ; ;multiply lit val:0x02 by variable r0x00 and store in r0x01
                                           _00109_DS_:
                                           ;	.line	61; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Value[i]=0;
002458   5000     movf    0, 0, 0          	MOVF	r0x00, W
00245a   0d02     mullw   0x2              	MULLW	0x02
00245c   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
00245e   6e02     movwf   0x2, 0           	MOVWF	r0x02
002460   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
002462   f001
002464   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
002466   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002468   6e03     movwf   0x3, 0           	MOVWF	r0x03
00246a   0e00     movlw   0                	MOVLW	HIGH(_Value)
00246c   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
00246e   6e04     movwf   0x4, 0           	MOVWF	r0x04
002470   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
002472   ffe9
002474   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
002476   ffea
002478   6aee     clrf    0xee, 0          	CLRF	POSTINC0
00247a   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	62; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	inValue[i]=0;
00247c   0e39     movlw   0x39             	MOVLW	LOW(_inValue)
00247e   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002480   6e03     movwf   0x3, 0           	MOVWF	r0x03
002482   0e04     movlw   0x4              	MOVLW	HIGH(_inValue)
002484   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
002486   6e04     movwf   0x4, 0           	MOVWF	r0x04
002488   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00248a   ffe9
00248c   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
00248e   ffea
002490   6aee     clrf    0xee, 0          	CLRF	POSTINC0
002492   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	63; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	oldValue[i]=0;
002494   0e59     movlw   0x59             	MOVLW	LOW(_oldValue)
002496   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002498   6e03     movwf   0x3, 0           	MOVWF	r0x03
00249a   0e04     movlw   0x4              	MOVLW	HIGH(_oldValue)
00249c   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
00249e   6e04     movwf   0x4, 0           	MOVWF	r0x04
0024a0   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0024a2   ffe9
0024a4   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0024a6   ffea
0024a8   6aee     clrf    0xee, 0          	CLRF	POSTINC0
0024aa   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	64; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Min[i]=0;
0024ac   0e93     movlw   0x93             	MOVLW	LOW(_Min)
0024ae   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0024b0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0024b2   0e04     movlw   0x4              	MOVLW	HIGH(_Min)
0024b4   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
0024b6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0024b8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0024ba   ffe9
0024bc   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0024be   ffea
0024c0   6aee     clrf    0xee, 0          	CLRF	POSTINC0
0024c2   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	65; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Max[i]=0x7FFF;
0024c4   0eb3     movlw   0xb3             	MOVLW	LOW(_Max)
0024c6   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
0024c8   0e04     movlw   0x4              	MOVLW	HIGH(_Max)
0024ca   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0024cc   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0024ce   ffe9
0024d0   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0024d2   ffea
0024d4   68ee     setf    0xee, 0          	SETF	POSTINC0
0024d6   0e7f     movlw   0x7f             	MOVLW	0x7f
0024d8   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           ;	.line	66; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Pins[i]=255;
0024da   0e23     movlw   0x23             	MOVLW	LOW(_Pins)
0024dc   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0024de   6e01     movwf   0x1, 0           	MOVWF	r0x01
0024e0   6a02     clrf    0x2, 0           	CLRF	r0x02
0024e2   0e04     movlw   0x4              	MOVLW	HIGH(_Pins)
0024e4   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0024e6   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0024e8   ffe9
0024ea   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0024ec   ffea
0024ee   68ef     setf    0xef, 0          	SETF	INDF0
                                           ;	.line	60; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<ANALOG_MAX_CHANNELS;i++) {
0024f0   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0024f2   0e10     movlw   0x10             	MOVLW	0x10
0024f4   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0024f6   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
0024f8   d7af     bra     0x2458           	BRA	_00109_DS_
                                           ;	.line	69; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON2=0b10101111; //right justified, 12 AD, RC
0024fa   0eaf     movlw   0xaf             	MOVLW	0xaf
0024fc   6ec0     movwf   0xc0, 0          	MOVWF	_ADCON2
                                           ;	.line	70; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON1=0; //0->Vdd
0024fe   6ac1     clrf    0xc1, 0          	CLRF	_ADCON1
                                           ;	.line	71; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON0=1; //on, channel 0
002500   0e01     movlw   0x1              	MOVLW	0x01
002502   6ec2     movwf   0xc2, 0          	MOVWF	_ADCON0
                                           ;	.line	73; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON0bits.GO=1; // go !
002504   82c2     bsf     0xc2, 0x1, 0     	BSF	_ADCON0bits, 1
002506   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002508   f004
00250a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00250c   f003
00250e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002510   f002
002512   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002514   f001
002516   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002518   f000
00251a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
00251c   2043     addwfc  0x43, 0, 0       	DB	0x43, 0x20, 0x41, 0x20, 0x25, 0x64, 0x20, 0x25, 0x64, 0x0a, 0x00
00251e   2041     addwfc  0x41, 0, 0       
002520   6425     cpfsgt  0x25, 0          
002522   2520     addwf   0x20, 0, 0x1     
002524   0a64     xorlw   0x64             
002526   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 4350 (0x10fe) bytes ( 3.32%)
                                           ;           	 2175 (0x087f) words
                                           ; udata size:	  226 (0x00e2) bytes ( 6.14%)
                                           ; access size:	   13 (0x000d) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	___uflags
                                           	global	__entry
                                           	global	__startup
                                           	global	__do_cinit
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_stack
                                           	extern	_stack_end
                                           	extern	_TBLPTRU
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRL
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_TABLAT
                                           	extern	_POSTINC0
                                           	extern	_POSTDEC0
                                           	extern	_main
                                           	extern	_cinit
                                           
                                           
                                           	idata
                                           ___uflags	db	0x00
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_crt0iz_rloc___entry	code	0X000000
                                           __entry:
000000   ef44     goto    0x3a88           	goto	__startup 
000002   f01d
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_crt0iz_rloc___do_cinit	code
                                           __do_cinit:
                                           	;	TBLPTR = &cinit
002dd0   0e84     movlw   0x84             	movlw	low(_cinit)
002dd2   6ef6     movwf   0xf6, 0          	movwf	_TBLPTRL
002dd4   0e3c     movlw   0x3c             	movlw	high(_cinit)
002dd6   6ef7     movwf   0xf7, 0          	movwf	_TBLPTRH
002dd8   0e00     movlw   0                	movlw	upper(_cinit)
002dda   6ef8     movwf   0xf8, 0          	movwf	_TBLPTRU
                                           	;	0x05 = cinit.num_init
                                           	;	movlb 0x07
002ddc   0009     tblrd   *+               	tblrd*+
002dde   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002de0   6e05     movwf   0x5, 0           	movwf	0x05
002de2   0009     tblrd   *+               	tblrd*+
002de4   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002de6   6e06     movwf   0x6, 0           	movwf	0x05 +1
                                           	;	while (0x05) {
                                           test:
002de8   e104     bnz     0x2df2           	bnz	cont1 ;;done1
002dea   6705     tstfsz  0x5, 0x1         	tstfsz	0x05, 1
002dec   d002     bra     0x2df2           	bra	cont1
                                           done1:
002dee   ef35     goto    0x2e6a           	goto	done
002df0   f017
                                           cont1:
                                           	;	Count down so we only have to look up the data in _cinit once.
                                           	;	At this point we know that TBLPTR points to the top of the current
                                           	;	entry in _cinit, so we can just start reading the from, to, and
                                           	;	size values.
                                           	;	read the source address low
002df2   0009     tblrd   *+               	tblrd*+
002df4   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002df6   6e00     movwf   0, 0             	movwf	0x00
                                           	;	source address high
002df8   0009     tblrd   *+               	tblrd*+
002dfa   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002dfc   6e01     movwf   0x1, 0           	movwf	0x00 + 1
                                           	;	source address upper
002dfe   0009     tblrd   *+               	tblrd*+
002e00   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002e02   6e02     movwf   0x2, 0           	movwf	0x00 + 2
                                           	;	skip a byte since it is stored as a 32bit int
002e04   0009     tblrd   *+               	tblrd*+
                                           	;	read the destination address directly into FSR0
                                           	;	destination address low
002e06   0009     tblrd   *+               	tblrd*+
002e08   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002e0a   6ee9     movwf   0xe9, 0          	movwf	_FSR0L
                                           	;	destination address high
002e0c   0009     tblrd   *+               	tblrd*+
002e0e   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002e10   6eea     movwf   0xea, 0          	movwf	_FSR0H
                                           	;	skip two bytes since it is stored as a 32bit int
002e12   0009     tblrd   *+               	tblrd*+
002e14   0009     tblrd   *+               	tblrd*+
                                           	;	read the size of data to transfer to destination address
002e16   0009     tblrd   *+               	tblrd*+
002e18   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002e1a   6e03     movwf   0x3, 0           	movwf	0x03
002e1c   0009     tblrd   *+               	tblrd*+
002e1e   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002e20   6e04     movwf   0x4, 0           	movwf	0x03 +1
                                           	;	skip two bytes since it is stored as a 32bit int
002e22   0009     tblrd   *+               	tblrd*+
002e24   0009     tblrd   *+               	tblrd*+
                                           	;	0x00 = 0x07 ->from;
                                           	;	FSR0 = 0x07 ->to;
                                           	;	0x03 = (unsigned short) 0x07 ->size;
                                           	;	the table pointer now points to the next entry. Save it
                                           	;	off since we will be using the table pointer to do the copying
                                           	;	for the entry
                                           	;	0x07 = TBLPTR
002e26   cff6     movff   0xff6, 0x7       	movff	_TBLPTRL, 0x07
002e28   f007
002e2a   cff7     movff   0xff7, 0x8       	movff	_TBLPTRH, 0x07 + 1
002e2c   f008
002e2e   cff8     movff   0xff8, 0x9       	movff	_TBLPTRU, 0x07 + 2
002e30   f009
                                           	;	now assign the source address to the table pointer
                                           	;	TBLPTR = 0x00
002e32   c000     movff   0, 0xff6         	movff	0x00, _TBLPTRL
002e34   fff6
002e36   c001     movff   0x1, 0xff7       	movff	0x00 + 1, _TBLPTRH
002e38   fff7
002e3a   c002     movff   0x2, 0xff8       	movff	0x00 + 2, _TBLPTRU
002e3c   fff8
                                           	;	do the copy loop
                                           	;	determine if we have any more bytes to copy
                                           	;	movlb 0x03
002e3e   5003     movf    0x3, 0, 0        	movf	0x03, w
                                           copy_loop:
002e40   e102     bnz     0x2e46           	bnz	copy_one_byte ; copy_one_byte
002e42   5004     movf    0x4, 0, 0        	movf	0x03 + 1, w
002e44   e007     bz      0x2e54           	bz	done_copying
                                           copy_one_byte:
002e46   0009     tblrd   *+               	tblrd*+
002e48   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
002e4a   6eee     movwf   0xee, 0          	movwf	_POSTINC0
                                           	;	decrement byte counter
002e4c   0603     decf    0x3, 0x1, 0      	decf	0x03, f
002e4e   e2f8     bc      0x2e40           	bc	copy_loop ; copy_loop
002e50   0604     decf    0x4, 0x1, 0      	decf	0x03 + 1, f
002e52   d7f9     bra     0x2e46           	bra	copy_one_byte
                                           done_copying:
                                           	;	restore the table pointer for the next entry
                                           	;	TBLPTR = 0x07
002e54   c007     movff   0x7, 0xff6       	movff	0x07, _TBLPTRL
002e56   fff6
002e58   c008     movff   0x8, 0xff7       	movff	0x07 + 1, _TBLPTRH
002e5a   fff7
002e5c   c009     movff   0x9, 0xff8       	movff	0x07 + 2, _TBLPTRU
002e5e   fff8
002e60   0605     decf    0x5, 0x1, 0      	decf	0x05, f
002e62   e201     bc      0x2e66           	bc	do_next
002e64   0606     decf    0x6, 0x1, 0      	decf	0x05 + 1, f
                                           do_next:
                                           	;	next entry...
                                           	;	_do_cinit_curr_entry--;
002e66   eff4     goto    0x2de8           	goto	test;
002e68   f016
                                           	;	emit done label
                                           done:
002e6a   0012     return  0                	return
                                           	
                                           ; ; Starting pCode block
                                           S_crt0iz_rloc___startup	code
                                           __startup:
003a88   ee18     lfsr    0x1, 0x8ff       	lfsr	1, _stack_end
003a8a   f0ff
003a8c   ee28     lfsr    0x2, 0x8ff       	lfsr	2, _stack_end
003a8e   f0ff
003a90   6af8     clrf    0xf8, 0          	clrf	_TBLPTRU, 0
003a92   8ea6     bsf     0xa6, 0x7, 0     	bsf	0xa6, 7, 0
003a94   9ca6     bcf     0xa6, 0x6, 0     	bcf	0xa6, 6, 0
                                           	
                                           	;	movlw 0xff
                                           	;	movwf _FSR0L, 0
003a96   68e9     setf    0xe9, 0          	setf	_FSR0L
003a98   0e0e     movlw   0xe              	movlw	0x0e
003a9a   6eea     movwf   0xea, 0          	movwf	_FSR0H, 0
                                           	;	movlw 1
                                           	;	movwf 0x00, 0
003a9c   6800     setf    0, 0             	setf	0x00
003a9e   0e00     movlw   0                	movlw	0x00
                                           clear_loop:
003aa0   6aed     clrf    0xed, 0          	clrf	_POSTDEC0
003aa2   5000     movf    0, 0, 0          	movf	0x00, w
003aa4   e1fd     bnz     0x3aa0           	bnz	clear_loop
                                           	
                                           ;	.line	107; C:/Users/sarto/Documents/Pd/externals/Fraise/core/crt0iz-rloc.c	_do_cinit();
003aa6   ece8     call    0x2dd0, 0        	CALL	__do_cinit
003aa8   f016
                                           ;	.line	110; C:/Users/sarto/Documents/Pd/externals/Fraise/core/crt0iz-rloc.c	main();
003aaa   ec06     call    0xc, 0           	CALL	_main
003aac   f000
                                           _00110_DS_:
                                           ;	.line	114; C:/Users/sarto/Documents/Pd/externals/Fraise/core/crt0iz-rloc.c	goto loop;
003aae   d7ff     bra     0x3aae           	BRA	_00110_DS_
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  276 (0x0114) bytes ( 0.21%)
                                           ;           	  138 (0x008a) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
