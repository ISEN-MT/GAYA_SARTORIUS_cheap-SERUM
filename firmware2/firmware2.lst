gplink-1.0.0 #932 (Jan 21 2013)
Copyright (c) 1998-2012 gputils project
Listing File Generated: 4-9-2021  17:01:42
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_Generic26kSetup
                                           	global	_Setup
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_boardconfig__Setup	code
                                           _Setup:
                                           ;	.line	24; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/boardconfig.c	Generic26kSetup();
004544   ec44     call    0x4488, 0        	CALL	_Generic26kSetup
004546   f022
004548   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_boardconfig__Generic26kSetup	code
                                           _Generic26kSetup:
                                           ;	.line	24; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	OSCCON=0b01110000;
004488   0e70     movlw   0x70             	MOVLW	0x70
00448a   6ed3     movwf   0xd3, 0          	MOVWF	_OSCCON
                                           ;	.line	25; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	OSCTUNEbits.PLLEN=1;
00448c   8c9b     bsf     0x9b, 0x6, 0     	BSF	_OSCTUNEbits, 6
                                           ; #	MOVLW	0xff
                                           ; #	MOVWF	_TRISA
                                           ; #	MOVLW	0xff
                                           ;	.line	29; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISA=0xff;
00448e   0eff     movlw   0xff             	MOVLW	0xff
                                           ;	.line	30; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISB=0xff;
004490   6892     setf    0x92, 0          	SETF	_TRISA
                                           ;	.line	31; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISC=0xff;
004492   6893     setf    0x93, 0          	SETF	_TRISB
                                           ; #	MOVLW	0xff
                                           ; #	MOVWF	_TRISC
                                           ; #	MOVLW	0xff
                                           ;	.line	32; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	TRISE=0xff;
004494   6894     setf    0x94, 0          	SETF	_TRISC
004496   6896     setf    0x96, 0          	SETF	_TRISE
                                           ;	.line	33; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	IOCB=0; //disable all 4 portB "interrupt on change"
004498   6a62     clrf    0x62, 0          	CLRF	_IOCB
                                           ;	.line	34; C:/Users/sarto/Documents/Pd/externals/Fraise/boards/Versa2/../generic26kconfig.c	INTCON2bits.RBPU=0; //enable PORTB weak pullups
00449a   9ef1     bcf     0xf1, 0x7, 0     	BCF	_INTCON2bits, 7
00449c   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	   28 (0x001c) bytes ( 0.02%)
                                           ;           	   14 (0x000e) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_setup
                                           	global	_loop
                                           	global	_fraiseReceiveChar
                                           	global	_mainDelay
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_printf
                                           	extern	_putchar
                                           	extern	_time
                                           	extern	_fraiseService
                                           	extern	_fraiseGetChar
                                           	extern	_fraiseGetLen
                                           	extern	_fruitInit
                                           	extern	_FSLP_Init
                                           	extern	_analogSelectAdc
                                           	extern	_analogInit
                                           	extern	_analogService
                                           	extern	_analogSend
                                           	extern	_switchSelectHW
                                           	extern	_switchInit
                                           	extern	_switchService
                                           	extern	_switchSend
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x05	res	1
                                           
                                           udata_main_0	udata
                                           _mainDelay	res	4
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__fraiseReceiveChar	code
                                           _fraiseReceiveChar:
                                           ;	.line	59; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	void fraiseReceiveChar() // receive text
0036cc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0036ce   ffe5
0036d0   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0036d2   ffe5
                                           ;	.line	63; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	c=fraiseGetChar();
0036d4   ec29     call    0x3e52, 0        	CALL	_fraiseGetChar
0036d6   f01f
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	64; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	if(c=='L'){		//switch LED on/off 
0036d8   6e00     movwf   0, 0             	MOVWF	r0x00
0036da   0a4c     xorlw   0x4c             	XORLW	0x4c
0036dc   e108     bnz     0x36ee           	BNZ	_00200_DS_
                                           ;	.line	65; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	c=fraiseGetChar();
0036de   ec29     call    0x3e52, 0        	CALL	_fraiseGetChar
0036e0   f01f
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	66; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	digitalWrite(LED, c!='0');		
0036e2   0a30     xorlw   0x30             	XORLW	0x30
0036e4   e002     bz      0x36ea           	BZ	_00180_DS_
0036e6   828b     bsf     0x8b, 0x1, 0     	BSF	_LATCbits, 1
0036e8   d034     bra     0x3752           	BRA	_00202_DS_
                                           _00180_DS_:
0036ea   928b     bcf     0x8b, 0x1, 0     	BCF	_LATCbits, 1
0036ec   d032     bra     0x3752           	BRA	_00202_DS_
                                           _00200_DS_:
                                           ;	.line	68; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	else if (c == 'O') {		//switch LED on/off 
0036ee   5000     movf    0, 0, 0          	MOVF	r0x00, W
0036f0   0a4f     xorlw   0x4f             	XORLW	0x4f
0036f2   e108     bnz     0x3704           	BNZ	_00197_DS_
                                           ;	.line	69; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	c = fraiseGetChar();
0036f4   ec29     call    0x3e52, 0        	CALL	_fraiseGetChar
0036f6   f01f
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	70; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	digitalWrite(K11, c != '0');
0036f8   0a30     xorlw   0x30             	XORLW	0x30
0036fa   e002     bz      0x3700           	BZ	_00186_DS_
0036fc   8c8a     bsf     0x8a, 0x6, 0     	BSF	_LATBbits, 6
0036fe   d029     bra     0x3752           	BRA	_00202_DS_
                                           _00186_DS_:
003700   9c8a     bcf     0x8a, 0x6, 0     	BCF	_LATBbits, 6
003702   d027     bra     0x3752           	BRA	_00202_DS_
                                           _00197_DS_:
                                           ;	.line	72; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	else if(c=='E') { 	// echo text (send it back to host)
003704   5000     movf    0, 0, 0          	MOVF	r0x00, W
003706   0a45     xorlw   0x45             	XORLW	0x45
003708   e124     bnz     0x3752           	BNZ	_00202_DS_
                                           ;	.line	73; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	printf("C");
00370a   0e00     movlw   0                	MOVLW	UPPER(___str_0)
00370c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00370e   0e14     movlw   0x14             	MOVLW	HIGH(___str_0)
003710   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003712   0e06     movlw   0x6              	MOVLW	LOW(___str_0)
003714   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003716   ecfc     call    0x39f8, 0        	CALL	_printf
003718   f01c
00371a   0e03     movlw   0x3              	MOVLW	0x03
00371c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	74; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	c = fraiseGetLen(); 			// get length of current packet
00371e   eca8     call    0x4550, 0        	CALL	_fraiseGetLen
003720   f022
003722   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _00191_DS_:
                                           ;	.line	75; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	while(c--) printf("%c",fraiseGetChar());// send each received byte
003724   c000     movff   0, 0x1           	MOVFF	r0x00, r0x01
003726   f001
003728   0600     decf    0, 0x1, 0        	DECF	r0x00, F
00372a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00372c   e00f     bz      0x374c           	BZ	_00193_DS_
00372e   ec29     call    0x3e52, 0        	CALL	_fraiseGetChar
003730   f01f
003732   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003734   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003736   0e00     movlw   0                	MOVLW	UPPER(___str_1)
003738   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00373a   0e14     movlw   0x14             	MOVLW	HIGH(___str_1)
00373c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00373e   0e08     movlw   0x8              	MOVLW	LOW(___str_1)
003740   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003742   ecfc     call    0x39f8, 0        	CALL	_printf
003744   f01c
003746   0e05     movlw   0x5              	MOVLW	0x05
003748   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00374a   d7ec     bra     0x3724           	BRA	_00191_DS_
                                           _00193_DS_:
                                           ;	.line	76; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	putchar('\n');				// end of line
00374c   0e0a     movlw   0xa              	MOVLW	0x0a
00374e   ec9d     call    0x3d3a, 0        	CALL	_putchar
003750   f01e
                                           _00202_DS_:
003752   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003754   f001
003756   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003758   f000
00375a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	44; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	void loop() {
0033c4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0033c6   ffe5
0033c8   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0033ca   ffe5
0033cc   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0033ce   ffe5
0033d0   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0033d2   ffe5
                                           ;	.line	46; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	fraiseService();	// listen to Fraise events
0033d4   ecb0     call    0x2560, 0        	CALL	_fraiseService
0033d6   f012
                                           ;	.line	47; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	switchService();  analogService();	// analog management routine
0033d8   ecca     call    0x1f94, 0        	CALL	_switchService
0033da   f00f
0033dc   ec54     call    0xca8, 0         	CALL	_analogService
0033de   f006
                                           ;	.line	49; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	if(delayFinished(mainDelay)) // when mainDelay triggers :
0033e0   ecff     call    0x3dfe, 0        	CALL	_time
0033e2   f01e
0033e4   6e00     movwf   0, 0             	MOVWF	r0x00
0033e6   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0033e8   f001
0033ea   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
0033ec   f002
0033ee   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
0033f0   f003
0033f2   0104     movlb   0x4              	BANKSEL	_mainDelay
0033f4   5133     movf    0x33, 0, 0x1     	MOVF	_mainDelay, W, B
0033f6   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
                                           ; removed redundant BANKSEL
0033f8   5134     movf    0x34, 0, 0x1     	MOVF	(_mainDelay + 1), W, B
0033fa   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
                                           ; removed redundant BANKSEL
0033fc   5135     movf    0x35, 0, 0x1     	MOVF	(_mainDelay + 2), W, B
0033fe   5a02     subwfb  0x2, 0x1, 0      	SUBWFB	r0x02, F
                                           ; removed redundant BANKSEL
003400   5136     movf    0x36, 0, 0x1     	MOVF	(_mainDelay + 3), W, B
003402   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
003404   9e03     bcf     0x3, 0x7, 0      	BCF	r0x03, 7
003406   0e3f     movlw   0x3f             	MOVLW	0x3f
003408   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
00340a   e108     bnz     0x341c           	BNZ	_00174_DS_
00340c   0eff     movlw   0xff             	MOVLW	0xff
00340e   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
003410   e105     bnz     0x341c           	BNZ	_00174_DS_
003412   0eff     movlw   0xff             	MOVLW	0xff
003414   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
003416   e102     bnz     0x341c           	BNZ	_00174_DS_
003418   0eff     movlw   0xff             	MOVLW	0xff
00341a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00174_DS_:
00341c   e21b     bc      0x3454           	BC	_00165_DS_
                                           ;	.line	51; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	delayStart(mainDelay, 5000); 	// re-init mainDelay
00341e   ecff     call    0x3dfe, 0        	CALL	_time
003420   f01e
003422   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003424   f001
003426   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
003428   f002
00342a   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
00342c   f003
00342e   0f88     addlw   0x88             	ADDLW	0x88
003430   0104     movlb   0x4              	BANKSEL	_mainDelay
003432   6f33     movwf   0x33, 0x1        	MOVWF	_mainDelay, B
003434   0e13     movlw   0x13             	MOVLW	0x13
003436   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
                                           ; removed redundant BANKSEL
003438   6f34     movwf   0x34, 0x1        	MOVWF	(_mainDelay + 1), B
00343a   0e00     movlw   0                	MOVLW	0x00
00343c   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
                                           ; removed redundant BANKSEL
00343e   6f35     movwf   0x35, 0x1        	MOVWF	(_mainDelay + 2), B
003440   0e00     movlw   0                	MOVLW	0x00
003442   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
003444   6f36     movwf   0x36, 0x1        	MOVWF	(_mainDelay + 3), B
                                           ;	.line	52; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	if(!switchSend()) analogSend();		// send analog channels that changed
003446   ec55     call    0x1aaa, 0        	CALL	_switchSend
003448   f00d
00344a   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00165_DS_
                                           ; #	CALL	_analogSend
                                           ; #; info ==> [localregs] exit begin
                                           
                                           ; #	MOVFF	PREINC1, r0x03
00344c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00344e   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
003450   ec0e     call    0x81c, 0         	CALL	_analogSend
003452   f004
                                           _00165_DS_:
003454   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003456   f003
003458   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00345a   f002
00345c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00345e   f001
003460   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003462   f000
003464   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	15; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	void setup(void) {	
001108   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00110a   ffe5
00110c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00110e   ffe5
001110   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
001112   ffe5
001114   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
001116   ffe5
001118   c004     movff   0x4, 0xfe5       	MOVFF	r0x05, POSTDEC1
00111a   ffe5
                                           ;	.line	17; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	fruitInit();
00111c   ec99     call    0x4532, 0        	CALL	_fruitInit
00111e   f022
                                           ;	.line	19; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	pinModeDigitalOut(LED); 	// set the LED pin mode to digital out
001120   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	20; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	digitalClear(LED);		// clear the LED
001122   928b     bcf     0x8b, 0x1, 0     	BCF	_LATCbits, 1
                                           ;	.line	21; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	delayStart(mainDelay, 5000); 	// init the mainDelay to 5 ms
001124   ecff     call    0x3dfe, 0        	CALL	_time
001126   f01e
001128   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00112a   f001
00112c   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
00112e   f002
001130   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
001132   f003
001134   0f88     addlw   0x88             	ADDLW	0x88
001136   0104     movlb   0x4              	BANKSEL	_mainDelay
001138   6f33     movwf   0x33, 0x1        	MOVWF	_mainDelay, B
00113a   0e13     movlw   0x13             	MOVLW	0x13
00113c   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
                                           ; removed redundant BANKSEL
00113e   6f34     movwf   0x34, 0x1        	MOVWF	(_mainDelay + 1), B
001140   0e00     movlw   0                	MOVLW	0x00
001142   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
                                           ; removed redundant BANKSEL
001144   6f35     movwf   0x35, 0x1        	MOVWF	(_mainDelay + 2), B
001146   0e00     movlw   0                	MOVLW	0x00
001148   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
00114a   6f36     movwf   0x36, 0x1        	MOVWF	(_mainDelay + 3), B
                                           ;	.line	23; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	pinModeDigitalOut(K11); 	
00114c   9c93     bcf     0x93, 0x6, 0     	BCF	_TRISBbits, 6
                                           ;	.line	24; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	digitalClear(K11);
00114e   9c8a     bcf     0x8a, 0x6, 0     	BCF	_LATBbits, 6
                                           ;	.line	27; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	analogInit();
001150   ec59     call    0x2ab2, 0        	CALL	_analogInit
001152   f015
                                           ;	.line	28; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	switchInit();
001154   ecae     call    0x375c, 0        	CALL	_switchInit
001156   f01b
                                           ;	.line	32; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	analogSelect(6, K6); //filter resonnance
001158   8494     bsf     0x94, 0x2, 0     	BSF	_TRISCbits, 2
00115a   0e82     movlw   0x82             	MOVLW	LOW(_PORTC)
00115c   6e00     movwf   0, 0             	MOVWF	r0x00
00115e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTC)
001160   6e01     movwf   0x1, 0           	MOVWF	r0x01
001162   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001164   6e03     movwf   0x3, 0           	MOVWF	r0x03
001166   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001168   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00116a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00116c   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00116e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001170   6e03     movwf   0x3, 0           	MOVWF	r0x03
001172   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001174   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
001176   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001178   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
00117a   0e82     movlw   0x82             	MOVLW	LOW(_PORTC)
00117c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00117e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTC)
001180   6e03     movwf   0x3, 0           	MOVWF	r0x03
001182   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001184   6e04     movwf   0x4, 0           	MOVWF	r0x05
001186   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001188   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
00118a   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
00118c   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
00118e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001190   6e04     movwf   0x4, 0           	MOVWF	r0x05
001192   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001194   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
001196   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
001198   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
00119a   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
00119c   ffe9
00119e   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0011a0   ffea
0011a2   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
0011a4   f002
0011a6   8402     bsf     0x2, 0x2, 0      	BSF	r0x02, 2
0011a8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0011aa   ffe9
0011ac   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0011ae   ffea
0011b0   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
0011b2   ffef
0011b4   0e0e     movlw   0xe              	MOVLW	0x0e
0011b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011b8   0e06     movlw   0x6              	MOVLW	0x06
0011ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0011bc   ec0f     call    0x301e, 0        	CALL	_analogSelectAdc
0011be   f018
0011c0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0011c2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	33; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	analogSelect(7, K7); //filter cutoff
0011c4   8894     bsf     0x94, 0x4, 0     	BSF	_TRISCbits, 4
0011c6   0e82     movlw   0x82             	MOVLW	LOW(_PORTC)
0011c8   6e00     movwf   0, 0             	MOVWF	r0x00
0011ca   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTC)
0011cc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0011ce   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0011d0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0011d2   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0011d4   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0011d6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0011d8   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0011da   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0011dc   6e03     movwf   0x3, 0           	MOVWF	r0x03
0011de   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0011e0   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
0011e2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0011e4   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
0011e6   0e82     movlw   0x82             	MOVLW	LOW(_PORTC)
0011e8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0011ea   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTC)
0011ec   6e03     movwf   0x3, 0           	MOVWF	r0x03
0011ee   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0011f0   6e04     movwf   0x4, 0           	MOVWF	r0x05
0011f2   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0011f4   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
0011f6   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
0011f8   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0011fa   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0011fc   6e04     movwf   0x4, 0           	MOVWF	r0x05
0011fe   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001200   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
001202   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
001204   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
001206   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001208   ffe9
00120a   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
00120c   ffea
00120e   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
001210   f002
001212   8802     bsf     0x2, 0x4, 0      	BSF	r0x02, 4
001214   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001216   ffe9
001218   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00121a   ffea
00121c   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
00121e   ffef
001220   0e10     movlw   0x10             	MOVLW	0x10
001222   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001224   0e07     movlw   0x7              	MOVLW	0x07
001226   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001228   ec0f     call    0x301e, 0        	CALL	_analogSelectAdc
00122a   f018
00122c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00122e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	34; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	analogSelect(8, K8); //Master 1
001230   8a94     bsf     0x94, 0x5, 0     	BSF	_TRISCbits, 5
001232   0e82     movlw   0x82             	MOVLW	LOW(_PORTC)
001234   6e00     movwf   0, 0             	MOVWF	r0x00
001236   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTC)
001238   6e01     movwf   0x1, 0           	MOVWF	r0x01
00123a   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
00123c   6e03     movwf   0x3, 0           	MOVWF	r0x03
00123e   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001240   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
001242   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001244   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
001246   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001248   6e03     movwf   0x3, 0           	MOVWF	r0x03
00124a   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
00124c   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
00124e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001250   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
001252   0e82     movlw   0x82             	MOVLW	LOW(_PORTC)
001254   6e02     movwf   0x2, 0           	MOVWF	r0x02
001256   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTC)
001258   6e03     movwf   0x3, 0           	MOVWF	r0x03
00125a   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
00125c   6e04     movwf   0x4, 0           	MOVWF	r0x05
00125e   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001260   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
001262   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
001264   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
001266   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001268   6e04     movwf   0x4, 0           	MOVWF	r0x05
00126a   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
00126c   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
00126e   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
001270   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
001272   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001274   ffe9
001276   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001278   ffea
00127a   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
00127c   f002
00127e   8a02     bsf     0x2, 0x5, 0      	BSF	r0x02, 5
001280   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001282   ffe9
001284   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001286   ffea
001288   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
00128a   ffef
00128c   0e11     movlw   0x11             	MOVLW	0x11
00128e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001290   0e08     movlw   0x8              	MOVLW	0x08
001292   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001294   ec0f     call    0x301e, 0        	CALL	_analogSelectAdc
001296   f018
001298   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00129a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	35; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	analogSelect(9, K9); //Master 2
00129c   8493     bsf     0x93, 0x2, 0     	BSF	_TRISBbits, 2
00129e   0e81     movlw   0x81             	MOVLW	LOW(_PORTB)
0012a0   6e00     movwf   0, 0             	MOVWF	r0x00
0012a2   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTB)
0012a4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0012a6   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0012a8   6e03     movwf   0x3, 0           	MOVWF	r0x03
0012aa   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0012ac   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0012ae   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0012b0   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0012b2   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0012b4   6e03     movwf   0x3, 0           	MOVWF	r0x03
0012b6   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0012b8   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
0012ba   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0012bc   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
0012be   0e81     movlw   0x81             	MOVLW	LOW(_PORTB)
0012c0   6e02     movwf   0x2, 0           	MOVWF	r0x02
0012c2   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTB)
0012c4   6e03     movwf   0x3, 0           	MOVWF	r0x03
0012c6   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0012c8   6e04     movwf   0x4, 0           	MOVWF	r0x05
0012ca   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0012cc   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
0012ce   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
0012d0   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0012d2   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0012d4   6e04     movwf   0x4, 0           	MOVWF	r0x05
0012d6   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0012d8   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
0012da   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
0012dc   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
0012de   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
0012e0   ffe9
0012e2   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0012e4   ffea
0012e6   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
0012e8   f002
0012ea   8402     bsf     0x2, 0x2, 0      	BSF	r0x02, 2
0012ec   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0012ee   ffe9
0012f0   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0012f2   ffea
0012f4   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
0012f6   ffef
0012f8   0e08     movlw   0x8              	MOVLW	0x08
0012fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0012fc   0e09     movlw   0x9              	MOVLW	0x09
0012fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001300   ec0f     call    0x301e, 0        	CALL	_analogSelectAdc
001302   f018
001304   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001306   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	36; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	analogSelect(10, K10); //filter type
001308   8693     bsf     0x93, 0x3, 0     	BSF	_TRISBbits, 3
00130a   0e81     movlw   0x81             	MOVLW	LOW(_PORTB)
00130c   6e00     movwf   0, 0             	MOVWF	r0x00
00130e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTB)
001310   6e01     movwf   0x1, 0           	MOVWF	r0x01
001312   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001314   6e03     movwf   0x3, 0           	MOVWF	r0x03
001316   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001318   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00131a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00131c   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00131e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001320   6e03     movwf   0x3, 0           	MOVWF	r0x03
001322   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001324   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
001326   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001328   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
00132a   0e81     movlw   0x81             	MOVLW	LOW(_PORTB)
00132c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00132e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTB)
001330   6e03     movwf   0x3, 0           	MOVWF	r0x03
001332   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001334   6e04     movwf   0x4, 0           	MOVWF	r0x05
001336   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001338   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
00133a   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
00133c   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
00133e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001340   6e04     movwf   0x4, 0           	MOVWF	r0x05
001342   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001344   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
001346   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
001348   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
00134a   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
00134c   ffe9
00134e   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001350   ffea
001352   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
001354   f002
001356   8602     bsf     0x2, 0x3, 0      	BSF	r0x02, 3
001358   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00135a   ffe9
00135c   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00135e   ffea
001360   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
001362   ffef
001364   0e09     movlw   0x9              	MOVLW	0x09
001366   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001368   0e0a     movlw   0xa              	MOVLW	0x0a
00136a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00136c   ec0f     call    0x301e, 0        	CALL	_analogSelectAdc
00136e   f018
001370   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001372   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	38; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	switchSelect(0, K12); //filter type
001374   8e93     bsf     0x93, 0x7, 0     	BSF	_TRISBbits, 7
001376   0e81     movlw   0x81             	MOVLW	LOW(_PORTB)
001378   6e00     movwf   0, 0             	MOVWF	r0x00
00137a   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTB)
00137c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00137e   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001380   6e03     movwf   0x3, 0           	MOVWF	r0x03
001382   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001384   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
001386   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001388   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00138a   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
00138c   6e03     movwf   0x3, 0           	MOVWF	r0x03
00138e   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001390   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
001392   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001394   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
001396   0e81     movlw   0x81             	MOVLW	LOW(_PORTB)
001398   6e02     movwf   0x2, 0           	MOVWF	r0x02
00139a   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTB)
00139c   6e03     movwf   0x3, 0           	MOVWF	r0x03
00139e   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0013a0   6e04     movwf   0x4, 0           	MOVWF	r0x05
0013a2   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0013a4   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
0013a6   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
0013a8   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0013aa   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0013ac   6e04     movwf   0x4, 0           	MOVWF	r0x05
0013ae   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0013b0   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
0013b2   5004     movf    0x4, 0, 0        	MOVF	r0x05, W
0013b4   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
0013b6   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
0013b8   ffe9
0013ba   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0013bc   ffea
0013be   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
0013c0   f002
0013c2   9e02     bcf     0x2, 0x7, 0      	BCF	r0x02, 7
0013c4   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0013c6   ffe9
0013c8   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0013ca   ffea
0013cc   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
0013ce   ffef
0013d0   0e07     movlw   0x7              	MOVLW	0x07
0013d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0013d4   0e80     movlw   0x80             	MOVLW	0x80
0013d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0013d8   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTB)
0013da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0013dc   0e81     movlw   0x81             	MOVLW	LOW(_PORTB)
0013de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0013e0   0e00     movlw   0                	MOVLW	0x00
0013e2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0013e4   ecf5     call    0x37ea, 0        	CALL	_switchSelectHW
0013e6   f01b
0013e8   0e05     movlw   0x5              	MOVLW	0x05
0013ea   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	41; C:/Users/sarto/Documents/Travail/M1/M&T/GAYA_SARTORIUS_cheap-SERUM/firmware2/main.c	FSLP_Init();
0013ec   ec18     call    0x1e30, 0        	CALL	_FSLP_Init
0013ee   f00f
0013f0   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x05
0013f2   f004
0013f4   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0013f6   f003
0013f8   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0013fa   f002
0013fc   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0013fe   f001
001400   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
001402   f000
001404   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
001406   0043     dw      0x43             	DB	0x43, 0x00
                                           ; ; Starting pCode block
                                           ___str_1:
001408   6325     cpfseq  0x25, 0x1        	DB	0x25, 0x63, 0x00
00140a   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 1076 (0x0434) bytes ( 0.82%)
                                           ;           	  538 (0x021a) words
                                           ; udata size:	    4 (0x0004) bytes ( 0.11%)
                                           ; access size:	    5 (0x0005) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_fruitInit
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_coreInit
                                           	extern	_fraiseInit
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_fruit__fruitInit	code
                                           _fruitInit:
                                           ;	.line	29; C:/Users/sarto/Documents/Pd/externals/Fraise/fruit/fruit.c	coreInit();	
004532   ec53     call    0x3ea6, 0        	CALL	_coreInit
004534   f01f
                                           ;	.line	30; C:/Users/sarto/Documents/Pd/externals/Fraise/fruit/fruit.c	fraiseInit();
004536   ecce     call    0x3d9c, 0        	CALL	_fraiseInit
004538   f01e
00453a   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	   10 (0x000a) bytes ( 0.01%)
                                           ;           	    5 (0x0005) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_EEdeclareChar
                                           	global	_EEdeclareInt
                                           	global	_EEdeclareLong
                                           	global	_EEwriteMain
                                           	global	_EEreadMain
                                           	global	_eeaddress
                                           	global	_eeoperation
                                           	global	_EELoadChar
                                           	global	_EELoadInt
                                           	global	_EELoadLong
                                           	global	_EESaveChar
                                           	global	_EESaveInt
                                           	global	_EESaveLong
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrput1
                                           	extern	__gptrget1
                                           	extern	__gptrput2
                                           	extern	__gptrget2
                                           	extern	__gptrput4
                                           	extern	__gptrget4
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_eeWriteByte
                                           	extern	_eeReadByte
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           FSR0L	equ	0xfe9
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           
                                           udata_eeparams_0	udata
                                           _eeaddress	res	2
                                           
                                           udata_eeparams_1	udata
                                           _eeoperation	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_eeparams__EEreadMain	code
                                           _EEreadMain:
004516   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	112; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	eeoperation=EE_RD;
004518   6b37     clrf    0x37, 0x1        	CLRF	_eeoperation, B
                                           ;	.line	113; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	eeaddress=EEUSER;
00451a   0e1c     movlw   0x1c             	MOVLW	0x1c
00451c   010a     movlb   0xa              	BANKSEL	_eeaddress
00451e   6f58     movwf   0x58, 0x1        	MOVWF	_eeaddress, B
                                           ; removed redundant BANKSEL
004520   6b59     clrf    0x59, 0x1        	CLRF	(_eeaddress + 1), B
004522   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEwriteMain	code
                                           _EEwriteMain:
                                           ;	.line	103; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	eeoperation=EE_WR;
004506   0e01     movlw   0x1              	MOVLW	0x01
004508   0104     movlb   0x4              	BANKSEL	_eeoperation
00450a   6f37     movwf   0x37, 0x1        	MOVWF	_eeoperation, B
                                           ;	.line	104; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	eeaddress=EEUSER;
00450c   0e1c     movlw   0x1c             	MOVLW	0x1c
00450e   010a     movlb   0xa              	BANKSEL	_eeaddress
004510   6f58     movwf   0x58, 0x1        	MOVWF	_eeaddress, B
                                           ; removed redundant BANKSEL
004512   6b59     clrf    0x59, 0x1        	CLRF	(_eeaddress + 1), B
004514   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEdeclareLong	code
                                           _EEdeclareLong:
                                           ;	.line	92; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EEdeclareLong(unsigned long *data)
002f52   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002f54   ffe5
002f56   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002f58   ffd9
002f5a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002f5c   ffe5
002f5e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002f60   ffe5
002f62   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002f64   ffe5
002f66   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002f68   ffe5
002f6a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002f6c   ffe5
002f6e   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002f70   ffe5
002f72   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002f74   ffe5
002f76   0e02     movlw   0x2              	MOVLW	0x02
002f78   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002f7a   f000
002f7c   0e03     movlw   0x3              	MOVLW	0x03
002f7e   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002f80   f001
002f82   0e04     movlw   0x4              	MOVLW	0x04
002f84   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002f86   f002
002f88   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	94; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	if(eeoperation==EE_RD) *data=EELoadLong();
002f8a   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
002f8c   e119     bnz     0x2fc0           	BNZ	_00176_DS_
002f8e   ec97     call    0x232e, 0        	CALL	_EELoadLong
002f90   f011
002f92   6e03     movwf   0x3, 0           	MOVWF	r0x03
002f94   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
002f96   f004
002f98   cff4     movff   0xff4, 0x5       	MOVFF	PRODH, r0x05
002f9a   f005
002f9c   cfe9     movff   0xfe9, 0x6       	MOVFF	FSR0L, r0x06
002f9e   f006
002fa0   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002fa2   ffe5
002fa4   c004     movff   0x4, 0xff4       	MOVFF	r0x04, PRODH
002fa6   fff4
002fa8   c005     movff   0x5, 0xff6       	MOVFF	r0x05, TBLPTRL
002faa   fff6
002fac   c006     movff   0x6, 0xff7       	MOVFF	r0x06, TBLPTRH
002fae   fff7
002fb0   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002fb2   ffe9
002fb4   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
002fb6   fff3
002fb8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002fba   ecde     call    0x43bc, 0        	CALL	__gptrput4
002fbc   f021
002fbe   d01e     bra     0x2ffc           	BRA	_00178_DS_
                                           _00176_DS_:
002fc0   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	95; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	else if(eeoperation==EE_WR) EESaveLong(*data);
002fc2   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
002fc4   0a01     xorlw   0x1              	XORLW	0x01
002fc6   e11a     bnz     0x2ffc           	BNZ	_00178_DS_
002fc8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002fca   ffe9
002fcc   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
002fce   fff3
002fd0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002fd2   ec12     call    0x4024, 0        	CALL	__gptrget4
002fd4   f020
002fd6   6e00     movwf   0, 0             	MOVWF	r0x00
002fd8   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
002fda   f001
002fdc   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
002fde   f002
002fe0   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
002fe2   f003
002fe4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002fe6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002fe8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002fea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002fec   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002fee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002ff0   5000     movf    0, 0, 0          	MOVF	r0x00, W
002ff2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002ff4   ec3c     call    0x2e78, 0        	CALL	_EESaveLong
002ff6   f017
002ff8   0e04     movlw   0x4              	MOVLW	0x04
002ffa   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00178_DS_:
002ffc   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002ffe   f006
003000   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003002   f005
003004   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003006   f004
003008   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00300a   f003
00300c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00300e   f002
003010   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003012   f001
003014   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003016   f000
003018   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00301a   ffd9
00301c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEdeclareInt	code
                                           _EEdeclareInt:
                                           ;	.line	86; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EEdeclareInt(unsigned int *data)
003466   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003468   ffe5
00346a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00346c   ffd9
00346e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003470   ffe5
003472   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003474   ffe5
003476   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003478   ffe5
00347a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00347c   ffe5
00347e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003480   ffe5
003482   0e02     movlw   0x2              	MOVLW	0x02
003484   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003486   f000
003488   0e03     movlw   0x3              	MOVLW	0x03
00348a   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00348c   f001
00348e   0e04     movlw   0x4              	MOVLW	0x04
003490   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003492   f002
003494   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	88; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	if(eeoperation==EE_RD) *data=EELoadInt();
003496   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
003498   e111     bnz     0x34bc           	BNZ	_00157_DS_
00349a   ec69     call    0x3cd2, 0        	CALL	_EELoadInt
00349c   f01e
00349e   6e03     movwf   0x3, 0           	MOVWF	r0x03
0034a0   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
0034a2   f004
0034a4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0034a6   ffe5
0034a8   c004     movff   0x4, 0xff4       	MOVFF	r0x04, PRODH
0034aa   fff4
0034ac   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0034ae   ffe9
0034b0   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0034b2   fff3
0034b4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0034b6   ec37     call    0x446e, 0        	CALL	__gptrput2
0034b8   f022
0034ba   d016     bra     0x34e8           	BRA	_00159_DS_
                                           _00157_DS_:
0034bc   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	89; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	else if(eeoperation==EE_WR) EESaveInt(*data);
0034be   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
0034c0   0a01     xorlw   0x1              	XORLW	0x01
0034c2   e112     bnz     0x34e8           	BNZ	_00159_DS_
0034c4   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0034c6   ffe9
0034c8   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0034ca   fff3
0034cc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0034ce   ec68     call    0x42d0, 0        	CALL	__gptrget2
0034d0   f021
0034d2   6e00     movwf   0, 0             	MOVWF	r0x00
0034d4   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0034d6   f001
0034d8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0034da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0034dc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0034de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0034e0   ec7b     call    0x3af6, 0        	CALL	_EESaveInt
0034e2   f01d
0034e4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0034e6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00159_DS_:
0034e8   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0034ea   f004
0034ec   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0034ee   f003
0034f0   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0034f2   f002
0034f4   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0034f6   f001
0034f8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0034fa   f000
0034fc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0034fe   ffd9
003500   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EEdeclareChar	code
                                           _EEdeclareChar:
                                           ;	.line	80; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EEdeclareChar(unsigned char *data)
003a78   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003a7a   ffe5
003a7c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003a7e   ffd9
003a80   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003a82   ffe5
003a84   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003a86   ffe5
003a88   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003a8a   ffe5
003a8c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003a8e   ffe5
003a90   0e02     movlw   0x2              	MOVLW	0x02
003a92   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003a94   f000
003a96   0e03     movlw   0x3              	MOVLW	0x03
003a98   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003a9a   f001
003a9c   0e04     movlw   0x4              	MOVLW	0x04
003a9e   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003aa0   f002
003aa2   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	82; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	if(eeoperation==EE_RD) *data=EELoadChar();
003aa4   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
003aa6   e10d     bnz     0x3ac2           	BNZ	_00138_DS_
003aa8   ec3c     call    0x4278, 0        	CALL	_EELoadChar
003aaa   f021
003aac   6e03     movwf   0x3, 0           	MOVWF	r0x03
003aae   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003ab0   ffe5
003ab2   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003ab4   ffe9
003ab6   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003ab8   fff3
003aba   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003abc   ec65     call    0x44ca, 0        	CALL	__gptrput1
003abe   f022
003ac0   d00f     bra     0x3ae0           	BRA	_00140_DS_
                                           _00138_DS_:
003ac2   0104     movlb   0x4              	BANKSEL	_eeoperation
                                           ;	.line	83; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	else if(eeoperation==EE_WR) EESaveChar(*data);
003ac4   5137     movf    0x37, 0, 0x1     	MOVF	_eeoperation, W, B
003ac6   0a01     xorlw   0x1              	XORLW	0x01
003ac8   e10b     bnz     0x3ae0           	BNZ	_00140_DS_
003aca   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003acc   ffe9
003ace   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003ad0   fff3
003ad2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003ad4   eccd     call    0x439a, 0        	CALL	__gptrget1
003ad6   f021
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003ad8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ada   ecc8     call    0x3f90, 0        	CALL	_EESaveChar
003adc   f01f
003ade   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00140_DS_:
003ae0   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003ae2   f003
003ae4   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003ae6   f002
003ae8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003aea   f001
003aec   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003aee   f000
003af0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003af2   ffd9
003af4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EESaveLong	code
                                           _EESaveLong:
                                           ;	.line	69; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EESaveLong(long data) //untested
002e78   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002e7a   ffe5
002e7c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002e7e   ffd9
002e80   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002e82   ffe5
002e84   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002e86   ffe5
002e88   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002e8a   ffe5
002e8c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002e8e   ffe5
002e90   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002e92   ffe5
002e94   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002e96   ffe5
002e98   0e02     movlw   0x2              	MOVLW	0x02
002e9a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002e9c   f000
002e9e   0e03     movlw   0x3              	MOVLW	0x03
002ea0   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002ea2   f001
002ea4   0e04     movlw   0x4              	MOVLW	0x04
002ea6   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002ea8   f002
002eaa   0e05     movlw   0x5              	MOVLW	0x05
002eac   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
002eae   f003
                                           ;	.line	71; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>24);
002eb0   ca58     movff   0xa58, 0x4       	MOVFF	_eeaddress, r0x04
002eb2   f004
002eb4   ca59     movff   0xa59, 0x5       	MOVFF	(_eeaddress + 1), r0x05
002eb6   f005
002eb8   010a     movlb   0xa              	BANKSEL	_eeaddress
002eba   3f58     incfsz  0x58, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002ebc   d001     bra     0x2ec0           	BRA	_10197_DS_
                                           ; removed redundant BANKSEL
002ebe   2b59     incf    0x59, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _10197_DS_:
002ec0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002ec2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002ec4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002ec6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002ec8   ecee     call    0x3fdc, 0        	CALL	_eeWriteByte
002eca   f01f
002ecc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002ece   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	72; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>16);
002ed0   ca58     movff   0xa58, 0x4       	MOVFF	_eeaddress, r0x04
002ed2   f004
002ed4   ca59     movff   0xa59, 0x5       	MOVFF	(_eeaddress + 1), r0x05
002ed6   f005
002ed8   010a     movlb   0xa              	BANKSEL	_eeaddress
002eda   3f58     incfsz  0x58, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002edc   d001     bra     0x2ee0           	BRA	_20198_DS_
                                           ; removed redundant BANKSEL
002ede   2b59     incf    0x59, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _20198_DS_:
                                           ; #	MOVF	r0x02, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
002ee0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002ee2   6e05     movwf   0x5, 0           	MOVWF	r0x05
002ee4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002ee6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002ee8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002eea   ecee     call    0x3fdc, 0        	CALL	_eeWriteByte
002eec   f01f
002eee   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002ef0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	73; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>8);
002ef2   ca58     movff   0xa58, 0x4       	MOVFF	_eeaddress, r0x04
002ef4   f004
002ef6   ca59     movff   0xa59, 0x5       	MOVFF	(_eeaddress + 1), r0x05
002ef8   f005
002efa   010a     movlb   0xa              	BANKSEL	_eeaddress
002efc   3f58     incfsz  0x58, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002efe   d001     bra     0x2f02           	BRA	_30199_DS_
                                           ; removed redundant BANKSEL
002f00   2b59     incf    0x59, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _30199_DS_:
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
002f02   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002f04   6e05     movwf   0x5, 0           	MOVWF	r0x05
002f06   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002f08   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002f0a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002f0c   ecee     call    0x3fdc, 0        	CALL	_eeWriteByte
002f0e   f01f
002f10   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002f12   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	74; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data);
002f14   ca58     movff   0xa58, 0x4       	MOVFF	_eeaddress, r0x04
002f16   f004
002f18   ca59     movff   0xa59, 0x5       	MOVFF	(_eeaddress + 1), r0x05
002f1a   f005
002f1c   010a     movlb   0xa              	BANKSEL	_eeaddress
002f1e   3f58     incfsz  0x58, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002f20   d001     bra     0x2f24           	BRA	_40200_DS_
                                           ; removed redundant BANKSEL
002f22   2b59     incf    0x59, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _40200_DS_:
002f24   5000     movf    0, 0, 0          	MOVF	r0x00, W
002f26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002f28   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002f2a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002f2c   ecee     call    0x3fdc, 0        	CALL	_eeWriteByte
002f2e   f01f
002f30   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002f32   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002f34   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002f36   f005
002f38   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002f3a   f004
002f3c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002f3e   f003
002f40   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002f42   f002
002f44   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002f46   f001
002f48   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002f4a   f000
002f4c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002f4e   ffd9
002f50   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EESaveInt	code
                                           _EESaveInt:
                                           ;	.line	63; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EESaveInt(int data)
003af6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003af8   ffe5
003afa   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003afc   ffd9
003afe   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003b00   ffe5
003b02   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003b04   ffe5
003b06   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003b08   ffe5
003b0a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003b0c   ffe5
003b0e   0e02     movlw   0x2              	MOVLW	0x02
003b10   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003b12   f000
003b14   0e03     movlw   0x3              	MOVLW	0x03
003b16   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003b18   f001
                                           ;	.line	65; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data>>8);
003b1a   ca58     movff   0xa58, 0x2       	MOVFF	_eeaddress, r0x02
003b1c   f002
003b1e   ca59     movff   0xa59, 0x3       	MOVFF	(_eeaddress + 1), r0x03
003b20   f003
003b22   010a     movlb   0xa              	BANKSEL	_eeaddress
003b24   3f58     incfsz  0x58, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
003b26   d001     bra     0x3b2a           	BRA	_50201_DS_
                                           ; removed redundant BANKSEL
003b28   2b59     incf    0x59, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _50201_DS_:
003b2a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003b2c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b2e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003b30   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b32   ecee     call    0x3fdc, 0        	CALL	_eeWriteByte
003b34   f01f
003b36   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003b38   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	66; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data&255);
003b3a   ca58     movff   0xa58, 0x2       	MOVFF	_eeaddress, r0x02
003b3c   f002
003b3e   ca59     movff   0xa59, 0x3       	MOVFF	(_eeaddress + 1), r0x03
003b40   f003
003b42   010a     movlb   0xa              	BANKSEL	_eeaddress
003b44   3f58     incfsz  0x58, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
003b46   d001     bra     0x3b4a           	BRA	_60202_DS_
                                           ; removed redundant BANKSEL
003b48   2b59     incf    0x59, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _60202_DS_:
003b4a   5000     movf    0, 0, 0          	MOVF	r0x00, W
003b4c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b4e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003b50   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b52   ecee     call    0x3fdc, 0        	CALL	_eeWriteByte
003b54   f01f
003b56   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003b58   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003b5a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003b5c   f003
003b5e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003b60   f002
003b62   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003b64   f001
003b66   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003b68   f000
003b6a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003b6c   ffd9
003b6e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EESaveChar	code
                                           _EESaveChar:
                                           ;	.line	58; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	void EESaveChar(unsigned char data)
003f90   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003f92   ffe5
003f94   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003f96   ffd9
003f98   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003f9a   ffe5
003f9c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003f9e   ffe5
003fa0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003fa2   ffe5
003fa4   0e02     movlw   0x2              	MOVLW	0x02
003fa6   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003fa8   f000
                                           ;	.line	60; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	EE_WRITEBYTE_NEXT(data);
003faa   ca58     movff   0xa58, 0x1       	MOVFF	_eeaddress, r0x01
003fac   f001
003fae   ca59     movff   0xa59, 0x2       	MOVFF	(_eeaddress + 1), r0x02
003fb0   f002
003fb2   010a     movlb   0xa              	BANKSEL	_eeaddress
003fb4   3f58     incfsz  0x58, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
003fb6   d001     bra     0x3fba           	BRA	_70203_DS_
                                           ; removed redundant BANKSEL
003fb8   2b59     incf    0x59, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _70203_DS_:
003fba   5000     movf    0, 0, 0          	MOVF	r0x00, W
003fbc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003fbe   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003fc0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003fc2   ecee     call    0x3fdc, 0        	CALL	_eeWriteByte
003fc4   f01f
003fc6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003fc8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003fca   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003fcc   f002
003fce   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003fd0   f001
003fd2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003fd4   f000
003fd6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003fd8   ffd9
003fda   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EELoadLong	code
                                           _EELoadLong:
                                           ;	.line	50; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	long EELoadLong() //untested
00232e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002330   ffe5
002332   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002334   ffe5
002336   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002338   ffe5
00233a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00233c   ffe5
00233e   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002340   ffe5
002342   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002344   ffe5
002346   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
002348   ffe5
00234a   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
00234c   ffe5
00234e   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
002350   ffe5
002352   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
002354   ffe5
002356   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
002358   ffe5
                                           ;	.line	52; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	return ((unsigned long)EE_READBYTE_NEXT()<<24)|((unsigned long)EE_READBYTE_NEXT()<<16)|(EE_READBYTE_NEXT()<<8)|EE_READBYTE_NEXT();
00235a   ca58     movff   0xa58, 0         	MOVFF	_eeaddress, r0x00
00235c   f000
00235e   ca59     movff   0xa59, 0x1       	MOVFF	(_eeaddress + 1), r0x01
002360   f001
002362   010a     movlb   0xa              	BANKSEL	_eeaddress
002364   3f58     incfsz  0x58, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002366   d001     bra     0x236a           	BRA	_80204_DS_
                                           ; removed redundant BANKSEL
002368   2b59     incf    0x59, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _80204_DS_:
00236a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00236c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00236e   ec0d     call    0x441a, 0        	CALL	_eeReadByte
002370   f022
002372   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002374   6e07     movwf   0x7, 0           	MOVWF	r0x07
002376   6a04     clrf    0x4, 0           	CLRF	r0x04
002378   6a05     clrf    0x5, 0           	CLRF	r0x05
00237a   6a06     clrf    0x6, 0           	CLRF	r0x06
00237c   ca58     movff   0xa58, 0         	MOVFF	_eeaddress, r0x00
00237e   f000
002380   ca59     movff   0xa59, 0x1       	MOVFF	(_eeaddress + 1), r0x01
002382   f001
002384   010a     movlb   0xa              	BANKSEL	_eeaddress
002386   3f58     incfsz  0x58, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
002388   d001     bra     0x238c           	BRA	_90205_DS_
                                           ; removed redundant BANKSEL
00238a   2b59     incf    0x59, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _90205_DS_:
00238c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00238e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002390   ec0d     call    0x441a, 0        	CALL	_eeReadByte
002392   f022
002394   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002396   6a0b     clrf    0xb, 0           	CLRF	r0x0b
002398   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
00239a   6a08     clrf    0x8, 0           	CLRF	r0x08
00239c   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00239e   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
0023a0   1205     iorwf   0x5, 0x1, 0      	IORWF	r0x05, F
0023a2   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0023a4   1206     iorwf   0x6, 0x1, 0      	IORWF	r0x06, F
0023a6   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0023a8   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
0023aa   ca58     movff   0xa58, 0         	MOVFF	_eeaddress, r0x00
0023ac   f000
0023ae   ca59     movff   0xa59, 0x1       	MOVFF	(_eeaddress + 1), r0x01
0023b0   f001
0023b2   010a     movlb   0xa              	BANKSEL	_eeaddress
0023b4   3f58     incfsz  0x58, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0023b6   d001     bra     0x23ba           	BRA	_100206_DS_
                                           ; removed redundant BANKSEL
0023b8   2b59     incf    0x59, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _100206_DS_:
0023ba   5000     movf    0, 0, 0          	MOVF	r0x00, W
0023bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0023be   ec0d     call    0x441a, 0        	CALL	_eeReadByte
0023c0   f022
0023c2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0023c4   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ; =DF= MOVFF: replaced by CRLF/SETF
0023c6   6a00     clrf    0, 0             	CLRF	r0x00
0023c8   c003     movff   0x3, 0x1         	MOVFF	r0x03, r0x01
0023ca   f001
0023cc   6ae8     clrf    0xe8, 0          	CLRF	WREG
0023ce   be03     btfsc   0x3, 0x7, 0      	BTFSC	r0x03, 7
0023d0   0eff     movlw   0xff             	MOVLW	0xff
0023d2   6e08     movwf   0x8, 0           	MOVWF	r0x08
0023d4   6e09     movwf   0x9, 0           	MOVWF	r0x09
0023d6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0023d8   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
0023da   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0023dc   1205     iorwf   0x5, 0x1, 0      	IORWF	r0x05, F
0023de   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0023e0   1206     iorwf   0x6, 0x1, 0      	IORWF	r0x06, F
0023e2   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0023e4   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
0023e6   ca58     movff   0xa58, 0         	MOVFF	_eeaddress, r0x00
0023e8   f000
0023ea   ca59     movff   0xa59, 0x1       	MOVFF	(_eeaddress + 1), r0x01
0023ec   f001
0023ee   010a     movlb   0xa              	BANKSEL	_eeaddress
0023f0   3f58     incfsz  0x58, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
0023f2   d001     bra     0x23f6           	BRA	_110207_DS_
                                           ; removed redundant BANKSEL
0023f4   2b59     incf    0x59, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _110207_DS_:
0023f6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0023f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0023fa   ec0d     call    0x441a, 0        	CALL	_eeReadByte
0023fc   f022
0023fe   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002400   6a01     clrf    0x1, 0           	CLRF	r0x01
002402   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
002404   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002406   1205     iorwf   0x5, 0x1, 0      	IORWF	r0x05, F
002408   1206     iorwf   0x6, 0x1, 0      	IORWF	r0x06, F
00240a   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
00240c   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
00240e   ffe9
002410   c006     movff   0x6, 0xff4       	MOVFF	r0x06, PRODH
002412   fff4
002414   c005     movff   0x5, 0xff3       	MOVFF	r0x05, PRODL
002416   fff3
002418   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00241a   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
00241c   f00b
00241e   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
002420   f00a
002422   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
002424   f009
002426   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
002428   f008
00242a   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00242c   f007
00242e   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002430   f006
002432   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002434   f005
002436   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002438   f004
00243a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00243c   f003
00243e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002440   f001
002442   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002444   f000
002446   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EELoadInt	code
                                           _EELoadInt:
                                           ;	.line	45; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	int EELoadInt()
003cd2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003cd4   ffe5
003cd6   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003cd8   ffe5
003cda   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003cdc   ffe5
003cde   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003ce0   ffe5
                                           ;	.line	47; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	return (EE_READBYTE_NEXT()<<8)|EE_READBYTE_NEXT();
003ce2   ca58     movff   0xa58, 0         	MOVFF	_eeaddress, r0x00
003ce4   f000
003ce6   ca59     movff   0xa59, 0x1       	MOVFF	(_eeaddress + 1), r0x01
003ce8   f001
003cea   010a     movlb   0xa              	BANKSEL	_eeaddress
003cec   3f58     incfsz  0x58, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
003cee   d001     bra     0x3cf2           	BRA	_120208_DS_
                                           ; removed redundant BANKSEL
003cf0   2b59     incf    0x59, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _120208_DS_:
003cf2   5000     movf    0, 0, 0          	MOVF	r0x00, W
003cf4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003cf6   ec0d     call    0x441a, 0        	CALL	_eeReadByte
003cf8   f022
003cfa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003cfc   6e03     movwf   0x3, 0           	MOVWF	r0x03
003cfe   6a02     clrf    0x2, 0           	CLRF	r0x02
003d00   ca58     movff   0xa58, 0         	MOVFF	_eeaddress, r0x00
003d02   f000
003d04   ca59     movff   0xa59, 0x1       	MOVFF	(_eeaddress + 1), r0x01
003d06   f001
003d08   010a     movlb   0xa              	BANKSEL	_eeaddress
003d0a   3f58     incfsz  0x58, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
003d0c   d001     bra     0x3d10           	BRA	_130209_DS_
                                           ; removed redundant BANKSEL
003d0e   2b59     incf    0x59, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _130209_DS_:
003d10   5000     movf    0, 0, 0          	MOVF	r0x00, W
003d12   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d14   ec0d     call    0x441a, 0        	CALL	_eeReadByte
003d16   f022
003d18   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003d1a   6a01     clrf    0x1, 0           	CLRF	r0x01
003d1c   1202     iorwf   0x2, 0x1, 0      	IORWF	r0x02, F
003d1e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003d20   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
003d22   c003     movff   0x3, 0xff3       	MOVFF	r0x03, PRODL
003d24   fff3
003d26   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d28   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003d2a   f003
003d2c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003d2e   f002
003d30   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003d32   f001
003d34   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003d36   f000
003d38   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_eeparams__EELoadChar	code
                                           _EELoadChar:
                                           ;	.line	40; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	char EELoadChar()
004278   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00427a   ffe5
00427c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00427e   ffe5
                                           ;	.line	42; C:/Users/sarto/Documents/Pd/externals/Fraise/eeparams/eeparams.c	return EE_READBYTE_NEXT();
004280   ca58     movff   0xa58, 0         	MOVFF	_eeaddress, r0x00
004282   f000
004284   ca59     movff   0xa59, 0x1       	MOVFF	(_eeaddress + 1), r0x01
004286   f001
004288   010a     movlb   0xa              	BANKSEL	_eeaddress
00428a   3f58     incfsz  0x58, 0x1, 0x1   	INCFSZ	_eeaddress, F, B
00428c   d001     bra     0x4290           	BRA	_140210_DS_
                                           ; removed redundant BANKSEL
00428e   2b59     incf    0x59, 0x1, 0x1   	INCF	(_eeaddress + 1), F, B
                                           _140210_DS_:
004290   5000     movf    0, 0, 0          	MOVF	r0x00, W
004292   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004294   ec0d     call    0x441a, 0        	CALL	_eeReadByte
004296   f022
004298   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00429a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00429c   f001
00429e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0042a0   f000
0042a2   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 1362 (0x0552) bytes ( 1.04%)
                                           ;           	  681 (0x02a9) words
                                           ; udata size:	    3 (0x0003) bytes ( 0.08%)
                                           ; access size:	   12 (0x000c) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           	CONFIG	XINST=OFF
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_eeWriteByte
                                           	global	_eeReadByte
                                           	global	_coreInit
                                           	global	_time
                                           	global	_TMR0U
                                           	global	_Now
                                           	global	_PORTZ
                                           	global	_PORTZbits
                                           	global	_LATZ
                                           	global	_LATZbits
                                           	global	_TRICZ
                                           	global	_TRISZbits
                                           	global	_ANSELZ
                                           	global	_ANSELZbits
                                           	global	_main
                                           	global	_high_ISR
                                           	global	_low_ISR
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_setup
                                           	extern	_loop
                                           	extern	_Setup
                                           	extern	_fraiseISR
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _TMR0U	db	0x00, 0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           
                                           udata_core_0	udata
                                           _Now	res	4
                                           
                                           udata_core_1	udata
                                           _time_now_1_76	res	4
                                           
                                           
                                           ustat_core_00	udata	0X0438
                                           _ANSELZ        
                                           _ANSELZbits    	res	1
                                           
                                           
                                           ustat_core_01	udata	0X0480
                                           _PORTZ         
                                           _PORTZbits     	res	1
                                           
                                           
                                           ustat_core_02	udata	0X0489
                                           _LATZ          
                                           _LATZbits      	res	1
                                           
                                           
                                           ustat_core_03	udata	0X0492
                                           _TRICZ         
                                           _TRISZbits     	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_core_ivec_0x1_high_ISR	code	0X000008
                                           ivec_0x1_high_ISR:
000008   efd5     goto    0x31aa           	GOTO	_high_ISR
00000a   f018
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_core_ivec_0x2_low_ISR	code	0X000018
                                           ivec_0x2_low_ISR:
000018   ef7b     goto    0x38f6           	GOTO	_low_ISR
00001a   f01c
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_core__main	code
                                           _main:
                                           ;	.line	112; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	setup();
00000c   ec84     call    0x1108, 0        	CALL	_setup
00000e   f008
                                           _00124_DS_:
                                           ;	.line	116; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	while(1) loop();
000010   ece2     call    0x33c4, 0        	CALL	_loop
000012   f019
000014   d7fd     bra     0x10             	BRA	_00124_DS_
000016   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__time	code
                                           _time:
003dfe   010a     movlb   0xa              	BANKSEL	_TMR0U
                                           ;	.line	176; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	now.word1= TMR0U;
003e00   5120     movf    0x20, 0, 0x1     	MOVF	_TMR0U, W, B
003e02   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 2)
003e04   6f7b     movwf   0x7b, 0x1        	MOVWF	(_time_now_1_76 + 2), B
003e06   010a     movlb   0xa              	BANKSEL	(_TMR0U + 1)
003e08   5121     movf    0x21, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
003e0a   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 3)
003e0c   6f7c     movwf   0x7c, 0x1        	MOVWF	(_time_now_1_76 + 3), B
                                           ;	.line	178; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_LSB(now)=TMR0L;
003e0e   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
003e10   6f79     movwf   0x79, 0x1        	MOVWF	_time_now_1_76, B
                                           ;	.line	179; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_MSB(now)=TMR0H;
003e12   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
003e14   6f7a     movwf   0x7a, 0x1        	MOVWF	(_time_now_1_76 + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	181; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	if(now.word1 != TMR0U) { //a rollover occured : do read again
003e16   517b     movf    0x7b, 0, 0x1     	MOVF	(_time_now_1_76 + 2), W, B
003e18   010a     movlb   0xa              	BANKSEL	_TMR0U
003e1a   1920     xorwf   0x20, 0, 0x1     	XORWF	_TMR0U, W, B
003e1c   e105     bnz     0x3e28           	BNZ	_00151_DS_
003e1e   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 3)
003e20   517c     movf    0x7c, 0, 0x1     	MOVF	(_time_now_1_76 + 3), W, B
003e22   010a     movlb   0xa              	BANKSEL	(_TMR0U + 1)
003e24   1921     xorwf   0x21, 0, 0x1     	XORWF	(_TMR0U + 1), W, B
003e26   e00c     bz      0x3e40           	BZ	_00144_DS_
                                           _00151_DS_:
003e28   010a     movlb   0xa              	BANKSEL	_TMR0U
                                           ;	.line	182; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	now.word1= TMR0U;
003e2a   5120     movf    0x20, 0, 0x1     	MOVF	_TMR0U, W, B
003e2c   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 2)
003e2e   6f7b     movwf   0x7b, 0x1        	MOVWF	(_time_now_1_76 + 2), B
003e30   010a     movlb   0xa              	BANKSEL	(_TMR0U + 1)
003e32   5121     movf    0x21, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
003e34   0104     movlb   0x4              	BANKSEL	(_time_now_1_76 + 3)
003e36   6f7c     movwf   0x7c, 0x1        	MOVWF	(_time_now_1_76 + 3), B
                                           ;	.line	183; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_LSB(now)=TMR0L;
003e38   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
003e3a   6f79     movwf   0x79, 0x1        	MOVWF	_time_now_1_76, B
                                           ;	.line	184; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_MSB(now)=TMR0H;
003e3c   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
003e3e   6f7a     movwf   0x7a, 0x1        	MOVWF	(_time_now_1_76 + 1), B
                                           _00144_DS_:
                                           ;	.line	187; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	return now._dword;
003e40   c47c     movff   0x47c, 0xfe9     	MOVFF	(_time_now_1_76 + 3), FSR0L
003e42   ffe9
003e44   c47b     movff   0x47b, 0xff4     	MOVFF	(_time_now_1_76 + 2), PRODH
003e46   fff4
003e48   c47a     movff   0x47a, 0xff3     	MOVFF	(_time_now_1_76 + 1), PRODL
003e4a   fff3
003e4c   0104     movlb   0x4              	BANKSEL	_time_now_1_76
003e4e   5179     movf    0x79, 0, 0x1     	MOVF	_time_now_1_76, W, B
003e50   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__low_ISR	code
                                           _low_ISR:
                                           ;	.line	155; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	void low_ISR(void) 
0038f6   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
0038f8   ffe5
0038fa   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
0038fc   ffe5
0038fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003900   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
003902   ffe5
003904   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
003906   ffe5
003908   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
00390a   ffe5
00390c   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
00390e   ffe5
003910   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
003912   ffe5
003914   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
003916   ffe5
                                           ;	.line	160; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	SAVETBLPRT();
003918   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTR, _POSTDEC1
00391a   ffe5
00391c   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, _POSTDEC1
00391e   ffe5
003920   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, _POSTDEC1
003922   ffe5
003924   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, _POSTDEC1
003926   ffe5
003928   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, _POSTDEC1
00392a   ffe5
00392c   cfe1     movff   0xfe1, 0xfe5     	MOVFF	_FSR1L, _POSTDEC1
00392e   ffe5
003930   cfe2     movff   0xfe2, 0xfe5     	MOVFF	_FSR1H, _POSTDEC1
003932   ffe5
                                           ;	.line	161; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	fraiseISR();
003934   ec51     call    0x18a2, 0        	CALL	_fraiseISR
003936   f00c
                                           ;	.line	166; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	RESTORETBLPRT();
003938   cfe4     movff   0xfe4, 0xfe2     	MOVFF	_PREINC1, _FSR1H
00393a   ffe2
00393c   cfe4     movff   0xfe4, 0xfe1     	MOVFF	_PREINC1, _FSR1L
00393e   ffe1
003940   cfe4     movff   0xfe4, 0xff5     	MOVFF	_PREINC1, _TABLAT
003942   fff5
003944   cfe4     movff   0xfe4, 0xff8     	MOVFF	_PREINC1, _TBLPTRU
003946   fff8
003948   cfe4     movff   0xfe4, 0xff7     	MOVFF	_PREINC1, _TBLPTRH
00394a   fff7
00394c   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTRL
00394e   fff6
003950   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTR
003952   fff6
003954   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
003956   fffb
003958   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
00395a   fffa
00395c   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
00395e   ffea
003960   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
003962   ffe9
003964   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
003966   fff4
003968   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
00396a   fff3
00396c   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00396e   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
003970   ffe0
003972   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
003974   ffd8
003976   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_core__high_ISR	code
                                           _high_ISR:
                                           ;	.line	127; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	void high_ISR(void)
0031aa   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
0031ac   ffe5
0031ae   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
0031b0   ffe5
0031b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0031b4   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
0031b6   ffe5
0031b8   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
0031ba   ffe5
0031bc   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
0031be   ffe5
0031c0   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
0031c2   ffe5
0031c4   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
0031c6   ffe5
0031c8   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
0031ca   ffe5
                                           ;	.line	133; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	SAVETBLPRT();
0031cc   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTR, _POSTDEC1
0031ce   ffe5
0031d0   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, _POSTDEC1
0031d2   ffe5
0031d4   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, _POSTDEC1
0031d6   ffe5
0031d8   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, _POSTDEC1
0031da   ffe5
0031dc   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, _POSTDEC1
0031de   ffe5
0031e0   cfe1     movff   0xfe1, 0xfe5     	MOVFF	_FSR1L, _POSTDEC1
0031e2   ffe5
0031e4   cfe2     movff   0xfe2, 0xfe5     	MOVFF	_FSR1H, _POSTDEC1
0031e6   ffe5
0031e8   010a     movlb   0xa              	BANKSEL	_TMR0U
                                           ;	.line	135; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	Now.word1= TMR0U;
0031ea   5120     movf    0x20, 0, 0x1     	MOVF	_TMR0U, W, B
0031ec   010f     movlb   0xf              	BANKSEL	(_Now + 2)
0031ee   6f35     movwf   0x35, 0x1        	MOVWF	(_Now + 2), B
0031f0   010a     movlb   0xa              	BANKSEL	(_TMR0U + 1)
0031f2   5121     movf    0x21, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
0031f4   010f     movlb   0xf              	BANKSEL	(_Now + 3)
0031f6   6f36     movwf   0x36, 0x1        	MOVWF	(_Now + 3), B
                                           ;	.line	136; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_LSB(Now)=TMR0L;
0031f8   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
0031fa   6f33     movwf   0x33, 0x1        	MOVWF	_Now, B
                                           ;	.line	137; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_MSB(Now)=TMR0H;
0031fc   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
0031fe   6f34     movwf   0x34, 0x1        	MOVWF	(_Now + 1), B
                                           ;	.line	139; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	if(INTCONbits.TMR0IF) {
003200   a4f2     btfss   0xf2, 0x2, 0     	BTFSS	_INTCONbits, 2
003202   d011     bra     0x3226           	BRA	_00132_DS_
003204   010a     movlb   0xa              	BANKSEL	_TMR0U
                                           ;	.line	140; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	TMR0U++;
003206   3f20     incfsz  0x20, 0x1, 0x1   	INCFSZ	_TMR0U, F, B
003208   d001     bra     0x320c           	BRA	_10143_DS_
                                           ; removed redundant BANKSEL
00320a   2b21     incf    0x21, 0x1, 0x1   	INCF	(_TMR0U + 1), F, B
                                           _10143_DS_:
                                           ;	.line	141; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.TMR0IF=0;
00320c   94f2     bcf     0xf2, 0x2, 0     	BCF	_INTCONbits, 2
00320e   010a     movlb   0xa              	BANKSEL	_TMR0U
                                           ;	.line	142; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	Now.word1= TMR0U;
003210   5120     movf    0x20, 0, 0x1     	MOVF	_TMR0U, W, B
003212   010f     movlb   0xf              	BANKSEL	(_Now + 2)
003214   6f35     movwf   0x35, 0x1        	MOVWF	(_Now + 2), B
003216   010a     movlb   0xa              	BANKSEL	(_TMR0U + 1)
003218   5121     movf    0x21, 0, 0x1     	MOVF	(_TMR0U + 1), W, B
00321a   010f     movlb   0xf              	BANKSEL	(_Now + 3)
00321c   6f36     movwf   0x36, 0x1        	MOVWF	(_Now + 3), B
                                           ;	.line	143; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_LSB(Now)=TMR0L;
00321e   50d6     movf    0xd6, 0, 0       	MOVF	_TMR0L, W
                                           ; removed redundant BANKSEL
003220   6f33     movwf   0x33, 0x1        	MOVWF	_Now, B
                                           ;	.line	144; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	LOWER_MSB(Now)=TMR0H;
003222   50d7     movf    0xd7, 0, 0       	MOVF	_TMR0H, W
                                           ; removed redundant BANKSEL
003224   6f34     movwf   0x34, 0x1        	MOVWF	(_Now + 1), B
                                           _00132_DS_:
                                           ;	.line	150; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	RESTORETBLPRT();
003226   cfe4     movff   0xfe4, 0xfe2     	MOVFF	_PREINC1, _FSR1H
003228   ffe2
00322a   cfe4     movff   0xfe4, 0xfe1     	MOVFF	_PREINC1, _FSR1L
00322c   ffe1
00322e   cfe4     movff   0xfe4, 0xff5     	MOVFF	_PREINC1, _TABLAT
003230   fff5
003232   cfe4     movff   0xfe4, 0xff8     	MOVFF	_PREINC1, _TBLPTRU
003234   fff8
003236   cfe4     movff   0xfe4, 0xff7     	MOVFF	_PREINC1, _TBLPTRH
003238   fff7
00323a   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTRL
00323c   fff6
00323e   cfe4     movff   0xfe4, 0xff6     	MOVFF	_PREINC1, _TBLPTR
003240   fff6
003242   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
003244   fffb
003246   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
003248   fffa
00324a   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
00324c   ffea
00324e   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
003250   ffe9
003252   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
003254   fff4
003256   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
003258   fff3
00325a   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00325c   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
00325e   ffe0
003260   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
003262   ffd8
003264   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_core__coreInit	code
                                           _coreInit:
                                           ;	.line	72; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	void coreInit(void)
003ea6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003ea8   ffe5
                                           ;	.line	75; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	Setup();
003eaa   eca2     call    0x4544, 0        	CALL	_Setup
003eac   f022
003eae   0104     movlb   0x4              	BANKSEL	_LATZ
                                           ;	.line	79; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	PORTZ = LATZ = 0;
003eb0   6b89     clrf    0x89, 0x1        	CLRF	_LATZ, B
                                           ; removed redundant BANKSEL
003eb2   6b80     clrf    0x80, 0x1        	CLRF	_PORTZ, B
                                           ; removed redundant BANKSEL
                                           ;	.line	80; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	PORTZbits.RZ1 = LATZbits.LATZ1 = 1;	
003eb4   8389     bsf     0x89, 0x1, 0x1   	BSF	_LATZbits, 1, B
003eb6   6a00     clrf    0, 0             	CLRF	r0x00
                                           ; removed redundant BANKSEL
003eb8   b389     btfsc   0x89, 0x1, 0x1   	BTFSC	_LATZbits, 1, B
003eba   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
003ebc   5000     movf    0, 0, 0          	MOVF	r0x00, W
003ebe   0b01     andlw   0x1              	ANDLW	0x01
003ec0   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
003ec2   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
                                           ; removed redundant BANKSEL
003ec4   5180     movf    0x80, 0, 0x1     	MOVF	_PORTZbits, W, B
003ec6   0bfd     andlw   0xfd             	ANDLW	0xfd
003ec8   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
003eca   6f80     movwf   0x80, 0x1        	MOVWF	_PORTZbits, B
                                           ;	.line	83; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.TMR0ON = 1;
003ecc   8ed5     bsf     0xd5, 0x7, 0     	BSF	_T0CONbits, 7
                                           ;	.line	84; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T08BIT = 0;	// 16 bit timer
003ece   9cd5     bcf     0xd5, 0x6, 0     	BCF	_T0CONbits, 6
                                           ;	.line	85; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T0CS = 0;		// Use internal clock
003ed0   9ad5     bcf     0xd5, 0x5, 0     	BCF	_T0CONbits, 5
                                           ;	.line	86; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T0SE = 1;		// Hi to low
003ed2   88d5     bsf     0xd5, 0x4, 0     	BSF	_T0CONbits, 4
                                           ;	.line	87; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.PSA = 0;		// Use the prescaler
003ed4   96d5     bcf     0xd5, 0x3, 0     	BCF	_T0CONbits, 3
                                           ;	.line	88; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T0PS2 = 0;	// 
003ed6   94d5     bcf     0xd5, 0x2, 0     	BCF	_T0CONbits, 2
                                           ;	.line	89; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T0PS1 = 1;	// 1/16 prescaler: 
003ed8   82d5     bsf     0xd5, 0x1, 0     	BSF	_T0CONbits, 1
                                           ;	.line	90; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T0CONbits.T0PS0 = 1;	// 
003eda   80d5     bsf     0xd5, 0, 0       	BSF	_T0CONbits, 0
                                           ;	.line	91; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.TMR0IE=1;	// enable TMR0 interrupt
003edc   8af2     bsf     0xf2, 0x5, 0     	BSF	_INTCONbits, 5
                                           ;	.line	92; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCON2bits.TMR0IP=1;	// high priority
003ede   84f1     bsf     0xf1, 0x2, 0     	BSF	_INTCON2bits, 2
                                           ;	.line	95; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	RCONbits.IPEN = 1;  // enable interrupts priority mode
003ee0   8ed0     bsf     0xd0, 0x7, 0     	BSF	_RCONbits, 7
                                           ;	.line	97; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEH = 1;  // enable interrupts
003ee2   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	98; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEL = 1;  // enable interrupts
003ee4   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	103; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T2CONbits.T2CKPS0=1; //prescaler 4
003ee6   80ba     bsf     0xba, 0, 0       	BSF	_T2CONbits, 0
                                           ;	.line	104; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	PR2=255;
003ee8   0eff     movlw   0xff             	MOVLW	0xff
003eea   68bb     setf    0xbb, 0          	SETF	_PR2
                                           ;	.line	105; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	T2CONbits.TMR2ON=1;
003eec   84ba     bsf     0xba, 0x2, 0     	BSF	_T2CONbits, 2
003eee   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003ef0   f000
003ef2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__eeReadByte	code
                                           _eeReadByte:
                                           ;	.line	56; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	unsigned char eeReadByte(unsigned char address){
00441a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00441c   ffe5
00441e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004420   ffd9
004422   0e02     movlw   0x2              	MOVLW	0x02
004424   cfdb     movff   0xfdb, 0xfa9     	MOVFF	PLUSW2, _EEADR
004426   ffa9
                                           ;	.line	58; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.CFGS = 0;
004428   9ca6     bcf     0xa6, 0x6, 0     	BCF	_EECON1bits, 6
                                           ;	.line	59; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.EEPGD = 0;
00442a   9ea6     bcf     0xa6, 0x7, 0     	BCF	_EECON1bits, 7
                                           ;	.line	60; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.RD = 1;
00442c   80a6     bsf     0xa6, 0, 0       	BSF	_EECON1bits, 0
                                           ;	.line	61; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	return EEDATA;
00442e   50a8     movf    0xa8, 0, 0       	MOVF	_EEDATA, W
004430   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004432   ffd9
004434   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_core__eeWriteByte	code
                                           _eeWriteByte:
                                           ;	.line	33; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	void eeWriteByte(unsigned char address, unsigned char value){
003fdc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003fde   ffe5
003fe0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003fe2   ffd9
003fe4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003fe6   ffe5
003fe8   0e02     movlw   0x2              	MOVLW	0x02
003fea   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003fec   f000
003fee   0e03     movlw   0x3              	MOVLW	0x03
003ff0   cfdb     movff   0xfdb, 0xfa8     	MOVFF	PLUSW2, _EEDATA
003ff2   ffa8
                                           ;	.line	36; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EEADR = address;
003ff4   c000     movff   0, 0xfa9         	MOVFF	r0x00, _EEADR
003ff6   ffa9
                                           ;	.line	38; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.EEPGD = 0;
003ff8   9ea6     bcf     0xa6, 0x7, 0     	BCF	_EECON1bits, 7
                                           ;	.line	39; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.CFGS = 0;
003ffa   9ca6     bcf     0xa6, 0x6, 0     	BCF	_EECON1bits, 6
                                           ;	.line	40; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.WREN = 1; // enable writes to data EEPROM
003ffc   84a6     bsf     0xa6, 0x2, 0     	BSF	_EECON1bits, 2
                                           ;	.line	41; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEH = 0;  // disable interrupts
003ffe   9ef2     bcf     0xf2, 0x7, 0     	BCF	_INTCONbits, 7
                                           ;	.line	42; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEL = 0;  // disable interrupts
004000   9cf2     bcf     0xf2, 0x6, 0     	BCF	_INTCONbits, 6
                                           ;	.line	43; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON2 = 0x55;
004002   0e55     movlw   0x55             	MOVLW	0x55
004004   6ea7     movwf   0xa7, 0          	MOVWF	_EECON2
                                           ;	.line	44; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON2 = 0x0AA;
004006   0eaa     movlw   0xaa             	MOVLW	0xaa
004008   6ea7     movwf   0xa7, 0          	MOVWF	_EECON2
                                           ;	.line	45; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.WR = 1;   // start writing
00400a   82a6     bsf     0xa6, 0x1, 0     	BSF	_EECON1bits, 1
                                           _00105_DS_:
                                           ;	.line	46; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	while(EECON1bits.WR){
00400c   a2a6     btfss   0xa6, 0x1, 0     	BTFSS	_EECON1bits, 1
00400e   d002     bra     0x4014           	BRA	_00107_DS_
004010   0000     nop                      	nop	
004012   d7fc     bra     0x400c           	BRA	_00105_DS_
                                           _00107_DS_:
                                           ;	.line	51; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	EECON1bits.WREN = 0;
004014   94a6     bcf     0xa6, 0x2, 0     	BCF	_EECON1bits, 2
                                           ;	.line	52; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEH = 1;  // enable interrupts
004016   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	53; C:/Users/sarto/Documents/Pd/externals/Fraise/core/core.c	INTCONbits.GIEL = 1;  // enable interrupts
004018   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
00401a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00401c   f000
00401e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004020   ffd9
004022   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  596 (0x0254) bytes ( 0.45%)
                                           ;           	  298 (0x012a) words
                                           ; udata size:	   12 (0x000c) bytes ( 0.33%)
                                           ; access size:	    1 (0x0001) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_FraiseState
                                           	global	_FrTXtries
                                           	global	_fraiseSetID
                                           	global	_fraiseInit
                                           	global	_fraiseSetInterruptEnable
                                           	global	_fraiseGetInterruptEnable
                                           	global	_fraiseSend
                                           	global	_fraiseSendBroadcast
                                           	global	_fraiseISR
                                           	global	_fraiseGetChar
                                           	global	_fraisePeekChar
                                           	global	_fraiseGetLen
                                           	global	_fraiseGetIndex
                                           	global	_fraiseGetAt
                                           	global	_fraiseSendCopy
                                           	global	_fraiseService
                                           	global	_putchar
                                           	global	_FrTXbuf
                                           	global	_FrTXin
                                           	global	_FrTXout
                                           	global	_FrTXbufFree
                                           	global	_FrTXpacket
                                           	global	_FrTXpacket_i
                                           	global	_FrTXpacket_len
                                           	global	_FrTXchksum
                                           	global	_FrRXbuf
                                           	global	_FrRXchksum
                                           	global	_FrRXin
                                           	global	_FrRXin_tmp
                                           	global	_FrRXin_end
                                           	global	_FrRXout
                                           	global	_FrRXout_end
                                           	global	_FrRXout_len
                                           	global	_FrRXout_first
                                           	global	_FraiseStatus
                                           	global	_FrInterruptEnabled
                                           	global	_FrID
                                           	global	_txbuf
                                           	global	_txlen
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrget1
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_printf
                                           	extern	_eeWriteByte
                                           	extern	_eeReadByte
                                           	extern	_fraiseReceiveChar
                                           	extern	__modsint
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           
                                           
                                           	idata
                                           _FrTXin	db	0x00
                                           _FrTXout	db	0x00
                                           _FrTXbufFree	db	0xff
                                           _FrInterruptEnabled	db	0x00
                                           _FrID	db	0x00
                                           _txlen	db	0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           
                                           udata_fraisedevice_0	udata
                                           _FrTXtries	res	1
                                           
                                           udata_fraisedevice_1	udata
                                           _FraiseState	res	1
                                           
                                           udata_fraisedevice_2	udata
                                           _fraiseISR_c_1_112	res	1
                                           
                                           udata_fraisedevice_3	udata
                                           _fraiseISR_c2_1_112	res	1
                                           
                                           udata_fraisedevice_4	udata
                                           _FrRXin	res	1
                                           
                                           udata_fraisedevice_5	udata
                                           _FrRXout	res	1
                                           
                                           udata_fraisedevice_6	udata
                                           _FrTXpacket_len	res	1
                                           
                                           udata_fraisedevice_7	udata
                                           _FraiseStatus	res	1
                                           
                                           udata_fraisedevice_8	udata
                                           _FrTXbuf	res	256
                                           
                                           udata_fraisedevice_9	udata
                                           _FrTXchksum	res	1
                                           
                                           udata_fraisedevice_10	udata
                                           _FrTXpacket_i	res	1
                                           
                                           udata_fraisedevice_11	udata
                                           _fraiseDecodeNextTXPacket_ischar_1_92	res	1
                                           
                                           udata_fraisedevice_12	udata
                                           _FrTXpacket	res	35
                                           
                                           udata_fraisedevice_13	udata
                                           _FrRXchksum	res	1
                                           
                                           udata_fraisedevice_14	udata
                                           _FrRXin_tmp	res	1
                                           
                                           udata_fraisedevice_15	udata
                                           _FrRXin_end	res	1
                                           
                                           udata_fraisedevice_16	udata
                                           _FrRXbuf	res	128
                                           
                                           udata_fraisedevice_17	udata
                                           _FrRXout_end	res	1
                                           
                                           udata_fraisedevice_18	udata
                                           _FrRXout_len	res	1
                                           
                                           udata_fraisedevice_19	udata
                                           _FrRXout_first	res	1
                                           
                                           udata_fraisedevice_20	udata
                                           _txbuf	res	35
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_fraisedevice__putchar	code
                                           _putchar:
                                           ;	.line	780; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	PUTCHAR (c) {
003d3a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003d3c   ffe5
003d3e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003d40   ffe5
003d42   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003d44   ffe5
003d46   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	781; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	txbuf[txlen] = c;
003d48   0e00     movlw   0                	MOVLW	LOW(_txbuf)
003d4a   010a     movlb   0xa              	BANKSEL	_txlen
003d4c   2527     addwf   0x27, 0, 0x1     	ADDWF	_txlen, W, B
003d4e   6e01     movwf   0x1, 0           	MOVWF	r0x01
003d50   6a02     clrf    0x2, 0           	CLRF	r0x02
003d52   0e0f     movlw   0xf              	MOVLW	HIGH(_txbuf)
003d54   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003d56   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003d58   ffe9
003d5a   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003d5c   ffea
003d5e   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
003d60   ffef
                                           ;	.line	782; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(txlen < (sizeof(txbuf) - 1)) txlen++;
003d62   0e22     movlw   0x22             	MOVLW	0x22
                                           ; #	SUBWF	_txlen, W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_00807_DS_
                                           ; #	INCF	_txlen, F, B
                                           ; #	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
                                           ;	.line	783; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == '\n') {
003d64   5d27     subwf   0x27, 0, 0x1     	SUBWF	_txlen, W, B
003d66   e201     bc      0x3d6a           	BC	_10806_DS_
                                           ; removed redundant BANKSEL
003d68   2b27     incf    0x27, 0x1, 0x1   	INCF	_txlen, F, B
                                           _10806_DS_:
003d6a   5000     movf    0, 0, 0          	MOVF	r0x00, W
003d6c   0a0a     xorlw   0xa              	XORLW	0x0a
003d6e   e10f     bnz     0x3d8e           	BNZ	_00810_DS_
                                           _00820_DS_:
003d70   010a     movlb   0xa              	BANKSEL	_txlen
                                           ;	.line	784; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSend(txbuf, txlen);
003d72   5127     movf    0x27, 0, 0x1     	MOVF	_txlen, W, B
003d74   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d76   0e80     movlw   0x80             	MOVLW	0x80
003d78   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d7a   0e0f     movlw   0xf              	MOVLW	HIGH(_txbuf)
003d7c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d7e   0e00     movlw   0                	MOVLW	LOW(_txbuf)
003d80   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d82   ecdc     call    0x2bb8, 0        	CALL	_fraiseSend
003d84   f015
003d86   0e04     movlw   0x4              	MOVLW	0x04
003d88   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003d8a   010a     movlb   0xa              	BANKSEL	_txlen
                                           ;	.line	785; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	txlen = 0;
003d8c   6b27     clrf    0x27, 0x1        	CLRF	_txlen, B
                                           _00810_DS_:
003d8e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003d90   f002
003d92   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003d94   f001
003d96   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003d98   f000
003d9a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseService	code
                                           _fraiseService:
                                           ;	.line	696; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseService(void)
002560   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002562   ffe5
002564   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002566   ffe5
002568   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00256a   ffe5
00256c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00256e   ffe5
002570   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002572   ffe5
002574   010a     movlb   0xa              	BANKSEL	_FrRXout
                                           ;	.line	700; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXout != FrRXin) //FraiseStatus.RX_FULL
002576   5165     movf    0x65, 0, 0x1     	MOVF	_FrRXout, W, B
002578   010a     movlb   0xa              	BANKSEL	_FrRXin
00257a   1964     xorwf   0x64, 0, 0x1     	XORWF	_FrRXin, W, B
00257c   e101     bnz     0x2580           	BNZ	_00784_DS_
00257e   d05c     bra     0x2638           	BRA	_00730_DS_
                                           _00784_DS_:
                                           ;	.line	702; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = FrRXout;
002580   ca65     movff   0xa65, 0         	MOVFF	_FrRXout, r0x00
002582   f000
                                           ;	.line	703; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c += 1;
002584   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
                                           ;	.line	704; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c %= sizeof(FrRXbuf);
002586   9e00     bcf     0, 0x7, 0        	BCF	r0x00, 7
                                           ;	.line	705; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len = FrRXbuf[c];
002588   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
00258a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00258c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00258e   6a02     clrf    0x2, 0           	CLRF	r0x02
002590   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
002592   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002594   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002596   ffe9
002598   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00259a   ffea
00259c   cfef     movff   0xfef, 0xa6f     	MOVFF	INDF0, _FrRXout_len
00259e   fa6f
                                           ;	.line	706; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len &= 31;
0025a0   0e1f     movlw   0x1f             	MOVLW	0x1f
0025a2   010a     movlb   0xa              	BANKSEL	_FrRXout_len
0025a4   176f     andwf   0x6f, 0x1, 0x1   	ANDWF	_FrRXout_len, F, B
                                           ;	.line	708; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end = FrRXout;
0025a6   ca65     movff   0xa65, 0xa6e     	MOVFF	_FrRXout, _FrRXout_end
0025a8   fa6e
                                           ; removed redundant BANKSEL
                                           ;	.line	709; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end += FrRXout_len;
0025aa   516f     movf    0x6f, 0, 0x1     	MOVF	_FrRXout_len, W, B
0025ac   010a     movlb   0xa              	BANKSEL	_FrRXout_end
0025ae   276e     addwf   0x6e, 0x1, 0x1   	ADDWF	_FrRXout_end, F, B
                                           ;	.line	710; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end += 2;
0025b0   2b6e     incf    0x6e, 0x1, 0x1   	INCF	_FrRXout_end, F, B
0025b2   2b6e     incf    0x6e, 0x1, 0x1   	INCF	_FrRXout_end, F, B
                                           ;	.line	711; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_end %= sizeof(FrRXbuf);
0025b4   9f6e     bcf     0x6e, 0x7, 0x1   	BCF	_FrRXout_end, 7, B
                                           ;	.line	713; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	isbroadcast = (fraiseGetChar() == 0);
0025b6   ec29     call    0x3e52, 0        	CALL	_fraiseGetChar
0025b8   f01f
0025ba   6e01     movwf   0x1, 0           	MOVWF	r0x01
0025bc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0025be   e103     bnz     0x25c6           	BNZ	_00788_DS_
0025c0   6a01     clrf    0x1, 0           	CLRF	r0x01
0025c2   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
0025c4   d001     bra     0x25c8           	BRA	_00789_DS_
                                           _00788_DS_:
0025c6   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00789_DS_:
                                           ;	.line	714; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len = fraiseGetChar();
0025c8   ec29     call    0x3e52, 0        	CALL	_fraiseGetChar
0025ca   f01f
0025cc   010a     movlb   0xa              	BANKSEL	_FrRXout_len
0025ce   6f6f     movwf   0x6f, 0x1        	MOVWF	_FrRXout_len, B
                                           ;	.line	715; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	ischar = FrRXout_len & 128;
0025d0   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
0025d2   156f     andwf   0x6f, 0, 0x1     	ANDWF	_FrRXout_len, W, B
0025d4   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	717; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!(FrRXout_len &= 31)){ //packet error
0025d6   0e1f     movlw   0x1f             	MOVLW	0x1f
                                           ; removed redundant BANKSEL
0025d8   156f     andwf   0x6f, 0, 0x1     	ANDWF	_FrRXout_len, W, B
0025da   6e03     movwf   0x3, 0           	MOVWF	r0x03
0025dc   c003     movff   0x3, 0x4         	MOVFF	r0x03, r0x04
0025de   f004
0025e0   c003     movff   0x3, 0xa6f       	MOVFF	r0x03, _FrRXout_len
0025e2   fa6f
0025e4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0025e6   e103     bnz     0x25ee           	BNZ	_00709_DS_
                                           ;	.line	718; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout = FrRXin;
0025e8   ca64     movff   0xa64, 0xa65     	MOVFF	_FrRXin, _FrRXout
0025ea   fa65
                                           ;	.line	719; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0025ec   d038     bra     0x265e           	BRA	_00739_DS_
                                           _00709_DS_:
                                           ;	.line	722; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(isbroadcast) //Broadcast packet
0025ee   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0025f0   e01b     bz      0x2628           	BZ	_00726_DS_
                                           ;	.line	724; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(ischar){
0025f2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0025f4   e01f     bz      0x2634           	BZ	_00728_DS_
                                           ;	.line	725; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetChar();
0025f6   ec29     call    0x3e52, 0        	CALL	_fraiseGetChar
0025f8   f01f
0025fa   6e00     movwf   0, 0             	MOVWF	r0x00
0025fc   010a     movlb   0xa              	BANKSEL	_FrRXout_len
                                           ;	.line	726; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_len -= 1;
0025fe   076f     decf    0x6f, 0x1, 0x1   	DECF	_FrRXout_len, F, B
                                           ;	.line	727; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if     (c == 'B') {
002600   5000     movf    0, 0, 0          	MOVF	r0x00, W
002602   0a42     xorlw   0x42             	XORLW	0x42
002604   e017     bz      0x2634           	BZ	_00728_DS_
                                           ;	.line	732; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'N') Assign();		/* assign to id if name matchs */
002606   5000     movf    0, 0, 0          	MOVF	r0x00, W
002608   0a4e     xorlw   0x4e             	XORLW	0x4e
00260a   e103     bnz     0x2612           	BNZ	_00716_DS_
00260c   ec39     call    0x3872, 0        	CALL	_Assign
00260e   f01c
002610   d011     bra     0x2634           	BRA	_00728_DS_
                                           _00716_DS_:
                                           ;	.line	733; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'F') ResetToBld();	/* goto Fraisebootloader if name matchs */
002612   5000     movf    0, 0, 0          	MOVF	r0x00, W
002614   0a46     xorlw   0x46             	XORLW	0x46
002616   e103     bnz     0x261e           	BNZ	_00713_DS_
002618   ec4f     call    0x449e, 0        	CALL	_ResetToBld
00261a   f022
00261c   d00b     bra     0x2634           	BRA	_00728_DS_
                                           _00713_DS_:
                                           ;	.line	734; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'I') __asm reset __endasm; //init
00261e   5000     movf    0, 0, 0          	MOVF	r0x00, W
002620   0a49     xorlw   0x49             	XORLW	0x49
002622   e108     bnz     0x2634           	BNZ	_00728_DS_
                                           _00799_DS_:
002624   00ff     reset                    	reset	
002626   d006     bra     0x2634           	BRA	_00728_DS_
                                           _00726_DS_:
                                           ;	.line	746; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout_first = FrRXout;
002628   ca65     movff   0xa65, 0xa70     	MOVFF	_FrRXout, _FrRXout_first
00262a   fa70
                                           ; #	MOVF	r0x02, W
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00728_DS_
                                           ; #	CALL	_fraiseReceiveChar
                                           ; #	MOVFF	_FrRXout_end, _FrRXout
                                           ;	.line	747; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) {
00262c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ;	.line	749; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseReceiveChar();
00262e   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
                                           ;	.line	760; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout = FrRXout_end;
002630   ec66     call    0x36cc, 0        	CALL	_fraiseReceiveChar
002632   f01b
                                           _00728_DS_:
002634   ca6e     movff   0xa6e, 0xa65     	MOVFF	_FrRXout_end, _FrRXout
002636   fa65
                                           _00730_DS_:
002638   010a     movlb   0xa              	BANKSEL	_FrTXin
                                           ;	.line	763; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if((!FrTXempty) && (!FrTXpacket_len)) { // if there is sth to send to master and nothing in TXpacket :
00263a   5122     movf    0x22, 0, 0x1     	MOVF	_FrTXin, W, B
00263c   010a     movlb   0xa              	BANKSEL	_FrTXout
00263e   1923     xorwf   0x23, 0, 0x1     	XORWF	_FrTXout, W, B
002640   e006     bz      0x264e           	BZ	_00736_DS_
                                           _00801_DS_:
002642   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
002644   5166     movf    0x66, 0, 0x1     	MOVF	_FrTXpacket_len, W, B
002646   e103     bnz     0x264e           	BNZ	_00736_DS_
                                           ;	.line	764; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseDecodeNextTXPacket();
002648   ecc4     call    0x2788, 0        	CALL	_fraiseDecodeNextTXPacket
00264a   f013
00264c   d008     bra     0x265e           	BRA	_00739_DS_
                                           _00736_DS_:
                                           ;	.line	766; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(Serial_Is_Driver() && (!FrTXpacket_len) && TXSTAxbits.TRMT)// security:
00264e   b094     btfsc   0x94, 0, 0       	BTFSC	_TRISCbits, 0
002650   d006     bra     0x265e           	BRA	_00739_DS_
002652   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
002654   5166     movf    0x66, 0, 0x1     	MOVF	_FrTXpacket_len, W, B
                                           ;	.line	767; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
002656   e103     bnz     0x265e           	BNZ	_00739_DS_
                                           ; #	GOTO	_00739_DS_
                                           ; #	BTFSS	_TXSTAbits, 1
                                           ; #	GOTO	_00739_DS_
                                           ; #	CALL	_Serial_Init_Receiver
                                           ; #; info ==> [localregs] exit begin
                                           
                                           ; #	MOVFF	PREINC1, r0x04
                                           ;	.line	769; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;	
002658   b2ac     btfsc   0xac, 0x1, 0     	BTFSC	_TXSTAbits, 1
00265a   ec1b     call    0x4436, 0        	CALL	_Serial_Init_Receiver
00265c   f022
                                           _00739_DS_:
00265e   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002660   f004
002662   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002664   f003
002666   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002668   f002
00266a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00266c   f001
00266e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002670   f000
002672   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__ResetToBld	code
                                           _ResetToBld:
                                           ;	.line	682; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static void ResetToBld() //"F" command
00449e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0044a0   ffe5
                                           ;	.line	685; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(CompareName()) {
0044a2   ec2f     call    0x3c5e, 0        	CALL	_CompareName
0044a4   f01e
0044a6   6e00     movwf   0, 0             	MOVWF	r0x00
0044a8   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ;	.line	687; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0044aa   e101     bnz     0x44ae           	BNZ	_00703_DS_
                                           _00702_DS_:
0044ac   00ff     reset                    	reset	
                                           _00703_DS_:
0044ae   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0044b0   f000
0044b2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__Assign	code
                                           _Assign:
                                           ;	.line	664; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static void Assign() //"N" command
003872   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003874   ffe5
003876   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003878   ffe5
00387a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00387c   ffe5
                                           ;	.line	667; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetChar();
00387e   ec29     call    0x3e52, 0        	CALL	_fraiseGetChar
003880   f01f
003882   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	668; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c2 = fraiseGetChar();
003884   ec29     call    0x3e52, 0        	CALL	_fraiseGetChar
003886   f01f
003888   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           ;	.line	669; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c -= '0'; if (c > 9) c -= 'A' - '9' - 1;
00388a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00388c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00388e   0ed0     movlw   0xd0             	MOVLW	0xd0
003890   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
003892   6e00     movwf   0, 0             	MOVWF	r0x00
003894   0e0a     movlw   0xa              	MOVLW	0x0a
003896   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003898   e305     bnc     0x38a4           	BNC	_00671_DS_
00389a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00389c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00389e   0ef9     movlw   0xf9             	MOVLW	0xf9
0038a0   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
0038a2   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _00671_DS_:
                                           ;	.line	670; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c2 -= '0'; if (c2 > 9) c2 -= 'A' - '9' - 1;
0038a4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0038a6   6e02     movwf   0x2, 0           	MOVWF	r0x02
0038a8   0ed0     movlw   0xd0             	MOVLW	0xd0
0038aa   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
0038ac   6e01     movwf   0x1, 0           	MOVWF	r0x01
0038ae   0e0a     movlw   0xa              	MOVLW	0x0a
0038b0   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0038b2   e305     bnc     0x38be           	BNC	_00673_DS_
0038b4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0038b6   6e02     movwf   0x2, 0           	MOVWF	r0x02
0038b8   0ef9     movlw   0xf9             	MOVLW	0xf9
0038ba   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
0038bc   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           _00673_DS_:
                                           ;	.line	671; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if((c > 7) || (c2 > 15)) { // bad id... discard
0038be   0e08     movlw   0x8              	MOVLW	0x08
0038c0   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0038c2   e212     bc      0x38e8           	BC	_00679_DS_
0038c4   0e10     movlw   0x10             	MOVLW	0x10
                                           ; #	SUBWF	r0x01, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00675_DS_
                                           ; #	GOTO	_00679_DS_
                                           ; #	SWAPF	r0x00, W
                                           ;	.line	672; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return; 
0038c6   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           ;	.line	674; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	tmpid = c2 + (c << 4);
0038c8   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
                                           _00674_DS_:
0038ca   d00e     bra     0x38e8           	BRA	_00679_DS_
0038cc   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
0038ce   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0038d0   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0038d2   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	676; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(CompareName()) return;
0038d4   ec2f     call    0x3c5e, 0        	CALL	_CompareName
0038d6   f01e
0038d8   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00678_DS_
                                           ; #	GOTO	_00679_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	678; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSetID(tmpid);
0038da   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0038dc   e105     bnz     0x38e8           	BNZ	_00679_DS_
0038de   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0038e2   ecde     call    0x41bc, 0        	CALL	_fraiseSetID
0038e4   f020
0038e6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00679_DS_:
                                           ;	.line	679; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0038e8   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0038ea   f002
0038ec   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0038ee   f001
0038f0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0038f2   f000
0038f4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__CompareName	code
                                           _CompareName:
                                           ;	.line	632; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static char CompareName() 
003c5e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003c60   ffe5
003c62   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003c64   ffe5
003c66   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003c68   ffe5
                                           ;	.line	636; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	eei = EE_PREFIX;
003c6a   0e01     movlw   0x1              	MOVLW	0x01
003c6c   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _00636_DS_:
                                           ;	.line	637; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(c = fraiseGetChar()){
003c6e   ec29     call    0x3e52, 0        	CALL	_fraiseGetChar
003c70   f01f
003c72   6e01     movwf   0x1, 0           	MOVWF	r0x01
003c74   c001     movff   0x1, 0x2         	MOVFF	r0x01, r0x02
003c76   f002
003c78   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003c7a   e023     bz      0x3cc2           	BZ	_00638_DS_
                                           ;	.line	638; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c2 = eeReadByte(eei);
003c7c   5000     movf    0, 0, 0          	MOVF	r0x00, W
003c7e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c80   ec0d     call    0x441a, 0        	CALL	_eeReadByte
003c82   f022
003c84   6e01     movwf   0x1, 0           	MOVWF	r0x01
003c86   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	639; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c2 == 0) { //end of string
003c88   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003c8a   e110     bnz     0x3cac           	BNZ	_00631_DS_
                                           ;	.line	640; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(eei < EE_NAME) { //end of prefix
003c8c   0e0a     movlw   0xa              	MOVLW	0x0a
003c8e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003c90   e20b     bc      0x3ca8           	BC	_00628_DS_
                                           ; #	MOVLW	0x0a
                                           ; #	MOVWF	r0x00
                                           ; #	MOVLW	0x0a
                                           ;	.line	641; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	eei = EE_NAME; //goto to name first char
003c92   0e0a     movlw   0xa              	MOVLW	0x0a
                                           ;	.line	642; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c2 = eeReadByte(eei);
003c94   6e00     movwf   0, 0             	MOVWF	r0x00
003c96   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c98   ec0d     call    0x441a, 0        	CALL	_eeReadByte
003c9a   f022
003c9c   6e01     movwf   0x1, 0           	MOVWF	r0x01
003c9e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	643; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c2 == 0) { //no name?!
003ca0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003ca2   e104     bnz     0x3cac           	BNZ	_00631_DS_
                                           ;	.line	644; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return -1; 
003ca4   68e8     setf    0xe8, 0          	SETF	WREG
003ca6   d00e     bra     0x3cc4           	BRA	_00639_DS_
                                           _00628_DS_:
                                           ;	.line	648; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return -1; 
003ca8   68e8     setf    0xe8, 0          	SETF	WREG
003caa   d00c     bra     0x3cc4           	BRA	_00639_DS_
                                           _00631_DS_:
                                           ;	.line	651; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c2 != c) { //spelled name differs from device name; discard.
003cac   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003cae   1802     xorwf   0x2, 0, 0        	XORWF	r0x02, W
003cb0   e002     bz      0x3cb6           	BZ	_00633_DS_
                                           ;	.line	652; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return -1; 
003cb2   68e8     setf    0xe8, 0          	SETF	WREG
003cb4   d007     bra     0x3cc4           	BRA	_00639_DS_
                                           _00633_DS_:
                                           ;	.line	654; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	eei++;
003cb6   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
                                           ;	.line	655; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(eei > EE_NAMEMAX) { //spelled name too long; discard.
003cb8   0e1b     movlw   0x1b             	MOVLW	0x1b
003cba   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003cbc   e3d8     bnc     0x3c6e           	BNC	_00636_DS_
                                           ;	.line	656; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return -1;
003cbe   68e8     setf    0xe8, 0          	SETF	WREG
003cc0   d001     bra     0x3cc4           	BRA	_00639_DS_
                                           _00638_DS_:
                                           ;	.line	660; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return 0;
003cc2   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00639_DS_:
003cc4   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003cc6   f002
003cc8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003cca   f001
003ccc   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003cce   f000
003cd0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSendCopy	code
                                           _fraiseSendCopy:
                                           ;	.line	614; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSendCopy()
003320   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003322   ffe5
003324   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003326   ffe5
003328   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00332a   ffe5
00332c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00332e   ffe5
                                           ;	.line	618; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	l = (FrRXout - FrRXout_first)%sizeof(FrRXbuf);
003330   ca65     movff   0xa65, 0         	MOVFF	_FrRXout, r0x00
003332   f000
003334   6a01     clrf    0x1, 0           	CLRF	r0x01
003336   ca70     movff   0xa70, 0x2       	MOVFF	_FrRXout_first, r0x02
003338   f002
00333a   6a03     clrf    0x3, 0           	CLRF	r0x03
00333c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00333e   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
003340   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003342   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
003344   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003346   0e80     movlw   0x80             	MOVLW	0x80
003348   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00334a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00334c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00334e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003350   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003352   ecce     call    0x2d9c, 0        	CALL	__modsint
003354   f016
003356   6e00     movwf   0, 0             	MOVWF	r0x00
003358   0e04     movlw   0x4              	MOVLW	0x04
00335a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	619; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	l--;
00335c   0600     decf    0, 0x1, 0        	DECF	r0x00, F
                                           ;	.line	620; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	i = FrRXout_first;
00335e   ca70     movff   0xa70, 0x1       	MOVFF	_FrRXout_first, r0x01
003360   f001
                                           ;	.line	621; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	putchar('C'); putchar(' '); 
003362   0e43     movlw   0x43             	MOVLW	0x43
003364   ec9d     call    0x3d3a, 0        	CALL	_putchar
003366   f01e
003368   0e20     movlw   0x20             	MOVLW	0x20
00336a   ec9d     call    0x3d3a, 0        	CALL	_putchar
00336c   f01e
                                           _00604_DS_:
                                           ;	.line	623; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(l > 0) {
00336e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003370   e020     bz      0x33b2           	BZ	_00607_DS_
                                           ;	.line	624; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	printf("%d ", FrRXbuf[i]);
003372   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
003374   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
003376   6e02     movwf   0x2, 0           	MOVWF	r0x02
003378   6a03     clrf    0x3, 0           	CLRF	r0x03
00337a   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
00337c   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
00337e   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
003380   ffe9
003382   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
003384   ffea
003386   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
003388   f002
00338a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00338c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00338e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003390   0e00     movlw   0                	MOVLW	UPPER(___str_0)
003392   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003394   0e44     movlw   0x44             	MOVLW	HIGH(___str_0)
003396   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003398   0e4e     movlw   0x4e             	MOVLW	LOW(___str_0)
00339a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00339c   ecfc     call    0x39f8, 0        	CALL	_printf
00339e   f01c
0033a0   0e05     movlw   0x5              	MOVLW	0x05
0033a2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	625; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	i++;
0033a4   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
                                           ;	.line	626; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(i == sizeof(FrRXbuf)) i = 0;
0033a6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0033a8   0a80     xorlw   0x80             	XORLW	0x80
0033aa   e101     bnz     0x33ae           	BNZ	_00603_DS_
0033ac   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00603_DS_:
                                           ;	.line	627; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	l--;
0033ae   0600     decf    0, 0x1, 0        	DECF	r0x00, F
0033b0   d7de     bra     0x336e           	BRA	_00604_DS_
                                           _00607_DS_:
0033b2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0033b4   f003
0033b6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0033b8   f002
0033ba   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0033bc   f001
0033be   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0033c0   f000
0033c2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetAt	code
                                           _fraiseGetAt:
                                           ;	.line	609; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	unsigned char fraiseGetAt(unsigned char i)
003be8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003bea   ffe5
003bec   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003bee   ffd9
003bf0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003bf2   ffe5
003bf4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003bf6   ffe5
003bf8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003bfa   ffe5
003bfc   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003bfe   ffe5
003c00   0e02     movlw   0x2              	MOVLW	0x02
003c02   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003c04   f000
                                           ;	.line	611; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return FrRXbuf[(i + FrRXout_first)%sizeof(FrRXbuf)];
003c06   6a01     clrf    0x1, 0           	CLRF	r0x01
003c08   ca70     movff   0xa70, 0x2       	MOVFF	_FrRXout_first, r0x02
003c0a   f002
003c0c   6a03     clrf    0x3, 0           	CLRF	r0x03
003c0e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c10   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003c12   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003c14   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003c16   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003c18   0e80     movlw   0x80             	MOVLW	0x80
003c1a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c1c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003c1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c20   5000     movf    0, 0, 0          	MOVF	r0x00, W
003c22   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c24   ecce     call    0x2d9c, 0        	CALL	__modsint
003c26   f016
003c28   6e00     movwf   0, 0             	MOVWF	r0x00
003c2a   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003c2c   f001
003c2e   0e04     movlw   0x4              	MOVLW	0x04
003c30   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003c32   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
003c34   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003c36   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
003c38   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003c3a   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003c3c   ffe9
003c3e   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
003c40   ffea
003c42   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
003c44   f000
003c46   5000     movf    0, 0, 0          	MOVF	r0x00, W
003c48   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003c4a   f003
003c4c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003c4e   f002
003c50   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003c52   f001
003c54   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003c56   f000
003c58   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003c5a   ffd9
003c5c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetIndex	code
                                           _fraiseGetIndex:
00454a   010a     movlb   0xa              	BANKSEL	_FrRXout
                                           ;	.line	606; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return FrRXout;
00454c   5165     movf    0x65, 0, 0x1     	MOVF	_FrRXout, W, B
00454e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetLen	code
                                           _fraiseGetLen:
004550   010a     movlb   0xa              	BANKSEL	_FrRXout_len
                                           ;	.line	601; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return FrRXout_len;
004552   516f     movf    0x6f, 0, 0x1     	MOVF	_FrRXout_len, W, B
004554   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraisePeekChar	code
                                           _fraisePeekChar:
                                           ;	.line	594; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	unsigned char fraisePeekChar()
00421c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00421e   ffe5
004220   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004222   ffe5
                                           ;	.line	596; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return FrRXbuf[FrRXout];
004224   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
004226   010a     movlb   0xa              	BANKSEL	_FrRXout
004228   2565     addwf   0x65, 0, 0x1     	ADDWF	_FrRXout, W, B
00422a   6e00     movwf   0, 0             	MOVWF	r0x00
00422c   6a01     clrf    0x1, 0           	CLRF	r0x01
00422e   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
004230   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004232   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004234   ffe9
004236   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
004238   ffea
00423a   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
00423c   f000
00423e   5000     movf    0, 0, 0          	MOVF	r0x00, W
004240   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004242   f001
004244   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004246   f000
004248   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetChar	code
                                           _fraiseGetChar:
                                           ;	.line	584; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	unsigned char fraiseGetChar()
003e52   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003e54   ffe5
003e56   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003e58   ffe5
003e5a   010a     movlb   0xa              	BANKSEL	_FrRXout
                                           ;	.line	588; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if((FrRXout == FrRXout_end) || (FrRXout == FrRXin)) return 0; //underflow error
003e5c   5165     movf    0x65, 0, 0x1     	MOVF	_FrRXout, W, B
003e5e   010a     movlb   0xa              	BANKSEL	_FrRXout_end
003e60   196e     xorwf   0x6e, 0, 0x1     	XORWF	_FrRXout_end, W, B
003e62   e005     bz      0x3e6e           	BZ	_00559_DS_
                                           _00573_DS_:
003e64   010a     movlb   0xa              	BANKSEL	_FrRXout
003e66   5165     movf    0x65, 0, 0x1     	MOVF	_FrRXout, W, B
003e68   010a     movlb   0xa              	BANKSEL	_FrRXin
003e6a   1964     xorwf   0x64, 0, 0x1     	XORWF	_FrRXin, W, B
003e6c   e102     bnz     0x3e72           	BNZ	_00560_DS_
                                           _00559_DS_:
003e6e   6ae8     clrf    0xe8, 0          	CLRF	WREG
003e70   d015     bra     0x3e9c           	BRA	_00564_DS_
                                           _00560_DS_:
                                           ;	.line	589; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = FrRXbuf[FrRXout++];
003e72   ca65     movff   0xa65, 0         	MOVFF	_FrRXout, r0x00
003e74   f000
003e76   010a     movlb   0xa              	BANKSEL	_FrRXout
003e78   2b65     incf    0x65, 0x1, 0x1   	INCF	_FrRXout, F, B
003e7a   6a01     clrf    0x1, 0           	CLRF	r0x01
003e7c   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
003e7e   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003e80   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
003e82   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003e84   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003e86   ffe9
003e88   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
003e8a   ffea
003e8c   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
003e8e   f000
                                           ; removed redundant BANKSEL
                                           ;	.line	590; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXout == sizeof(FrRXbuf)) FrRXout = 0;
003e90   5165     movf    0x65, 0, 0x1     	MOVF	_FrRXout, W, B
003e92   0a80     xorlw   0x80             	XORLW	0x80
003e94   e102     bnz     0x3e9a           	BNZ	_00563_DS_
                                           _00577_DS_:
003e96   010a     movlb   0xa              	BANKSEL	_FrRXout
003e98   6b65     clrf    0x65, 0x1        	CLRF	_FrRXout, B
                                           _00563_DS_:
                                           ;	.line	591; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return c;
003e9a   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           _00564_DS_:
003e9c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003e9e   f001
003ea0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003ea2   f000
003ea4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseISR	code
                                           _fraiseISR:
                                           ;	.line	467; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseISR(void)
0018a2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0018a4   ffe5
0018a6   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0018a8   ffe5
                                           ; #	MOVF	_FrInterruptEnabled, W, B
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00391_DS_
                                           ; #	GOTO	_00457_DS_
                                           ; #	BTFSS	_PIE1bits, 4
0018aa   010a     movlb   0xa              	BANKSEL	_FrInterruptEnabled
                                           ;	.line	471; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrInterruptEnabled == 0) return;
0018ac   5125     movf    0x25, 0, 0x1     	MOVF	_FrInterruptEnabled, W, B
                                           ;	.line	473; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(TXxIE && TXxIF) {
0018ae   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
0018b0   d0f7     bra     0x1aa0           	BRA	_00457_DS_
0018b2   a89d     btfss   0x9d, 0x4, 0     	BTFSS	_PIE1bits, 4
0018b4   d01d     bra     0x18f0           	BRA	_00395_DS_
0018b6   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
0018b8   d01b     bra     0x18f0           	BRA	_00395_DS_
0018ba   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
                                           ;	.line	474; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrTXpacket_i == FrTXpacket_len) { //if end of the packet:
0018bc   5169     movf    0x69, 0, 0x1     	MOVF	_FrTXpacket_i, W, B
0018be   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
0018c0   1966     xorwf   0x66, 0, 0x1     	XORWF	_FrTXpacket_len, W, B
0018c2   e105     bnz     0x18ce           	BNZ	_00393_DS_
                                           ;	.line	475; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0018c4   ec1b     call    0x4436, 0        	CALL	_Serial_Init_Receiver
0018c6   f022
0018c8   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
                                           ;	.line	476; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXpacket_len = 0;
0018ca   6b66     clrf    0x66, 0x1        	CLRF	_FrTXpacket_len, B
                                           ;	.line	477; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0018cc   d0e9     bra     0x1aa0           	BRA	_00457_DS_
                                           _00393_DS_:
                                           ;	.line	479; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = FrTXpacket[FrTXpacket_i];
0018ce   0e00     movlw   0                	MOVLW	LOW(_FrTXpacket)
0018d0   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
0018d2   2569     addwf   0x69, 0, 0x1     	ADDWF	_FrTXpacket_i, W, B
0018d4   6e00     movwf   0, 0             	MOVWF	r0x00
0018d6   6a01     clrf    0x1, 0           	CLRF	r0x01
0018d8   0e04     movlw   0x4              	MOVLW	HIGH(_FrTXpacket)
0018da   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0018dc   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0018de   ffe9
0018e0   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0018e2   ffea
0018e4   cfef     movff   0xfef, 0xa62     	MOVFF	INDF0, _fraiseISR_c_1_112
0018e6   fa62
                                           ; removed redundant BANKSEL
                                           ;	.line	480; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXpacket_i++;
0018e8   2b69     incf    0x69, 0x1, 0x1   	INCF	_FrTXpacket_i, F, B
                                           ;	.line	481; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = c; // send next byte
0018ea   ca62     movff   0xa62, 0xfad     	MOVFF	_fraiseISR_c_1_112, _TXREG
0018ec   ffad
                                           ;	.line	483; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0018ee   d0d8     bra     0x1aa0           	BRA	_00457_DS_
                                           _00395_DS_:
                                           ;	.line	486; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(RCxIE && RCxIF) {
0018f0   aa9d     btfss   0x9d, 0x5, 0     	BTFSS	_PIE1bits, 5
0018f2   d0d6     bra     0x1aa0           	BRA	_00457_DS_
0018f4   aa9e     btfss   0x9e, 0x5, 0     	BTFSS	_PIR1bits, 5
0018f6   d0d4     bra     0x1aa0           	BRA	_00457_DS_
                                           ;	.line	487; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(RCSTAxbits.OERR){
0018f8   a2ab     btfss   0xab, 0x1, 0     	BTFSS	_RCSTAbits, 1
0018fa   d005     bra     0x1906           	BRA	_00398_DS_
0018fc   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	488; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_OERR = 1;
0018fe   8167     bsf     0x67, 0, 0x1     	BSF	_FraiseStatus, 0, B
                                           ;	.line	489; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
001900   ec1b     call    0x4436, 0        	CALL	_Serial_Init_Receiver
001902   f022
                                           ;	.line	490; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001904   d0cd     bra     0x1aa0           	BRA	_00457_DS_
                                           _00398_DS_:
                                           ;	.line	492; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(RCSTAxbits.FERR){
001906   a4ab     btfss   0xab, 0x2, 0     	BTFSS	_RCSTAbits, 2
001908   d005     bra     0x1914           	BRA	_00400_DS_
00190a   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	493; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_FERR = 1;
00190c   8367     bsf     0x67, 0x1, 0x1   	BSF	_FraiseStatus, 1, B
                                           ;	.line	494; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
00190e   ec1b     call    0x4436, 0        	CALL	_Serial_Init_Receiver
001910   f022
                                           ;	.line	495; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001912   d0c6     bra     0x1aa0           	BRA	_00457_DS_
                                           _00400_DS_:
                                           ;	.line	498; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if (RCSTAxbits.RX9D) { // -------  address : 
001914   a0ab     btfss   0xab, 0, 0       	BTFSS	_RCSTAbits, 0
001916   d03e     bra     0x1994           	BRA	_00412_DS_
                                           ;	.line	499; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = RCREGx; // get byte
001918   cfae     movff   0xfae, 0xa62     	MOVFF	_RCREG, _fraiseISR_c_1_112
00191a   fa62
                                           ;	.line	500; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == (FrID | 128)) { // poll signal
00191c   0e80     movlw   0x80             	MOVLW	0x80
00191e   010a     movlb   0xa              	BANKSEL	_FrID
001920   1126     iorwf   0x26, 0, 0x1     	IORWF	_FrID, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	_fraiseISR_c_1_112, W, B
                                           ; #	XORWF	r0x00, W
001922   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
001924   1962     xorwf   0x62, 0, 0x1     	XORWF	_fraiseISR_c_1_112, W, B
001926   e104     bnz     0x1930           	BNZ	_00402_DS_
                                           _00535_DS_:
001928   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	501; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_POLL = 1;
00192a   8967     bsf     0x67, 0x4, 0x1   	BSF	_FraiseStatus, 4, B
                                           ;	.line	502; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 0;
00192c   96ab     bcf     0xab, 0x3, 0     	BCF	_RCSTAbits, 3
                                           ;	.line	503; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
00192e   d0b8     bra     0x1aa0           	BRA	_00457_DS_
                                           _00402_DS_:
001930   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
                                           ;	.line	505; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if ((c == 0) || (c == FrID)) {
001932   5162     movf    0x62, 0, 0x1     	MOVF	_fraiseISR_c_1_112, W, B
001934   e004     bz      0x193e           	BZ	_00408_DS_
                                           ; removed redundant BANKSEL
001936   5162     movf    0x62, 0, 0x1     	MOVF	_fraiseISR_c_1_112, W, B
001938   010a     movlb   0xa              	BANKSEL	_FrID
00193a   1926     xorwf   0x26, 0, 0x1     	XORWF	_FrID, W, B
00193c   e127     bnz     0x198c           	BNZ	_00409_DS_
                                           _00408_DS_:
00193e   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	506; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_POLL = 0;
001940   9967     bcf     0x67, 0x4, 0x1   	BCF	_FraiseStatus, 4, B
                                           ;	.line	507; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 0;
001942   96ab     bcf     0xab, 0x3, 0     	BCF	_RCSTAbits, 3
001944   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
                                           ;	.line	508; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c) FraiseStatus.RX_BRDCST = 0;
001946   5162     movf    0x62, 0, 0x1     	MOVF	_fraiseISR_c_1_112, W, B
001948   e003     bz      0x1950           	BZ	_00404_DS_
00194a   010a     movlb   0xa              	BANKSEL	_FraiseStatus
00194c   9767     bcf     0x67, 0x3, 0x1   	BCF	_FraiseStatus, 3, B
00194e   d002     bra     0x1954           	BRA	_00405_DS_
                                           _00404_DS_:
001950   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	509; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else FraiseStatus.RX_BRDCST = 1;
001952   8767     bsf     0x67, 0x3, 0x1   	BSF	_FraiseStatus, 3, B
                                           _00405_DS_:
                                           ;	.line	511; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXchksum = c;
001954   ca62     movff   0xa62, 0xa6b     	MOVFF	_fraiseISR_c_1_112, _FrRXchksum
001956   fa6b
                                           ;	.line	512; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_tmp = FrRXin;
001958   ca64     movff   0xa64, 0xa6c     	MOVFF	_FrRXin, _FrRXin_tmp
00195a   fa6c
00195c   010a     movlb   0xa              	BANKSEL	_FrRXin
                                           ;	.line	513; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end = FrRXin - 1; // protect FrRXin_end
00195e   0564     decf    0x64, 0, 0x1     	DECF	_FrRXin, W, B
001960   010a     movlb   0xa              	BANKSEL	_FrRXin_end
001962   6f6d     movwf   0x6d, 0x1        	MOVWF	_FrRXin_end, B
                                           ;	.line	514; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXbuf[FrRXin_tmp] = c;
001964   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
001966   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
001968   256c     addwf   0x6c, 0, 0x1     	ADDWF	_FrRXin_tmp, W, B
00196a   6e00     movwf   0, 0             	MOVWF	r0x00
00196c   6a01     clrf    0x1, 0           	CLRF	r0x01
00196e   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
001970   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
001972   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001974   ffe9
001976   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001978   ffea
00197a   ca62     movff   0xa62, 0xfef     	MOVFF	_fraiseISR_c_1_112, INDF0
00197c   ffef
                                           ; removed redundant BANKSEL
                                           ;	.line	515; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_tmp++;
00197e   2b6c     incf    0x6c, 0x1, 0x1   	INCF	_FrRXin_tmp, F, B
                                           ;	.line	516; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == sizeof(FrRXbuf)) FrRXin_tmp = 0;
001980   516c     movf    0x6c, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
001982   0a80     xorlw   0x80             	XORLW	0x80
001984   e102     bnz     0x198a           	BNZ	_00407_DS_
                                           _00539_DS_:
001986   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
001988   6b6c     clrf    0x6c, 0x1        	CLRF	_FrRXin_tmp, B
                                           _00407_DS_:
                                           ;	.line	517; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
00198a   d08a     bra     0x1aa0           	BRA	_00457_DS_
                                           _00409_DS_:
00198c   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	519; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_POLL= 0;
00198e   9967     bcf     0x67, 0x4, 0x1   	BCF	_FraiseStatus, 4, B
                                           ;	.line	520; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1;
001990   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	521; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001992   d086     bra     0x1aa0           	BRA	_00457_DS_
                                           _00412_DS_:
                                           ;	.line	524; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = RCREGx; // get byte
001994   cfae     movff   0xfae, 0xa62     	MOVFF	_RCREG, _fraiseISR_c_1_112
001996   fa62
001998   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	525; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FraiseStatus.RX_POLL) { // had a poll signal
00199a   a967     btfss   0x67, 0x4, 0x1   	BTFSS	_FraiseStatus, 4, B
00199c   d019     bra     0x19d0           	BRA	_00425_DS_
                                           ;	.line	526; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == (FrID | 128)){ 	// confirmation byte of poll signal:
00199e   0e80     movlw   0x80             	MOVLW	0x80
0019a0   010a     movlb   0xa              	BANKSEL	_FrID
0019a2   1126     iorwf   0x26, 0, 0x1     	IORWF	_FrID, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	_fraiseISR_c_1_112, W, B
                                           ; #	XORWF	r0x00, W
0019a4   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
0019a6   1962     xorwf   0x62, 0, 0x1     	XORWF	_fraiseISR_c_1_112, W, B
0019a8   e111     bnz     0x19cc           	BNZ	_00423_DS_
                                           ;	.line	528; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
0019aa   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
0019ac   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
0019ae   9094     bcf     0x94, 0, 0       	BCF	_TRISCbits, 0
0019b0   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
                                           ;	.line	529; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrTXpacket_len == 0) {
0019b2   5166     movf    0x66, 0, 0x1     	MOVF	_FrTXpacket_len, W, B
0019b4   e104     bnz     0x19be           	BNZ	_00420_DS_
                                           ;	.line	530; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = 0;
0019b6   6aad     clrf    0xad, 0          	CLRF	_TXREG
                                           ;	.line	531; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0019b8   ec1b     call    0x4436, 0        	CALL	_Serial_Init_Receiver
0019ba   f022
0019bc   d007     bra     0x19cc           	BRA	_00423_DS_
                                           _00420_DS_:
                                           ;	.line	533; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendLaunch();
0019be   c400     movff   0x400, 0xfad     	MOVFF	_FrTXpacket, _TXREG
0019c0   ffad
0019c2   0e01     movlw   0x1              	MOVLW	0x01
0019c4   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
0019c6   6f69     movwf   0x69, 0x1        	MOVWF	_FrTXpacket_i, B
0019c8   889d     bsf     0x9d, 0x4, 0     	BSF	_PIE1bits, 4
                                           ;	.line	534; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0019ca   d06a     bra     0x1aa0           	BRA	_00457_DS_
                                           _00423_DS_:
                                           ;	.line	537; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1;
0019cc   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	538; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
0019ce   d068     bra     0x1aa0           	BRA	_00457_DS_
                                           _00425_DS_:
0019d0   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
                                           ;	.line	541; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXchksum += c;
0019d2   5162     movf    0x62, 0, 0x1     	MOVF	_fraiseISR_c_1_112, W, B
0019d4   010a     movlb   0xa              	BANKSEL	_FrRXchksum
0019d6   276b     addwf   0x6b, 0x1, 0x1   	ADDWF	_FrRXchksum, F, B
0019d8   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
                                           ;	.line	543; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == FrRXin_end) {// RX packet complete
0019da   516c     movf    0x6c, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
0019dc   010a     movlb   0xa              	BANKSEL	_FrRXin_end
0019de   196d     xorwf   0x6d, 0, 0x1     	XORWF	_FrRXin_end, W, B
0019e0   e11b     bnz     0x1a18           	BNZ	_00446_DS_
                                           _00544_DS_:
0019e2   010a     movlb   0xa              	BANKSEL	_FrRXchksum
                                           ;	.line	544; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!FrRXchksum) { // RX packet checksum ok 
0019e4   516b     movf    0x6b, 0, 0x1     	MOVF	_FrRXchksum, W, B
0019e6   e10c     bnz     0x1a00           	BNZ	_00443_DS_
                                           ;	.line	545; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin = FrRXin_tmp; //validation of packet
0019e8   ca6c     movff   0xa6c, 0xa64     	MOVFF	_FrRXin_tmp, _FrRXin
0019ea   fa64
0019ec   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	546; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!FraiseStatus.RX_BRDCST){
0019ee   b767     btfsc   0x67, 0x3, 0x1   	BTFSC	_FraiseStatus, 3, B
0019f0   d012     bra     0x1a16           	BRA	_00444_DS_
                                           ;	.line	547; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
0019f2   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
0019f4   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
0019f6   9094     bcf     0x94, 0, 0       	BCF	_TRISCbits, 0
                                           ;	.line	548; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = 0; //Acknowldge
0019f8   6aad     clrf    0xad, 0          	CLRF	_TXREG
                                           ;	.line	549; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0019fa   ec1b     call    0x4436, 0        	CALL	_Serial_Init_Receiver
0019fc   f022
0019fe   d00b     bra     0x1a16           	BRA	_00444_DS_
                                           _00443_DS_:
001a00   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	553; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.RX_SERR = 1;
001a02   8567     bsf     0x67, 0x2, 0x1   	BSF	_FraiseStatus, 2, B
                                           ;	.line	554; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!FraiseStatus.RX_BRDCST){
001a04   b767     btfsc   0x67, 0x3, 0x1   	BTFSC	_FraiseStatus, 3, B
001a06   d007     bra     0x1a16           	BRA	_00444_DS_
                                           ;	.line	555; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
001a08   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
001a0a   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
001a0c   9094     bcf     0x94, 0, 0       	BCF	_TRISCbits, 0
                                           ;	.line	556; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = 1; //Checksum nack
001a0e   0e01     movlw   0x1              	MOVLW	0x01
001a10   6ead     movwf   0xad, 0          	MOVWF	_TXREG
                                           ;	.line	557; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
001a12   ec1b     call    0x4436, 0        	CALL	_Serial_Init_Receiver
001a14   f022
                                           _00444_DS_:
                                           ;	.line	560; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001a16   d044     bra     0x1aa0           	BRA	_00457_DS_
                                           _00446_DS_:
001a18   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
                                           ;	.line	563; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if((FrRXin_tmp == FrRXout)&&(FrRXout != FrRXin)) { //collision case : RX buffer full !
001a1a   516c     movf    0x6c, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
001a1c   010a     movlb   0xa              	BANKSEL	_FrRXout
001a1e   1965     xorwf   0x65, 0, 0x1     	XORWF	_FrRXout, W, B
001a20   e108     bnz     0x1a32           	BNZ	_00448_DS_
                                           _00546_DS_:
001a22   010a     movlb   0xa              	BANKSEL	_FrRXout
001a24   5165     movf    0x65, 0, 0x1     	MOVF	_FrRXout, W, B
001a26   010a     movlb   0xa              	BANKSEL	_FrRXin
001a28   1964     xorwf   0x64, 0, 0x1     	XORWF	_FrRXin, W, B
001a2a   e003     bz      0x1a32           	BZ	_00448_DS_
                                           ;	.line	564; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver(); // discard current packet... TODO:send an buffer full nack (2)
001a2c   ec1b     call    0x4436, 0        	CALL	_Serial_Init_Receiver
001a2e   f022
                                           ;	.line	565; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001a30   d037     bra     0x1aa0           	BRA	_00457_DS_
                                           _00448_DS_:
                                           ;	.line	568; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c2 = (FrRXin + 1) % sizeof(FrRXbuf);
001a32   ca64     movff   0xa64, 0         	MOVFF	_FrRXin, r0x00
001a34   f000
001a36   6a01     clrf    0x1, 0           	CLRF	r0x01
001a38   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
001a3a   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
001a3c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
001a3e   0e80     movlw   0x80             	MOVLW	0x80
001a40   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a42   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001a44   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a46   5000     movf    0, 0, 0          	MOVF	r0x00, W
001a48   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001a4a   ecce     call    0x2d9c, 0        	CALL	__modsint
001a4c   f016
001a4e   6e00     movwf   0, 0             	MOVWF	r0x00
001a50   0e04     movlw   0x4              	MOVLW	0x04
001a52   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001a54   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; #	MOVWF	_fraiseISR_c2_1_112, B
                                           ; #	MOVF	_FrRXin_tmp, W, B
                                           ; #	XORWF	_fraiseISR_c2_1_112, W, B
001a56   010a     movlb   0xa              	BANKSEL	_fraiseISR_c2_1_112
                                           ;	.line	569; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == c2) { //FrRXin_tmp == (FrRXin + 1): first byte following address = data length...
001a58   6f63     movwf   0x63, 0x1        	MOVWF	_fraiseISR_c2_1_112, B
001a5a   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
001a5c   196c     xorwf   0x6c, 0, 0x1     	XORWF	_FrRXin_tmp, W, B
001a5e   e10c     bnz     0x1a78           	BNZ	_00451_DS_
                                           ;	.line	570; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end = (c & 31);
001a60   0e1f     movlw   0x1f             	MOVLW	0x1f
001a62   010a     movlb   0xa              	BANKSEL	_fraiseISR_c_1_112
001a64   1562     andwf   0x62, 0, 0x1     	ANDWF	_fraiseISR_c_1_112, W, B
001a66   010a     movlb   0xa              	BANKSEL	_FrRXin_end
001a68   6f6d     movwf   0x6d, 0x1        	MOVWF	_FrRXin_end, B
                                           ;	.line	571; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end += 2;
001a6a   2b6d     incf    0x6d, 0x1, 0x1   	INCF	_FrRXin_end, F, B
001a6c   2b6d     incf    0x6d, 0x1, 0x1   	INCF	_FrRXin_end, F, B
001a6e   010a     movlb   0xa              	BANKSEL	_FrRXin
                                           ;	.line	572; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end += FrRXin;
001a70   5164     movf    0x64, 0, 0x1     	MOVF	_FrRXin, W, B
001a72   010a     movlb   0xa              	BANKSEL	_FrRXin_end
001a74   276d     addwf   0x6d, 0x1, 0x1   	ADDWF	_FrRXin_end, F, B
                                           ;	.line	573; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin_end %= sizeof(FrRXbuf);
001a76   9f6d     bcf     0x6d, 0x7, 0x1   	BCF	_FrRXin_end, 7, B
                                           _00451_DS_:
                                           ;	.line	576; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXbuf[FrRXin_tmp++] = c;
001a78   ca6c     movff   0xa6c, 0         	MOVFF	_FrRXin_tmp, r0x00
001a7a   f000
001a7c   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
001a7e   2b6c     incf    0x6c, 0x1, 0x1   	INCF	_FrRXin_tmp, F, B
001a80   6a01     clrf    0x1, 0           	CLRF	r0x01
001a82   0e60     movlw   0x60             	MOVLW	LOW(_FrRXbuf)
001a84   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
001a86   0e00     movlw   0                	MOVLW	HIGH(_FrRXbuf)
001a88   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
001a8a   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001a8c   ffe9
001a8e   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001a90   ffea
001a92   ca62     movff   0xa62, 0xfef     	MOVFF	_fraiseISR_c_1_112, INDF0
001a94   ffef
                                           ; removed redundant BANKSEL
                                           ;	.line	577; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrRXin_tmp == sizeof(FrRXbuf)) FrRXin_tmp = 0; //ring buffer index
001a96   516c     movf    0x6c, 0, 0x1     	MOVF	_FrRXin_tmp, W, B
001a98   0a80     xorlw   0x80             	XORLW	0x80
001a9a   e102     bnz     0x1aa0           	BNZ	_00457_DS_
                                           _00554_DS_:
001a9c   010a     movlb   0xa              	BANKSEL	_FrRXin_tmp
001a9e   6b6c     clrf    0x6c, 0x1        	CLRF	_FrRXin_tmp, B
                                           _00457_DS_:
                                           ;	.line	578; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
001aa0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
001aa2   f001
001aa4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
001aa6   f000
001aa8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSendBroadcast	code
                                           _fraiseSendBroadcast:
                                           ;	.line	420; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSendBroadcast(const unsigned char *buf, unsigned char len)
0029aa   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0029ac   ffe5
0029ae   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0029b0   ffd9
0029b2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0029b4   ffe5
0029b6   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0029b8   ffe5
0029ba   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0029bc   ffe5
0029be   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0029c0   ffe5
0029c2   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0029c4   ffe5
0029c6   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0029c8   ffe5
0029ca   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0029cc   ffe5
0029ce   0e02     movlw   0x2              	MOVLW	0x02
0029d0   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0029d2   f000
0029d4   0e03     movlw   0x3              	MOVLW	0x03
0029d6   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0029d8   f001
0029da   0e04     movlw   0x4              	MOVLW	0x04
0029dc   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0029de   f002
0029e0   0e05     movlw   0x5              	MOVLW	0x05
0029e2   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
0029e4   f003
                                           ;	.line	422; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	unsigned char i = len;
0029e6   c003     movff   0x3, 0x4         	MOVFF	r0x03, r0x04
0029e8   f004
                                           ;	.line	423; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	unsigned char ischar = 0;
0029ea   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           ; #	MOVF	r0x03, W
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00294_DS_
                                           ; #	GOTO	_00327_DS_
                                           ; #	MOVFF	r0x00, FSR0L
                                           ;	.line	426; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!i) return;
0029ec   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ;	.line	427; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(*buf == 'C') {
0029ee   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
0029f0   d04f     bra     0x2a90           	BRA	_00327_DS_
0029f2   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0029f4   ffe9
0029f6   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0029f8   fff3
0029fa   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0029fc   eccd     call    0x439a, 0        	CALL	__gptrget1
0029fe   f021
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
002a00   6e06     movwf   0x6, 0           	MOVWF	r0x06
002a02   0a43     xorlw   0x43             	XORLW	0x43
002a04   e103     bnz     0x2a0c           	BNZ	_00296_DS_
                                           ;	.line	428; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	ischar = 1;
002a06   0e01     movlw   0x1              	MOVLW	0x01
002a08   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           ;	.line	429; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	len |= 128;
002a0a   8e03     bsf     0x3, 0x7, 0      	BSF	r0x03, 7
                                           _00296_DS_:
                                           ;	.line	432; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	i--;
002a0c   0604     decf    0x4, 0x1, 0      	DECF	r0x04, F
                                           ;	.line	433; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	buf++;
002a0e   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002a10   e302     bnc     0x2a16           	BNC	_00384_DS_
002a12   4a01     infsnz  0x1, 0x1, 0      	INFSNZ	r0x01, F
002a14   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
                                           _00384_DS_:
                                           ;	.line	434; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Driver();
002a16   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
002a18   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
002a1a   9094     bcf     0x94, 0, 0       	BCF	_TRISCbits, 0
                                           ;	.line	435; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
002a1c   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           _00303_DS_:
                                           ;	.line	437; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(TXxIF == 0);
002a1e   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
002a20   d7fe     bra     0x2a1e           	BRA	_00303_DS_
                                           ;	.line	439; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9D = 1; 	// address byte
002a22   80ac     bsf     0xac, 0, 0       	BSF	_TXSTAbits, 0
                                           ;	.line	440; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	chksum += (TXREGx = 0);	// adress is null = broadcast
002a24   6aad     clrf    0xad, 0          	CLRF	_TXREG
002a26   0000     nop                      	nop	
                                           _00306_DS_:
002a28   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
002a2a   d7fe     bra     0x2a28           	BRA	_00306_DS_
                                           ;	.line	443; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9D = 0;
002a2c   90ac     bcf     0xac, 0, 0       	BCF	_TXSTAbits, 0
                                           ;	.line	445; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	chksum += (TXREGx = len);
002a2e   c003     movff   0x3, 0xfad       	MOVFF	r0x03, _TXREG
002a30   ffad
002a32   0000     nop                      	nop	
                                           _00309_DS_:
002a34   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
002a36   d7fe     bra     0x2a34           	BRA	_00309_DS_
                                           ;	.line	448; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) chksum += (TXREGx = 'B');
002a38   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002a3a   e004     bz      0x2a44           	BZ	_00313_DS_
                                           ; #	MOVLW	0x42
                                           ; #	MOVWF	_TXREG
                                           ; #	MOVLW	0x42
002a3c   0e42     movlw   0x42             	MOVLW	0x42
002a3e   6ead     movwf   0xad, 0          	MOVWF	_TXREG
002a40   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
002a42   d004     bra     0x2a4c           	BRA	_00318_DS_
                                           _00313_DS_:
                                           ;	.line	449; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else chksum += (TXREGx = 'b');
002a44   0e62     movlw   0x62             	MOVLW	0x62
002a46   6ead     movwf   0xad, 0          	MOVWF	_TXREG
002a48   0e62     movlw   0x62             	MOVLW	0x62
002a4a   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
                                           _00318_DS_:
                                           ;	.line	451; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(i) {
002a4c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002a4e   e015     bz      0x2a7a           	BZ	_00320_DS_
002a50   0000     nop                      	nop	
                                           _00315_DS_:
002a52   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
002a54   d7fe     bra     0x2a52           	BRA	_00315_DS_
                                           ;	.line	453; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	chksum += (TXREGx = *buf);
002a56   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002a58   ffe9
002a5a   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
002a5c   fff3
002a5e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002a60   eccd     call    0x439a, 0        	CALL	__gptrget1
002a62   f021
002a64   6e05     movwf   0x5, 0           	MOVWF	r0x05
002a66   c005     movff   0x5, 0xfad       	MOVFF	r0x05, _TXREG
002a68   ffad
002a6a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002a6c   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
                                           ;	.line	454; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	i--;
002a6e   0604     decf    0x4, 0x1, 0      	DECF	r0x04, F
                                           ;	.line	455; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	buf++;
002a70   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002a72   e302     bnc     0x2a78           	BNC	_00385_DS_
002a74   4a01     infsnz  0x1, 0x1, 0      	INFSNZ	r0x01, F
002a76   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
                                           _00385_DS_:
002a78   d7e9     bra     0x2a4c           	BRA	_00318_DS_
                                           _00320_DS_:
002a7a   0000     nop                      	nop	
                                           _00321_DS_:
002a7c   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
002a7e   d7fe     bra     0x2a7c           	BRA	_00321_DS_
                                           ;	.line	459; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXREGx = -chksum;
002a80   1c03     comf    0x3, 0, 0        	COMF	r0x03, W
002a82   6ead     movwf   0xad, 0          	MOVWF	_TXREG
002a84   2aad     incf    0xad, 0x1, 0     	INCF	_TXREG, F
002a86   0000     nop                      	nop	
                                           _00324_DS_:
002a88   a89e     btfss   0x9e, 0x4, 0     	BTFSS	_PIR1bits, 4
002a8a   d7fe     bra     0x2a88           	BRA	_00324_DS_
                                           ;	.line	462; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
002a8c   ec1b     call    0x4436, 0        	CALL	_Serial_Init_Receiver
002a8e   f022
                                           _00327_DS_:
002a90   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002a92   f006
002a94   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002a96   f005
002a98   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002a9a   f004
002a9c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002a9e   f003
002aa0   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002aa2   f002
002aa4   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002aa6   f001
002aa8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002aaa   f000
002aac   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002aae   ffd9
002ab0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseDecodeNextTXPacket	code
                                           _fraiseDecodeNextTXPacket:
                                           ;	.line	337; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static void fraiseDecodeNextTXPacket()
002788   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00278a   ffe5
00278c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00278e   ffe5
002790   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002792   ffe5
                                           ; #	MOVFF	r0x03, POSTDEC1
                                           ; #; info ==> [localregs] entry end
                                           
                                           ; #	BTFSC	_TXSTAbits, 1
                                           ; #	GOTO	_00200_DS_
                                           ; #	GOTO	_00238_DS_
                                           ; #	CALL	_fraiseGetTXChar
                                           ;	.line	341; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(TXSTAxbits.TRMT == 0) return; //return if a serial transmission is in progress
002794   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002796   ffe5
                                           ;	.line	343; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	len = fraiseGetTXChar(); //1st byte = len
002798   a2ac     btfss   0xac, 0x1, 0     	BTFSS	_TXSTAbits, 1
00279a   d076     bra     0x2888           	BRA	_00238_DS_
00279c   ec32     call    0x4064, 0        	CALL	_fraiseGetTXChar
00279e   f020
0027a0   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	344; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(!len) {
0027a2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027a4   e105     bnz     0x27b0           	BNZ	_00202_DS_
0027a6   010a     movlb   0xa              	BANKSEL	_FrTXout
                                           ;	.line	346; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXin = FrTXout=0;
0027a8   6b23     clrf    0x23, 0x1        	CLRF	_FrTXout, B
0027aa   010a     movlb   0xa              	BANKSEL	_FrTXin
0027ac   6b22     clrf    0x22, 0x1        	CLRF	_FrTXin, B
                                           ;	.line	347; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return; //?
0027ae   d06c     bra     0x2888           	BRA	_00238_DS_
                                           _00202_DS_:
                                           ;	.line	350; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	txout_end = FrTXout;
0027b0   ca23     movff   0xa23, 0x1       	MOVFF	_FrTXout, r0x01
0027b2   f001
                                           ;	.line	351; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	txout_end += len;
0027b4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0027b6   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
                                           ;	.line	353; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c=fraiseGetTXChar(); //2nd byte = command (or hi nibble of address)
0027b8   ec32     call    0x4064, 0        	CALL	_fraiseGetTXChar
0027ba   f020
0027bc   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	354; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	len -= 1;
0027be   0600     decf    0, 0x1, 0        	DECF	r0x00, F
                                           ;	.line	356; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == '#') {						
0027c0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0027c2   0a23     xorlw   0x23             	XORLW	0x23
0027c4   e11f     bnz     0x2804           	BNZ	_00217_DS_
                                           ;	.line	358; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(len < 1) goto discard;
0027c6   0e01     movlw   0x1              	MOVLW	0x01
0027c8   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0027ca   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
0027cc   d05b     bra     0x2884           	BRA	_00237_DS_
                                           ;	.line	359; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetTXChar(); //what is the command ?
0027ce   ec32     call    0x4064, 0        	CALL	_fraiseGetTXChar
0027d0   f020
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
                                           ;	.line	360; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == 'i'){
0027d2   6e02     movwf   0x2, 0           	MOVWF	r0x02
0027d4   0a69     xorlw   0x69             	XORLW	0x69
0027d6   e103     bnz     0x27de           	BNZ	_00214_DS_
                                           ;	.line	362; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseInit();
0027d8   ecce     call    0x3d9c, 0        	CALL	_fraiseInit
0027da   f01e
                                           ;	.line	363; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	goto discard;
0027dc   d053     bra     0x2884           	BRA	_00237_DS_
                                           _00214_DS_:
                                           ;	.line	370; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 'r'){
0027de   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0027e0   0a72     xorlw   0x72             	XORLW	0x72
0027e2   e103     bnz     0x27ea           	BNZ	_00211_DS_
                                           ;	.line	371; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0027e4   ec1b     call    0x4436, 0        	CALL	_Serial_Init_Receiver
0027e6   f022
                                           ;	.line	372; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	goto discard;
0027e8   d04d     bra     0x2884           	BRA	_00237_DS_
                                           _00211_DS_:
                                           ;	.line	374; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	else if(c == 's'){
0027ea   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0027ec   0a73     xorlw   0x73             	XORLW	0x73
0027ee   e001     bz      0x27f2           	BZ	_00281_DS_
0027f0   d049     bra     0x2884           	BRA	_00237_DS_
                                           _00281_DS_:
                                           ;	.line	376; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	SerDrv_Off();
0027f2   8094     bsf     0x94, 0, 0       	BSF	_TRISCbits, 0
                                           ;	.line	377; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1; 
0027f4   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	378; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCxIE = 1;		
0027f6   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	379; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
0027f8   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           	;	VOLATILE READ - BEGIN
0027fa   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
                                           	;	VOLATILE READ - END
                                           	;	VOLATILE READ - BEGIN
0027fc   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
                                           	;	VOLATILE READ - END
                                           ;	.line	382; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 0;		
0027fe   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
                                           ;	.line	383; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 1;		
002800   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	385; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	goto discard;
002802   d040     bra     0x2884           	BRA	_00237_DS_
                                           _00217_DS_:
                                           ;	.line	391; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == 'C') { //"char" packet
002804   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002806   0a43     xorlw   0x43             	XORLW	0x43
002808   e005     bz      0x2814           	BZ	_00222_DS_
                                           ;	.line	396; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(c == 'B') { //"bytes" packet
00280a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00280c   0a42     xorlw   0x42             	XORLW	0x42
00280e   e001     bz      0x2812           	BZ	_00285_DS_
002810   d039     bra     0x2884           	BRA	_00237_DS_
                                           _00285_DS_:
                                           ;	.line	404; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) len |= 128;
002812   d001     bra     0x2816           	BRA	_00225_DS_
                                           _00222_DS_:
                                           ;	.line	404; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(ischar) len |= 128;
002814   8e00     bsf     0, 0x7, 0        	BSF	r0x00, 7
                                           _00225_DS_:
                                           ;	.line	406; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendInit(len);
002816   c000     movff   0, 0xa68         	MOVFF	r0x00, _FrTXchksum
002818   fa68
00281a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00281c   0104     movlb   0x4              	BANKSEL	_FrTXpacket
00281e   6f00     movwf   0, 0x1           	MOVWF	_FrTXpacket, B
002820   0e01     movlw   0x1              	MOVLW	0x01
002822   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
002824   6f69     movwf   0x69, 0x1        	MOVWF	_FrTXpacket_i, B
                                           _00231_DS_:
002826   010a     movlb   0xa              	BANKSEL	_FrTXout
                                           ;	.line	408; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(FrTXout != txout_end) {
002828   5123     movf    0x23, 0, 0x1     	MOVF	_FrTXout, W, B
00282a   1801     xorwf   0x1, 0, 0        	XORWF	r0x01, W
00282c   e014     bz      0x2856           	BZ	_00234_DS_
                                           ;	.line	409; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = fraiseGetTXChar();
00282e   ec32     call    0x4064, 0        	CALL	_fraiseGetTXChar
002830   f020
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
                                           ;	.line	410; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendData(c); 
002832   6e02     movwf   0x2, 0           	MOVWF	r0x02
002834   010a     movlb   0xa              	BANKSEL	_FrTXchksum
002836   2768     addwf   0x68, 0x1, 0x1   	ADDWF	_FrTXchksum, F, B
002838   0e00     movlw   0                	MOVLW	LOW(_FrTXpacket)
00283a   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
00283c   2569     addwf   0x69, 0, 0x1     	ADDWF	_FrTXpacket_i, W, B
00283e   6e00     movwf   0, 0             	MOVWF	r0x00
002840   6a03     clrf    0x3, 0           	CLRF	r0x03
002842   0e04     movlw   0x4              	MOVLW	HIGH(_FrTXpacket)
002844   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
002846   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002848   ffe9
00284a   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
00284c   ffea
00284e   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
002850   ffef
                                           ; removed redundant BANKSEL
002852   2b69     incf    0x69, 0x1, 0x1   	INCF	_FrTXpacket_i, F, B
002854   d7e8     bra     0x2826           	BRA	_00231_DS_
                                           _00234_DS_:
                                           ;	.line	412; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraiseSendClose();	
002856   0e00     movlw   0                	MOVLW	LOW(_FrTXpacket)
002858   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
00285a   2569     addwf   0x69, 0, 0x1     	ADDWF	_FrTXpacket_i, W, B
00285c   6e00     movwf   0, 0             	MOVWF	r0x00
00285e   6a02     clrf    0x2, 0           	CLRF	r0x02
002860   0e04     movlw   0x4              	MOVLW	HIGH(_FrTXpacket)
002862   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002864   010a     movlb   0xa              	BANKSEL	_FrTXchksum
002866   1d68     comf    0x68, 0, 0x1     	COMF	_FrTXchksum, W, B
002868   6e03     movwf   0x3, 0           	MOVWF	r0x03
00286a   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
00286c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00286e   ffe9
002870   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002872   ffea
002874   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
002876   ffef
002878   010a     movlb   0xa              	BANKSEL	_FrTXpacket_i
00287a   2b69     incf    0x69, 0x1, 0x1   	INCF	_FrTXpacket_i, F, B
00287c   ca69     movff   0xa69, 0xa66     	MOVFF	_FrTXpacket_i, _FrTXpacket_len
00287e   fa66
002880   010a     movlb   0xa              	BANKSEL	_FrTXtries
                                           ;	.line	413; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXtries = 0;
002882   6b60     clrf    0x60, 0x1        	CLRF	_FrTXtries, B
                                           _00237_DS_:
                                           ;	.line	416; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXout = txout_end;
002884   c001     movff   0x1, 0xa23       	MOVFF	r0x01, _FrTXout
002886   fa23
                                           _00238_DS_:
                                           ;	.line	417; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return;
002888   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00288a   f003
00288c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00288e   f002
002890   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002892   f001
002894   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002896   f000
002898   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSend	code
                                           _fraiseSend:
                                           ;	.line	294; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	char fraiseSend(const unsigned char *buf,unsigned char len)
002bb8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002bba   ffe5
002bbc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002bbe   ffd9
002bc0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002bc2   ffe5
002bc4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002bc6   ffe5
002bc8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002bca   ffe5
002bcc   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002bce   ffe5
002bd0   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002bd2   ffe5
002bd4   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002bd6   ffe5
002bd8   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002bda   ffe5
002bdc   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
002bde   ffe5
002be0   0e02     movlw   0x2              	MOVLW	0x02
002be2   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002be4   f000
002be6   0e03     movlw   0x3              	MOVLW	0x03
002be8   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002bea   f001
002bec   0e04     movlw   0x4              	MOVLW	0x04
002bee   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002bf0   f002
002bf2   0e05     movlw   0x5              	MOVLW	0x05
002bf4   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
002bf6   f003
                                           ;	.line	298; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree = FrTXout;
002bf8   ca23     movff   0xa23, 0xa24     	MOVFF	_FrTXout, _FrTXbufFree
002bfa   fa24
002bfc   010a     movlb   0xa              	BANKSEL	_FrTXin
                                           ;	.line	299; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= FrTXin;
002bfe   5122     movf    0x22, 0, 0x1     	MOVF	_FrTXin, W, B
002c00   010a     movlb   0xa              	BANKSEL	_FrTXbufFree
002c02   5f24     subwf   0x24, 0x1, 0x1   	SUBWF	_FrTXbufFree, F, B
                                           ;	.line	300; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= 1;
002c04   0724     decf    0x24, 0x1, 0x1   	DECF	_FrTXbufFree, F, B
                                           ;	.line	302; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if ((len + 3) > FrTXbufFree) {
002c06   c003     movff   0x3, 0x4         	MOVFF	r0x03, r0x04
002c08   f004
002c0a   6a05     clrf    0x5, 0           	CLRF	r0x05
002c0c   0e03     movlw   0x3              	MOVLW	0x03
002c0e   2604     addwf   0x4, 0x1, 0      	ADDWF	r0x04, F
002c10   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002c12   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
002c14   ca24     movff   0xa24, 0x6       	MOVFF	_FrTXbufFree, r0x06
002c16   f006
002c18   6a07     clrf    0x7, 0           	CLRF	r0x07
002c1a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
002c1c   0f80     addlw   0x80             	ADDLW	0x80
002c1e   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
002c20   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002c22   0f80     addlw   0x80             	ADDLW	0x80
002c24   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
002c26   e102     bnz     0x2c2c           	BNZ	_00192_DS_
002c28   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002c2a   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
                                           _00192_DS_:
002c2c   e202     bc      0x2c32           	BC	_00171_DS_
                                           ;	.line	304; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return -1;
002c2e   68e8     setf    0xe8, 0          	SETF	WREG
002c30   d02b     bra     0x2c88           	BRA	_00177_DS_
                                           _00171_DS_:
                                           ;	.line	306; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if (len < 2) {
002c32   0e02     movlw   0x2              	MOVLW	0x02
002c34   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
002c36   e202     bc      0x2c3c           	BC	_00173_DS_
                                           ;	.line	308; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return 0;
002c38   6ae8     clrf    0xe8, 0          	CLRF	WREG
002c3a   d026     bra     0x2c88           	BRA	_00177_DS_
                                           _00173_DS_:
                                           ;	.line	310; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	len -= 1; //don't keep '\n' terminator
002c3c   0603     decf    0x3, 0x1, 0      	DECF	r0x03, F
                                           ;	.line	311; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraisePutChar(len); //prefix tx packet buffer by its length
002c3e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002c40   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002c42   ecb8     call    0x3b70, 0        	CALL	_fraisePutChar
002c44   f01d
002c46   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	313; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(i < len) { //fill tx packet buffer
002c48   6a04     clrf    0x4, 0           	CLRF	r0x04
                                           _00174_DS_:
002c4a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002c4c   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
002c4e   e214     bc      0x2c78           	BC	_00176_DS_
                                           ;	.line	314; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = buf[i];
002c50   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002c52   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002c54   6e05     movwf   0x5, 0           	MOVWF	r0x05
002c56   6ae8     clrf    0xe8, 0          	CLRF	WREG
002c58   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002c5a   6e06     movwf   0x6, 0           	MOVWF	r0x06
002c5c   6ae8     clrf    0xe8, 0          	CLRF	WREG
002c5e   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
002c60   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
002c62   ffe9
002c64   c006     movff   0x6, 0xff3       	MOVFF	r0x06, PRODL
002c66   fff3
002c68   eccd     call    0x439a, 0        	CALL	__gptrget1
002c6a   f021
                                           ;	.line	315; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	i++;
002c6c   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
                                           ;	.line	316; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	fraisePutChar(c);
002c6e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002c70   ecb8     call    0x3b70, 0        	CALL	_fraisePutChar
002c72   f01d
002c74   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002c76   d7e9     bra     0x2c4a           	BRA	_00174_DS_
                                           _00176_DS_:
                                           ;	.line	320; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree = FrTXout;
002c78   ca23     movff   0xa23, 0xa24     	MOVFF	_FrTXout, _FrTXbufFree
002c7a   fa24
002c7c   010a     movlb   0xa              	BANKSEL	_FrTXin
                                           ;	.line	321; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= FrTXin;
002c7e   5122     movf    0x22, 0, 0x1     	MOVF	_FrTXin, W, B
002c80   010a     movlb   0xa              	BANKSEL	_FrTXbufFree
002c82   5f24     subwf   0x24, 0x1, 0x1   	SUBWF	_FrTXbufFree, F, B
                                           ;	.line	322; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree -= 1;
002c84   0724     decf    0x24, 0x1, 0x1   	DECF	_FrTXbufFree, F, B
                                           ;	.line	323; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return 0;
002c86   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00177_DS_:
002c88   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
002c8a   f007
002c8c   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002c8e   f006
002c90   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002c92   f005
002c94   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002c96   f004
002c98   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002c9a   f003
002c9c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002c9e   f002
002ca0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002ca2   f001
002ca4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002ca6   f000
002ca8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002caa   ffd9
002cac   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetTXChar	code
                                           _fraiseGetTXChar:
                                           ;	.line	284; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static unsigned char fraiseGetTXChar()
004064   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004066   ffe5
004068   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00406a   ffe5
00406c   010a     movlb   0xa              	BANKSEL	_FrTXin
                                           ;	.line	288; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(FrTXin == FrTXout) return 0; //underflow check
00406e   5122     movf    0x22, 0, 0x1     	MOVF	_FrTXin, W, B
004070   010a     movlb   0xa              	BANKSEL	_FrTXout
004072   1923     xorwf   0x23, 0, 0x1     	XORWF	_FrTXout, W, B
004074   e102     bnz     0x407a           	BNZ	_00158_DS_
004076   6ae8     clrf    0xe8, 0          	CLRF	WREG
004078   d00f     bra     0x4098           	BRA	_00159_DS_
                                           _00158_DS_:
                                           ;	.line	289; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	c = FrTXbuf[FrTXout];
00407a   0e00     movlw   0                	MOVLW	LOW(_FrTXbuf)
00407c   010a     movlb   0xa              	BANKSEL	_FrTXout
00407e   2523     addwf   0x23, 0, 0x1     	ADDWF	_FrTXout, W, B
004080   6e00     movwf   0, 0             	MOVWF	r0x00
004082   6a01     clrf    0x1, 0           	CLRF	r0x01
004084   0e07     movlw   0x7              	MOVLW	HIGH(_FrTXbuf)
004086   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004088   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00408a   ffe9
00408c   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00408e   ffea
004090   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
004092   f000
                                           ; removed redundant BANKSEL
                                           ;	.line	290; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXout++;
004094   2b23     incf    0x23, 0x1, 0x1   	INCF	_FrTXout, F, B
                                           ;	.line	291; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return c;
004096   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           _00159_DS_:
004098   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00409a   f001
00409c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00409e   f000
0040a0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraisePutChar	code
                                           _fraisePutChar:
                                           ;	.line	274; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	static void fraisePutChar(unsigned char c)
003b70   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003b72   ffe5
003b74   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003b76   ffd9
003b78   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003b7a   ffe5
003b7c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003b7e   ffe5
003b80   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003b82   ffe5
003b84   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003b86   ffe5
003b88   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003b8a   ffe5
003b8c   0e02     movlw   0x2              	MOVLW	0x02
003b8e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003b90   f000
                                           ;	.line	276; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if((FrTXin + 1) == FrTXout) {
003b92   ca22     movff   0xa22, 0x1       	MOVFF	_FrTXin, r0x01
003b94   f001
003b96   6a02     clrf    0x2, 0           	CLRF	r0x02
003b98   4a01     infsnz  0x1, 0x1, 0      	INFSNZ	r0x01, F
003b9a   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
003b9c   ca23     movff   0xa23, 0x3       	MOVFF	_FrTXout, r0x03
003b9e   f003
003ba0   6a04     clrf    0x4, 0           	CLRF	r0x04
003ba2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003ba4   1803     xorwf   0x3, 0, 0        	XORWF	r0x03, W
003ba6   e103     bnz     0x3bae           	BNZ	_00151_DS_
003ba8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003baa   1804     xorwf   0x4, 0, 0        	XORWF	r0x04, W
003bac   e001     bz      0x3bb0           	BZ	_00152_DS_
                                           _00151_DS_:
003bae   d001     bra     0x3bb2           	BRA	_00145_DS_
                                           _00152_DS_:
                                           ;	.line	278; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return; //overflow check done by fraiseSend, but...
003bb0   d00e     bra     0x3bce           	BRA	_00146_DS_
                                           _00145_DS_:
                                           ;	.line	280; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbuf[FrTXin] = c;
003bb2   0e00     movlw   0                	MOVLW	LOW(_FrTXbuf)
003bb4   010a     movlb   0xa              	BANKSEL	_FrTXin
003bb6   2522     addwf   0x22, 0, 0x1     	ADDWF	_FrTXin, W, B
003bb8   6e01     movwf   0x1, 0           	MOVWF	r0x01
003bba   6a02     clrf    0x2, 0           	CLRF	r0x02
003bbc   0e07     movlw   0x7              	MOVLW	HIGH(_FrTXbuf)
003bbe   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003bc0   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003bc2   ffe9
003bc4   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003bc6   ffea
003bc8   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
003bca   ffef
                                           ; removed redundant BANKSEL
                                           ;	.line	281; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXin++;
003bcc   2b22     incf    0x22, 0x1, 0x1   	INCF	_FrTXin, F, B
                                           _00146_DS_:
003bce   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003bd0   f004
003bd2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003bd4   f003
003bd6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003bd8   f002
003bda   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003bdc   f001
003bde   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003be0   f000
003be2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003be4   ffd9
003be6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseGetInterruptEnable	code
                                           _fraiseGetInterruptEnable:
004556   010a     movlb   0xa              	BANKSEL	_FrInterruptEnabled
                                           ;	.line	268; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	return FrInterruptEnabled;
004558   5125     movf    0x25, 0, 0x1     	MOVF	_FrInterruptEnabled, W, B
00455a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSetInterruptEnable	code
                                           _fraiseSetInterruptEnable:
                                           ;	.line	256; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSetInterruptEnable(char enable)
0042a4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0042a6   ffe5
0042a8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0042aa   ffd9
0042ac   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0042ae   ffe5
0042b0   0e02     movlw   0x2              	MOVLW	0x02
0042b2   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0042b4   f000
                                           ;	.line	258; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrInterruptEnabled = enable;
0042b6   c000     movff   0, 0xa25         	MOVFF	r0x00, _FrInterruptEnabled
0042b8   fa25
                                           ;	.line	259; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	if(enable == 0) {
0042ba   5000     movf    0, 0, 0          	MOVF	r0x00, W
0042bc   e104     bnz     0x42c6           	BNZ	_00134_DS_
                                           ;	.line	260; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
0042be   ec1b     call    0x4436, 0        	CALL	_Serial_Init_Receiver
0042c0   f022
                                           ;	.line	261; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCxIE = 0;
0042c2   9a9d     bcf     0x9d, 0x5, 0     	BCF	_PIE1bits, 5
                                           ;	.line	262; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
0042c4   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
                                           _00134_DS_:
0042c6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0042c8   f000
0042ca   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0042cc   ffd9
0042ce   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseInit	code
                                           _fraiseInit:
003d9c   010a     movlb   0xa              	BANKSEL	_FrTXin
                                           ;	.line	214; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXin = 0;
003d9e   6b22     clrf    0x22, 0x1        	CLRF	_FrTXin, B
003da0   010a     movlb   0xa              	BANKSEL	_FrTXout
                                           ;	.line	215; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXout = 0;
003da2   6b23     clrf    0x23, 0x1        	CLRF	_FrTXout, B
003da4   010a     movlb   0xa              	BANKSEL	_FrTXbufFree
                                           ;	.line	216; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXbufFree = 255;
003da6   6924     setf    0x24, 0x1        	SETF	_FrTXbufFree, B
                                           ;	.line	219; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	SerDrv_Off();
003da8   8094     bsf     0x94, 0, 0       	BSF	_TRISCbits, 0
                                           ;	.line	220; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	InitSerDrv();
003daa   908b     bcf     0x8b, 0, 0       	BCF	_LATCbits, 0
003dac   8094     bsf     0x94, 0, 0       	BSF	_TRISCbits, 0
                                           ;	.line	224; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	SPBRGHx = BRGHL/256;
003dae   6ab0     clrf    0xb0, 0          	CLRF	_SPBRGH
                                           ;	.line	225; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	SPBRGx = BRGHL%256;
003db0   0e3f     movlw   0x3f             	MOVLW	0x3f
003db2   6eaf     movwf   0xaf, 0          	MOVWF	_SPBRG
                                           ;	.line	227; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	BAUDCONxbits.BRG16 = 1;
003db4   86b8     bsf     0xb8, 0x3, 0     	BSF	_BAUDCONbits, 3
                                           ;	.line	229; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TXEN = 1;
003db6   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
                                           ;	.line	230; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.BRGH = 1;
003db8   84ac     bsf     0xac, 0x2, 0     	BSF	_TXSTAbits, 2
                                           ;	.line	231; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9 = 1;
003dba   8cac     bsf     0xac, 0x6, 0     	BSF	_TXSTAbits, 6
                                           ;	.line	232; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXSTAxbits.TX9D = 0;
003dbc   90ac     bcf     0xac, 0, 0       	BCF	_TXSTAbits, 0
                                           ;	.line	234; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.RX9 = 1;
003dbe   8cab     bsf     0xab, 0x6, 0     	BSF	_RCSTAbits, 6
                                           ;	.line	235; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.SPEN = 1;
003dc0   8eab     bsf     0xab, 0x7, 0     	BSF	_RCSTAbits, 7
003dc2   010a     movlb   0xa              	BANKSEL	_FraiseStatus
                                           ;	.line	237; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseStatus.VAL = 0;
003dc4   6b67     clrf    0x67, 0x1        	CLRF	_FraiseStatus, B
003dc6   010a     movlb   0xa              	BANKSEL	_FraiseState
                                           ;	.line	238; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FraiseState = fIDLE;
003dc8   6b61     clrf    0x61, 0x1        	CLRF	_FraiseState, B
003dca   010a     movlb   0xa              	BANKSEL	_FrRXin
                                           ;	.line	239; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXin = 0;
003dcc   6b64     clrf    0x64, 0x1        	CLRF	_FrRXin, B
003dce   010a     movlb   0xa              	BANKSEL	_FrRXout
                                           ;	.line	240; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrRXout = 0;
003dd0   6b65     clrf    0x65, 0x1        	CLRF	_FrRXout, B
003dd2   010a     movlb   0xa              	BANKSEL	_FrTXpacket_len
                                           ;	.line	241; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrTXpacket_len = 0;
003dd4   6b66     clrf    0x66, 0x1        	CLRF	_FrTXpacket_len, B
                                           ;	.line	243; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrID = eeReadByte(EE_ID);
003dd6   0e00     movlw   0                	MOVLW	0x00
003dd8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003dda   ec0d     call    0x441a, 0        	CALL	_eeReadByte
003ddc   f022
003dde   010a     movlb   0xa              	BANKSEL	_FrID
003de0   6f26     movwf   0x26, 0x1        	MOVWF	_FrID, B
003de2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	246; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXxIP = 0;
003de4   989f     bcf     0x9f, 0x4, 0     	BCF	_IPR1bits, 4
                                           ;	.line	247; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCxIP = 0;
003de6   9a9f     bcf     0x9f, 0x5, 0     	BCF	_IPR1bits, 5
                                           ;	.line	248; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	FrInterruptEnabled = 1;
003de8   0e01     movlw   0x1              	MOVLW	0x01
003dea   010a     movlb   0xa              	BANKSEL	_FrInterruptEnabled
003dec   6f25     movwf   0x25, 0x1        	MOVWF	_FrInterruptEnabled, B
003dee   0104     movlb   0x4              	BANKSEL	_stdout
                                           ;	.line	251; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	stdout = STREAM_USER;
003df0   6b7d     clrf    0x7d, 0x1        	CLRF	_stdout, B
                                           ; removed redundant BANKSEL
003df2   6b7e     clrf    0x7e, 0x1        	CLRF	(_stdout + 1), B
003df4   0e2f     movlw   0x2f             	MOVLW	0x2f
                                           ; removed redundant BANKSEL
003df6   6f7f     movwf   0x7f, 0x1        	MOVWF	(_stdout + 2), B
                                           ;	.line	253; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	Serial_Init_Receiver();
003df8   ec1b     call    0x4436, 0        	CALL	_Serial_Init_Receiver
003dfa   f022
003dfc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__fraiseSetID	code
                                           _fraiseSetID:
                                           ;	.line	207; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	void fraiseSetID(unsigned char id)
0041bc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0041be   ffe5
0041c0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0041c2   ffd9
0041c4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0041c6   ffe5
0041c8   0e02     movlw   0x2              	MOVLW	0x02
0041ca   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0041cc   f000
                                           ;	.line	209; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	eeWriteByte(EE_ID,FrID = id);
0041ce   c000     movff   0, 0xa26         	MOVFF	r0x00, _FrID
0041d0   fa26
0041d2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0041d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041d6   0e00     movlw   0                	MOVLW	0x00
0041d8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041da   ecee     call    0x3fdc, 0        	CALL	_eeWriteByte
0041dc   f01f
0041de   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0041e0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0041e2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0041e4   f000
0041e6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0041e8   ffd9
0041ea   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_fraisedevice__Serial_Init_Receiver	code
                                           _Serial_Init_Receiver:
                                           _00105_DS_:
                                           ;	.line	110; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	while(TXSTAxbits.TRMT == 0);
004436   a2ac     btfss   0xac, 0x1, 0     	BTFSS	_TXSTAbits, 1
004438   d7fe     bra     0x4436           	BRA	_00105_DS_
                                           ;	.line	111; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	SerDrv_Off();
00443a   8094     bsf     0x94, 0, 0       	BSF	_TRISCbits, 0
                                           ;	.line	112; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	WREG=RCREGx;
00443c   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
00443e   0000     nop                      	nop	
                                           ;	.line	114; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	WREG=RCREGx;
004440   50ae     movf    0xae, 0, 0       	MOVF	_RCREG, W
                                           ;	.line	115; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 0;
004442   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
                                           ;	.line	116; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.CREN = 1;
004444   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	117; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCSTAxbits.ADDEN = 1;
004446   86ab     bsf     0xab, 0x3, 0     	BSF	_RCSTAbits, 3
                                           ;	.line	118; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	RCxIE = 1;
004448   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	119; C:/Users/sarto/Documents/Pd/externals/Fraise/fraisedevice/fraisedevice.c	TXxIE = 0;
00444a   989d     bcf     0x9d, 0x4, 0     	BCF	_PIE1bits, 4
00444c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
00444e   6425     cpfsgt  0x25, 0          	DB	0x25, 0x64, 0x20, 0x00
004450   0020     dw      0x20             
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 2784 (0x0ae0) bytes ( 2.12%)
                                           ;           	 1392 (0x0570) words
                                           ; udata size:	  471 (0x01d7) bytes (12.80%)
                                           ; access size:	    8 (0x0008) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_FSLP_analog_preconf
                                           	global	_FSLP_Init
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_analogSelectAdc
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_FSLP__FSLP_Init	code
                                           _FSLP_Init:
                                           ;	.line	43; C:/Users/sarto/Documents/Pd/externals/Fraise/FSLP/FSLP.c	void FSLP_Init()
001e30   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
001e32   ffe5
001e34   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
001e36   ffe5
001e38   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
001e3a   ffe5
001e3c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
001e3e   ffe5
001e40   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
001e42   ffe5
                                           ;	.line	45; C:/Users/sarto/Documents/Pd/externals/Fraise/FSLP/FSLP.c	analogSelect(FSLP_D2CHAN,FSLP_D2);
001e44   8a92     bsf     0x92, 0x5, 0     	BSF	_TRISAbits, 5
001e46   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001e48   6e00     movwf   0, 0             	MOVWF	r0x00
001e4a   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001e4c   6e01     movwf   0x1, 0           	MOVWF	r0x01
001e4e   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001e50   6e03     movwf   0x3, 0           	MOVWF	r0x03
001e52   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001e54   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
001e56   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001e58   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
001e5a   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001e5c   6e02     movwf   0x2, 0           	MOVWF	r0x02
001e5e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001e60   6e03     movwf   0x3, 0           	MOVWF	r0x03
001e62   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001e64   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
001e66   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001e68   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
001e6a   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001e6c   6e05     movwf   0x5, 0           	MOVWF	r0x05
001e6e   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001e70   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
001e72   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001e74   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
001e76   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001e78   6e05     movwf   0x5, 0           	MOVWF	r0x05
001e7a   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001e7c   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
001e7e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001e80   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
001e82   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001e84   ffe9
001e86   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001e88   ffea
001e8a   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
001e8c   f002
001e8e   8a02     bsf     0x2, 0x5, 0      	BSF	r0x02, 5
001e90   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001e92   ffe9
001e94   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001e96   ffea
001e98   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
001e9a   ffef
001e9c   0e04     movlw   0x4              	MOVLW	0x04
001e9e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001ea0   0e00     movlw   0                	MOVLW	0x00
001ea2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
001ea4   ec0f     call    0x301e, 0        	CALL	_analogSelectAdc
001ea6   f018
001ea8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001eaa   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	46; C:/Users/sarto/Documents/Pd/externals/Fraise/FSLP/FSLP.c	analogSelect(FSLP_SLCHAN,FSLP_SL);
001eac   8492     bsf     0x92, 0x2, 0     	BSF	_TRISAbits, 2
001eae   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001eb0   6e00     movwf   0, 0             	MOVWF	r0x00
001eb2   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001eb4   6e01     movwf   0x1, 0           	MOVWF	r0x01
001eb6   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001eb8   6e03     movwf   0x3, 0           	MOVWF	r0x03
001eba   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001ebc   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
001ebe   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001ec0   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
001ec2   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001ec4   6e02     movwf   0x2, 0           	MOVWF	r0x02
001ec6   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001ec8   6e03     movwf   0x3, 0           	MOVWF	r0x03
001eca   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001ecc   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
001ece   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001ed0   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
001ed2   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001ed4   6e05     movwf   0x5, 0           	MOVWF	r0x05
001ed6   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001ed8   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
001eda   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001edc   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
001ede   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001ee0   6e05     movwf   0x5, 0           	MOVWF	r0x05
001ee2   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001ee4   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
001ee6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001ee8   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
001eea   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001eec   ffe9
001eee   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001ef0   ffea
001ef2   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
001ef4   f002
001ef6   8402     bsf     0x2, 0x2, 0      	BSF	r0x02, 2
001ef8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001efa   ffe9
001efc   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001efe   ffea
001f00   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
001f02   ffef
001f04   0e02     movlw   0x2              	MOVLW	0x02
001f06   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f08   0e01     movlw   0x1              	MOVLW	0x01
001f0a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f0c   ec0f     call    0x301e, 0        	CALL	_analogSelectAdc
001f0e   f018
001f10   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001f12   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	47; C:/Users/sarto/Documents/Pd/externals/Fraise/FSLP/FSLP.c	analogSelect(FSLP_SLCHAN2,FSLP_SL);
001f14   8492     bsf     0x92, 0x2, 0     	BSF	_TRISAbits, 2
001f16   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001f18   6e00     movwf   0, 0             	MOVWF	r0x00
001f1a   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001f1c   6e01     movwf   0x1, 0           	MOVWF	r0x01
001f1e   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001f20   6e03     movwf   0x3, 0           	MOVWF	r0x03
001f22   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001f24   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
001f26   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001f28   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
001f2a   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001f2c   6e02     movwf   0x2, 0           	MOVWF	r0x02
001f2e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001f30   6e03     movwf   0x3, 0           	MOVWF	r0x03
001f32   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001f34   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
001f36   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001f38   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
001f3a   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001f3c   6e05     movwf   0x5, 0           	MOVWF	r0x05
001f3e   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001f40   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
001f42   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001f44   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
001f46   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001f48   6e05     movwf   0x5, 0           	MOVWF	r0x05
001f4a   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001f4c   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
001f4e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001f50   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
001f52   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001f54   ffe9
001f56   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001f58   ffea
001f5a   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
001f5c   f002
001f5e   8402     bsf     0x2, 0x2, 0      	BSF	r0x02, 2
001f60   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001f62   ffe9
001f64   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
001f66   ffea
001f68   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
001f6a   ffef
001f6c   0e02     movlw   0x2              	MOVLW	0x02
001f6e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f70   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001f72   ec0f     call    0x301e, 0        	CALL	_analogSelectAdc
001f74   f018
001f76   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
001f78   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	48; C:/Users/sarto/Documents/Pd/externals/Fraise/FSLP/FSLP.c	pinModeDigitalOut(FSLP_D1);
001f7a   9c92     bcf     0x92, 0x6, 0     	BCF	_TRISAbits, 6
                                           ;	.line	49; C:/Users/sarto/Documents/Pd/externals/Fraise/FSLP/FSLP.c	digitalSet(FSLP_D1);
001f7c   8c89     bsf     0x89, 0x6, 0     	BSF	_LATAbits, 6
001f7e   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
001f80   f005
001f82   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
001f84   f003
001f86   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
001f88   f002
001f8a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
001f8c   f001
001f8e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
001f90   f000
001f92   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_FSLP__FSLP_analog_preconf	code
                                           _FSLP_analog_preconf:
                                           ;	.line	30; C:/Users/sarto/Documents/Pd/externals/Fraise/FSLP/FSLP.c	void FSLP_analog_preconf(unsigned char chan)
00289a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00289c   ffe5
00289e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0028a0   ffd9
0028a2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0028a4   ffe5
0028a6   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0028a8   ffe5
0028aa   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0028ac   ffe5
0028ae   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0028b0   ffe5
0028b2   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0028b4   ffe5
0028b6   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0028b8   ffe5
0028ba   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0028bc   ffe5
0028be   0e02     movlw   0x2              	MOVLW	0x02
0028c0   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0028c2   f000
                                           ;	.line	32; C:/Users/sarto/Documents/Pd/externals/Fraise/FSLP/FSLP.c	if(chan == FSLP_D2CHAN) {
0028c4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0028c6   e12f     bnz     0x2926           	BNZ	_00126_DS_
                                           ;	.line	33; C:/Users/sarto/Documents/Pd/externals/Fraise/FSLP/FSLP.c	pinModeAnalogIn(FSLP_D2);
0028c8   8a92     bsf     0x92, 0x5, 0     	BSF	_TRISAbits, 5
0028ca   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0028cc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028ce   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0028d0   6e02     movwf   0x2, 0           	MOVWF	r0x02
0028d2   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0028d4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0028d6   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0028d8   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
0028da   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0028dc   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0028de   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0028e0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0028e2   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0028e4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0028e6   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
0028e8   5e01     subwf   0x1, 0x1, 0      	SUBWF	r0x01, F
0028ea   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0028ec   5a02     subwfb  0x2, 0x1, 0      	SUBWFB	r0x02, F
0028ee   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
0028f0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0028f2   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
0028f4   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
0028f6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0028f8   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0028fa   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
0028fc   6e06     movwf   0x6, 0           	MOVWF	r0x06
0028fe   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
002900   5e03     subwf   0x3, 0x1, 0      	SUBWF	r0x03, F
002902   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
002904   5a04     subwfb  0x4, 0x1, 0      	SUBWFB	r0x04, F
002906   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
002908   ffe9
00290a   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
00290c   ffea
00290e   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
002910   f003
002912   8a03     bsf     0x3, 0x5, 0      	BSF	r0x03, 5
002914   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002916   ffe9
002918   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00291a   ffea
00291c   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
00291e   ffef
                                           ;	.line	34; C:/Users/sarto/Documents/Pd/externals/Fraise/FSLP/FSLP.c	pinModeDigitalOut(FSLP_R0);
002920   9892     bcf     0x92, 0x4, 0     	BCF	_TRISAbits, 4
                                           ;	.line	35; C:/Users/sarto/Documents/Pd/externals/Fraise/FSLP/FSLP.c	digitalClear(FSLP_R0);
002922   9889     bcf     0x89, 0x4, 0     	BCF	_LATAbits, 4
002924   d031     bra     0x2988           	BRA	_00128_DS_
                                           _00126_DS_:
                                           ;	.line	36; C:/Users/sarto/Documents/Pd/externals/Fraise/FSLP/FSLP.c	} else if (chan == FSLP_SLCHAN2) {
002926   5000     movf    0, 0, 0          	MOVF	r0x00, W
002928   0a02     xorlw   0x2              	XORLW	0x02
00292a   e12e     bnz     0x2988           	BNZ	_00128_DS_
                                           ;	.line	37; C:/Users/sarto/Documents/Pd/externals/Fraise/FSLP/FSLP.c	pinModeAnalogIn(FSLP_R0);
00292c   8892     bsf     0x92, 0x4, 0     	BSF	_TRISAbits, 4
00292e   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
002930   6e00     movwf   0, 0             	MOVWF	r0x00
002932   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
002934   6e01     movwf   0x1, 0           	MOVWF	r0x01
002936   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
002938   6e03     movwf   0x3, 0           	MOVWF	r0x03
00293a   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
00293c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00293e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002940   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002942   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
002944   6e02     movwf   0x2, 0           	MOVWF	r0x02
002946   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
002948   6e03     movwf   0x3, 0           	MOVWF	r0x03
00294a   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
00294c   5e00     subwf   0, 0x1, 0        	SUBWF	r0x00, F
00294e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002950   5a01     subwfb  0x1, 0x1, 0      	SUBWFB	r0x01, F
002952   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
002954   6e05     movwf   0x5, 0           	MOVWF	r0x05
002956   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
002958   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
00295a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00295c   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
00295e   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
002960   6e05     movwf   0x5, 0           	MOVWF	r0x05
002962   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
002964   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
002966   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002968   5a03     subwfb  0x3, 0x1, 0      	SUBWFB	r0x03, F
00296a   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
00296c   ffe9
00296e   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
002970   ffea
002972   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
002974   f002
002976   8802     bsf     0x2, 0x4, 0      	BSF	r0x02, 4
002978   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00297a   ffe9
00297c   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00297e   ffea
002980   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
002982   ffef
                                           ;	.line	38; C:/Users/sarto/Documents/Pd/externals/Fraise/FSLP/FSLP.c	pinModeDigitalOut(FSLP_D2);
002984   9a92     bcf     0x92, 0x5, 0     	BCF	_TRISAbits, 5
                                           ;	.line	39; C:/Users/sarto/Documents/Pd/externals/Fraise/FSLP/FSLP.c	digitalClear(FSLP_D2);
002986   9a89     bcf     0x89, 0x5, 0     	BCF	_LATAbits, 5
                                           _00128_DS_:
002988   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00298a   f006
00298c   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00298e   f005
002990   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002992   f004
002994   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002996   f003
002998   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00299a   f002
00299c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00299e   f001
0029a0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0029a2   f000
0029a4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0029a6   ffd9
0029a8   0012     return  0                	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  628 (0x0274) bytes ( 0.48%)
                                           ;           	  314 (0x013a) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    7 (0x0007) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_analogInit
                                           	global	_analogInitTouch
                                           	global	_analogSelectAdc
                                           	global	_analogSelectAdcTouch
                                           	global	_analogDeselect
                                           	global	_analogService
                                           	global	_analogSend
                                           	global	_analogSetMode
                                           	global	_analogSet
                                           	global	_analogGet
                                           	global	_analogGetDistance
                                           	global	_analogScaling
                                           	global	_analogDeclareEE
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_printf
                                           	extern	_fraiseSend
                                           	extern	_EEdeclareInt
                                           	extern	_FSLP_analog_preconf
                                           	extern	__mullong
                                           	extern	__divulong
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           INTCON	equ	0xff2
                                           WREG	equ	0xfe8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _Scaling	db	0x00
                                           _Threshold	db	0x0a, 0x00
                                           _Mode	db	0x02
                                           _analogService_chan_1_98	db	0x00
                                           _analogService_conv_1_98	db	0x00
                                           _analogSend_chan_1_105	db	0x00
                                           _analogSend_buf_1_105	db	0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           
                                           udata_analog_0	udata
                                           _Selected	res	2
                                           
                                           udata_analog_1	udata
                                           _Value	res	32
                                           
                                           udata_analog_2	udata
                                           _inValue	res	32
                                           
                                           udata_analog_3	udata
                                           _oldValue	res	32
                                           
                                           udata_analog_4	udata
                                           _Min	res	32
                                           
                                           udata_analog_5	udata
                                           _Max	res	32
                                           
                                           udata_analog_6	udata
                                           _Pins	res	16
                                           
                                           udata_analog_7	udata
                                           _HWChan	res	16
                                           
                                           udata_analog_8	udata
                                           _Dist	res	32
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_analog__analogDeclareEE	code
                                           _analogDeclareEE:
                                           ;	.line	276; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(0);
00140c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00140e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001410   0e04     movlw   0x4              	MOVLW	HIGH(_Max)
001412   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001414   0eb3     movlw   0xb3             	MOVLW	LOW(_Max)
001416   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001418   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
00141a   f01a
00141c   0e03     movlw   0x3              	MOVLW	0x03
00141e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001420   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001422   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001424   0e04     movlw   0x4              	MOVLW	HIGH(_Min)
001426   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001428   0e93     movlw   0x93             	MOVLW	LOW(_Min)
00142a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00142c   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
00142e   f01a
001430   0e03     movlw   0x3              	MOVLW	0x03
001432   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	277; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(1);
001434   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001436   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001438   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 2)
00143a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00143c   0eb5     movlw   0xb5             	MOVLW	LOW(_Max + 2)
00143e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001440   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
001442   f01a
001444   0e03     movlw   0x3              	MOVLW	0x03
001446   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001448   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00144a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00144c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 2)
00144e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001450   0e95     movlw   0x95             	MOVLW	LOW(_Min + 2)
001452   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001454   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
001456   f01a
001458   0e03     movlw   0x3              	MOVLW	0x03
00145a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	278; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(2);
00145c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00145e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001460   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 4)
001462   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001464   0eb7     movlw   0xb7             	MOVLW	LOW(_Max + 4)
001466   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001468   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
00146a   f01a
00146c   0e03     movlw   0x3              	MOVLW	0x03
00146e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001470   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001472   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001474   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 4)
001476   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001478   0e97     movlw   0x97             	MOVLW	LOW(_Min + 4)
00147a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00147c   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
00147e   f01a
001480   0e03     movlw   0x3              	MOVLW	0x03
001482   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	279; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(3);
001484   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001486   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001488   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 6)
00148a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00148c   0eb9     movlw   0xb9             	MOVLW	LOW(_Max + 6)
00148e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001490   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
001492   f01a
001494   0e03     movlw   0x3              	MOVLW	0x03
001496   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001498   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00149a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00149c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 6)
00149e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014a0   0e99     movlw   0x99             	MOVLW	LOW(_Min + 6)
0014a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014a4   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
0014a6   f01a
0014a8   0e03     movlw   0x3              	MOVLW	0x03
0014aa   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	282; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(4);
0014ac   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0014ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014b0   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 8)
0014b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014b4   0ebb     movlw   0xbb             	MOVLW	LOW(_Max + 8)
0014b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014b8   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
0014ba   f01a
0014bc   0e03     movlw   0x3              	MOVLW	0x03
0014be   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0014c0   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0014c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014c4   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 8)
0014c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014c8   0e9b     movlw   0x9b             	MOVLW	LOW(_Min + 8)
0014ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014cc   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
0014ce   f01a
0014d0   0e03     movlw   0x3              	MOVLW	0x03
0014d2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	283; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(5);
0014d4   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0014d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014d8   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 10)
0014da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014dc   0ebd     movlw   0xbd             	MOVLW	LOW(_Max + 10)
0014de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014e0   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
0014e2   f01a
0014e4   0e03     movlw   0x3              	MOVLW	0x03
0014e6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0014e8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0014ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014ec   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 10)
0014ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014f0   0e9d     movlw   0x9d             	MOVLW	LOW(_Min + 10)
0014f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0014f4   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
0014f6   f01a
0014f8   0e03     movlw   0x3              	MOVLW	0x03
0014fa   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	284; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(6);
0014fc   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0014fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001500   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 12)
001502   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001504   0ebf     movlw   0xbf             	MOVLW	LOW(_Max + 12)
001506   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001508   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
00150a   f01a
00150c   0e03     movlw   0x3              	MOVLW	0x03
00150e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001510   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001512   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001514   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 12)
001516   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001518   0e9f     movlw   0x9f             	MOVLW	LOW(_Min + 12)
00151a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00151c   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
00151e   f01a
001520   0e03     movlw   0x3              	MOVLW	0x03
001522   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	285; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(7);
001524   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001526   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001528   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 14)
00152a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00152c   0ec1     movlw   0xc1             	MOVLW	LOW(_Max + 14)
00152e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001530   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
001532   f01a
001534   0e03     movlw   0x3              	MOVLW	0x03
001536   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001538   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00153a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00153c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 14)
00153e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001540   0ea1     movlw   0xa1             	MOVLW	LOW(_Min + 14)
001542   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001544   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
001546   f01a
001548   0e03     movlw   0x3              	MOVLW	0x03
00154a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	288; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(8);
00154c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00154e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001550   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 16)
001552   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001554   0ec3     movlw   0xc3             	MOVLW	LOW(_Max + 16)
001556   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001558   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
00155a   f01a
00155c   0e03     movlw   0x3              	MOVLW	0x03
00155e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001560   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001562   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001564   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 16)
001566   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001568   0ea3     movlw   0xa3             	MOVLW	LOW(_Min + 16)
00156a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00156c   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
00156e   f01a
001570   0e03     movlw   0x3              	MOVLW	0x03
001572   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	289; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(9);
001574   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001576   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001578   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 18)
00157a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00157c   0ec5     movlw   0xc5             	MOVLW	LOW(_Max + 18)
00157e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001580   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
001582   f01a
001584   0e03     movlw   0x3              	MOVLW	0x03
001586   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001588   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00158a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00158c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 18)
00158e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001590   0ea5     movlw   0xa5             	MOVLW	LOW(_Min + 18)
001592   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001594   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
001596   f01a
001598   0e03     movlw   0x3              	MOVLW	0x03
00159a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	290; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(10);
00159c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00159e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015a0   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 20)
0015a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015a4   0ec7     movlw   0xc7             	MOVLW	LOW(_Max + 20)
0015a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015a8   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
0015aa   f01a
0015ac   0e03     movlw   0x3              	MOVLW	0x03
0015ae   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0015b0   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0015b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015b4   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 20)
0015b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015b8   0ea7     movlw   0xa7             	MOVLW	LOW(_Min + 20)
0015ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015bc   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
0015be   f01a
0015c0   0e03     movlw   0x3              	MOVLW	0x03
0015c2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	291; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(11);
0015c4   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0015c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015c8   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 22)
0015ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015cc   0ec9     movlw   0xc9             	MOVLW	LOW(_Max + 22)
0015ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015d0   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
0015d2   f01a
0015d4   0e03     movlw   0x3              	MOVLW	0x03
0015d6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0015d8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0015da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015dc   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 22)
0015de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015e0   0ea9     movlw   0xa9             	MOVLW	LOW(_Min + 22)
0015e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015e4   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
0015e6   f01a
0015e8   0e03     movlw   0x3              	MOVLW	0x03
0015ea   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	294; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(12);
0015ec   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0015ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015f0   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 24)
0015f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015f4   0ecb     movlw   0xcb             	MOVLW	LOW(_Max + 24)
0015f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0015f8   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
0015fa   f01a
0015fc   0e03     movlw   0x3              	MOVLW	0x03
0015fe   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001600   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001602   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001604   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 24)
001606   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001608   0eab     movlw   0xab             	MOVLW	LOW(_Min + 24)
00160a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00160c   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
00160e   f01a
001610   0e03     movlw   0x3              	MOVLW	0x03
001612   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	295; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(13);
001614   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001616   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001618   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 26)
00161a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00161c   0ecd     movlw   0xcd             	MOVLW	LOW(_Max + 26)
00161e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001620   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
001622   f01a
001624   0e03     movlw   0x3              	MOVLW	0x03
001626   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001628   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00162a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00162c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 26)
00162e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001630   0ead     movlw   0xad             	MOVLW	LOW(_Min + 26)
001632   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001634   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
001636   f01a
001638   0e03     movlw   0x3              	MOVLW	0x03
00163a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	296; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(14);
00163c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00163e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001640   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 28)
001642   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001644   0ecf     movlw   0xcf             	MOVLW	LOW(_Max + 28)
001646   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001648   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
00164a   f01a
00164c   0e03     movlw   0x3              	MOVLW	0x03
00164e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001650   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001652   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001654   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 28)
001656   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001658   0eaf     movlw   0xaf             	MOVLW	LOW(_Min + 28)
00165a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00165c   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
00165e   f01a
001660   0e03     movlw   0x3              	MOVLW	0x03
001662   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	297; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	EEDECLARE(15);
001664   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
001666   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001668   0e04     movlw   0x4              	MOVLW	HIGH(_Max + 30)
00166a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00166c   0ed1     movlw   0xd1             	MOVLW	LOW(_Max + 30)
00166e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001670   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
001672   f01a
001674   0e03     movlw   0x3              	MOVLW	0x03
001676   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
001678   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00167a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00167c   0e04     movlw   0x4              	MOVLW	HIGH(_Min + 30)
00167e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001680   0eb1     movlw   0xb1             	MOVLW	LOW(_Min + 30)
001682   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001684   ec33     call    0x3466, 0        	CALL	_EEdeclareInt
001686   f01a
001688   0e03     movlw   0x3              	MOVLW	0x03
00168a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00168c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogScaling	code
                                           _analogScaling:
                                           ;	.line	255; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogScaling(unsigned char scaling) // when scaling, min and max are updated each sample
00363a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00363c   ffe5
00363e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003640   ffd9
003642   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003644   ffe5
003646   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003648   ffe5
00364a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00364c   ffe5
00364e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003650   ffe5
003652   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003654   ffe5
003656   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003658   ffe5
00365a   0e02     movlw   0x2              	MOVLW	0x02
00365c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00365e   f000
                                           ;	.line	259; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(scaling==1) {
003660   5000     movf    0, 0, 0          	MOVF	r0x00, W
003662   0a01     xorlw   0x1              	XORLW	0x01
003664   e122     bnz     0x36aa           	BNZ	_00415_DS_
                                           ;	.line	260; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<ANALOG_MAX_CHANNELS;i++) {
003666   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ; ;multiply lit val:0x02 by variable r0x01 and store in r0x02
                                           _00416_DS_:
                                           ;	.line	261; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Min[i]=0x7FFF;
003668   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00366a   0d02     mullw   0x2              	MULLW	0x02
00366c   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
00366e   6e03     movwf   0x3, 0           	MOVWF	r0x03
003670   cff3     movff   0xff3, 0x2       	MOVFF	PRODL, r0x02
003672   f002
003674   0e93     movlw   0x93             	MOVLW	LOW(_Min)
003676   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
003678   6e04     movwf   0x4, 0           	MOVWF	r0x04
00367a   0e04     movlw   0x4              	MOVLW	HIGH(_Min)
00367c   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
00367e   6e05     movwf   0x5, 0           	MOVWF	r0x05
003680   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
003682   ffe9
003684   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
003686   ffea
003688   68ee     setf    0xee, 0          	SETF	POSTINC0
00368a   0e7f     movlw   0x7f             	MOVLW	0x7f
00368c   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           ;	.line	262; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Max[i]=0;
00368e   0eb3     movlw   0xb3             	MOVLW	LOW(_Max)
003690   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
003692   0e04     movlw   0x4              	MOVLW	HIGH(_Max)
003694   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
003696   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
003698   ffe9
00369a   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
00369c   ffea
00369e   6aee     clrf    0xee, 0          	CLRF	POSTINC0
0036a0   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	260; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<ANALOG_MAX_CHANNELS;i++) {
0036a2   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
0036a4   0e10     movlw   0x10             	MOVLW	0x10
0036a6   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0036a8   e3df     bnc     0x3668           	BNC	_00416_DS_
                                           _00415_DS_:
                                           ;	.line	266; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Scaling=scaling;
0036aa   c000     movff   0, 0xa28         	MOVFF	r0x00, _Scaling
0036ac   fa28
0036ae   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0036b0   f005
0036b2   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0036b4   f004
0036b6   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0036b8   f003
0036ba   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0036bc   f002
0036be   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0036c0   f001
0036c2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0036c4   f000
0036c6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0036c8   ffd9
0036ca   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogGetDistance	code
                                           _analogGetDistance:
                                           ;	.line	250; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	int analogGetDistance(unsigned char chan)
003ef4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003ef6   ffe5
003ef8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003efa   ffd9
003efc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003efe   ffe5
003f00   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003f02   ffe5
003f04   0e02     movlw   0x2              	MOVLW	0x02
003f06   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003f08   f000
                                           ; ;multiply lit val:0x02 by variable r0x00 and store in r0x00
                                           ;	.line	252; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	return Dist[chan];
003f0a   5000     movf    0, 0, 0          	MOVF	r0x00, W
003f0c   0d02     mullw   0x2              	MULLW	0x02
003f0e   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
003f10   6e01     movwf   0x1, 0           	MOVWF	r0x01
003f12   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
003f14   f000
003f16   0ed3     movlw   0xd3             	MOVLW	LOW(_Dist)
003f18   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003f1a   0e04     movlw   0x4              	MOVLW	HIGH(_Dist)
003f1c   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003f1e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003f20   ffe9
003f22   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
003f24   ffea
003f26   cfee     movff   0xfee, 0         	MOVFF	POSTINC0, r0x00
003f28   f000
003f2a   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
003f2c   f001
003f2e   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003f30   fff3
003f32   5000     movf    0, 0, 0          	MOVF	r0x00, W
003f34   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003f36   f001
003f38   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003f3a   f000
003f3c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003f3e   ffd9
003f40   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogGet	code
                                           _analogGet:
                                           ;	.line	245; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	int analogGet(unsigned char chan)
003f42   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003f44   ffe5
003f46   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003f48   ffd9
003f4a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003f4c   ffe5
003f4e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003f50   ffe5
003f52   0e02     movlw   0x2              	MOVLW	0x02
003f54   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003f56   f000
                                           ; ;multiply lit val:0x02 by variable r0x00 and store in r0x00
                                           ;	.line	247; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	return Value[chan];
003f58   5000     movf    0, 0, 0          	MOVF	r0x00, W
003f5a   0d02     mullw   0x2              	MULLW	0x02
003f5c   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
003f5e   6e01     movwf   0x1, 0           	MOVWF	r0x01
003f60   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
003f62   f000
003f64   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
003f66   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003f68   0e00     movlw   0                	MOVLW	HIGH(_Value)
003f6a   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003f6c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003f6e   ffe9
003f70   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
003f72   ffea
003f74   cfee     movff   0xfee, 0         	MOVFF	POSTINC0, r0x00
003f76   f000
003f78   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
003f7a   f001
003f7c   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003f7e   fff3
003f80   5000     movf    0, 0, 0          	MOVF	r0x00, W
003f82   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003f84   f001
003f86   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003f88   f000
003f8a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003f8c   ffd9
003f8e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogSet	code
                                           _analogSet:
                                           ;	.line	233; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogSet(unsigned char chan, int val)
002cae   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002cb0   ffe5
002cb2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002cb4   ffd9
002cb6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002cb8   ffe5
002cba   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002cbc   ffe5
002cbe   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002cc0   ffe5
002cc2   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002cc4   ffe5
002cc6   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002cc8   ffe5
002cca   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002ccc   ffe5
002cce   0e02     movlw   0x2              	MOVLW	0x02
002cd0   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002cd2   f000
002cd4   0e03     movlw   0x3              	MOVLW	0x03
002cd6   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002cd8   f001
002cda   0e04     movlw   0x4              	MOVLW	0x04
002cdc   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002cde   f002
                                           ; ;multiply lit val:0x02 by variable r0x00 and store in r0x00
                                           ;	.line	237; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	inValue[chan] = val;
002ce0   5000     movf    0, 0, 0          	MOVF	r0x00, W
002ce2   0d02     mullw   0x2              	MULLW	0x02
002ce4   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
002ce6   6e03     movwf   0x3, 0           	MOVWF	r0x03
002ce8   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
002cea   f000
002cec   0e39     movlw   0x39             	MOVLW	LOW(_inValue)
002cee   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002cf0   6e04     movwf   0x4, 0           	MOVWF	r0x04
002cf2   0e04     movlw   0x4              	MOVLW	HIGH(_inValue)
002cf4   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
002cf6   6e05     movwf   0x5, 0           	MOVWF	r0x05
002cf8   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002cfa   ffe9
002cfc   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002cfe   ffea
002d00   c001     movff   0x1, 0xfee       	MOVFF	r0x01, POSTINC0
002d02   ffee
002d04   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
002d06   ffef
                                           ;	.line	238; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	d = oldValue[chan] - val;
002d08   0e59     movlw   0x59             	MOVLW	LOW(_oldValue)
002d0a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002d0c   6e04     movwf   0x4, 0           	MOVWF	r0x04
002d0e   0e04     movlw   0x4              	MOVLW	HIGH(_oldValue)
002d10   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
002d12   6e05     movwf   0x5, 0           	MOVWF	r0x05
002d14   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002d16   ffe9
002d18   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002d1a   ffea
002d1c   cfee     movff   0xfee, 0x4       	MOVFF	POSTINC0, r0x04
002d1e   f004
002d20   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
002d22   f005
002d24   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002d26   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
002d28   6e01     movwf   0x1, 0           	MOVWF	r0x01
002d2a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002d2c   5805     subwfb  0x5, 0, 0        	SUBWFB	r0x05, W
002d2e   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	239; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Dist[chan] = d;
002d30   0ed3     movlw   0xd3             	MOVLW	LOW(_Dist)
002d32   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002d34   0e04     movlw   0x4              	MOVLW	HIGH(_Dist)
002d36   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
002d38   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002d3a   ffe9
002d3c   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
002d3e   ffea
002d40   c001     movff   0x1, 0xfee       	MOVFF	r0x01, POSTINC0
002d42   ffee
002d44   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
002d46   ffef
                                           ;	.line	240; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(d < 0) d = -d;
002d48   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002d4a   ae02     btfss   0x2, 0x7, 0      	BTFSS	r0x02, 7
002d4c   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
002d4e   e304     bnc     0x2d58           	BNC	_00381_DS_
002d50   1e02     comf    0x2, 0x1, 0      	COMF	r0x02, F
002d52   6c01     negf    0x1, 0           	NEGF	r0x01
002d54   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
002d56   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
                                           _00381_DS_:
                                           ;	.line	241; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(d < 3) d = 0;
002d58   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002d5a   0f80     addlw   0x80             	ADDLW	0x80
002d5c   0f80     addlw   0x80             	ADDLW	0x80
002d5e   e102     bnz     0x2d64           	BNZ	_00398_DS_
002d60   0e03     movlw   0x3              	MOVLW	0x03
002d62   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _00398_DS_:
002d64   e202     bc      0x2d6a           	BC	_00383_DS_
002d66   6a01     clrf    0x1, 0           	CLRF	r0x01
002d68   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           _00383_DS_:
                                           ;	.line	242; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(d == 0) Dist[chan] = 0;
002d6a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002d6c   1002     iorwf   0x2, 0, 0        	IORWF	r0x02, W
002d6e   e107     bnz     0x2d7e           	BNZ	_00386_DS_
002d70   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002d72   ffe9
002d74   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
002d76   ffea
002d78   0e00     movlw   0                	MOVLW	0x00
002d7a   6aee     clrf    0xee, 0          	CLRF	POSTINC0
002d7c   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           _00386_DS_:
002d7e   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002d80   f005
002d82   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002d84   f004
002d86   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002d88   f003
002d8a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002d8c   f002
002d8e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002d90   f001
002d92   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002d94   f000
002d96   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002d98   ffd9
002d9a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogSetMode	code
                                           _analogSetMode:
                                           ;	.line	228; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogSetMode(unsigned char mode) // scale : bit0 = scale_on ; bit1 = num_on(=text_off) ; bit2 = cross_inval
0044e0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0044e2   ffe5
0044e4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0044e6   ffd9
0044e8   0e02     movlw   0x2              	MOVLW	0x02
0044ea   cfdb     movff   0xfdb, 0xa2b     	MOVFF	PLUSW2, _Mode
0044ec   fa2b
                                           ;	.line	230; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Mode = mode;
0044ee   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0044f0   ffd9
0044f2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogSend	code
                                           _analogSend:
                                           ;	.line	165; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	char analogSend()
00081c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00081e   ffe5
000820   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
000822   ffe5
000824   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
000826   ffe5
000828   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00082a   ffe5
00082c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00082e   ffe5
000830   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
000832   ffe5
000834   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
000836   ffe5
000838   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00083a   ffe5
00083c   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
00083e   ffe5
000840   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
000842   ffe5
000844   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
000846   ffe5
000848   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
00084a   ffe5
00084c   c00c     movff   0xc, 0xfe5       	MOVFF	r0x0c, POSTDEC1
00084e   ffe5
                                           ;	.line	168; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	unsigned char loop = 0, count = 0, len = 0;
000850   6a00     clrf    0, 0             	CLRF	r0x00
                                           ;	.line	172; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	while((count < 4) && (loop++ < ANALOG_MAX_CHANNELS)){
000852   6a01     clrf    0x1, 0           	CLRF	r0x01
000854   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           _00279_DS_:
000856   0e04     movlw   0x4              	MOVLW	0x04
000858   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
00085a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00085c   d1e8     bra     0xc2e            	BRA	_00307_DS_
00085e   c001     movff   0x1, 0x3         	MOVFF	r0x01, r0x03
000860   f003
000862   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
000864   0e10     movlw   0x10             	MOVLW	0x10
000866   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
000868   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00086a   d1e1     bra     0xc2e            	BRA	_00307_DS_
00086c   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_105
                                           ;	.line	173; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	chan++;
00086e   2b2e     incf    0x2e, 0x1, 0x1   	INCF	_analogSend_chan_1_105, F, B
                                           ;	.line	174; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(chan >= ANALOG_MAX_CHANNELS) {
000870   0e10     movlw   0x10             	MOVLW	0x10
                                           ; #	SUBWF	_analogSend_chan_1_105, W, B
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00245_DS_
                                           ; #	CLRF	_analogSend_chan_1_105, B
                                           ; #	SWAPF	_analogSend_chan_1_105, W, B
                                           ; removed redundant BANKSEL
                                           ;	.line	175; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	chan = 0;
000872   5d2e     subwf   0x2e, 0, 0x1     	SUBWF	_analogSend_chan_1_105, W, B
                                           ;	.line	177; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(! isSelected(chan)) continue;
000874   e301     bnc     0x878            	BNC	_10434_DS_
                                           ; removed redundant BANKSEL
000876   6b2e     clrf    0x2e, 0x1        	CLRF	_analogSend_chan_1_105, B
                                           _10434_DS_:
000878   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_105
00087a   392e     swapf   0x2e, 0, 0x1     	SWAPF	_analogSend_chan_1_105, W, B
00087c   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
00087e   0b1f     andlw   0x1f             	ANDLW	0x1f
000880   6e03     movwf   0x3, 0           	MOVWF	r0x03
000882   6a04     clrf    0x4, 0           	CLRF	r0x04
000884   0e5a     movlw   0x5a             	MOVLW	LOW(_Selected)
000886   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000888   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
00088a   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00088c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00088e   ffe9
000890   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000892   ffea
000894   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
000896   f003
000898   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
00089a   152e     andwf   0x2e, 0, 0x1     	ANDWF	_analogSend_chan_1_105, W, B
00089c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00089e   0e01     movlw   0x1              	MOVLW	0x01
0008a0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0008a2   0e00     movlw   0                	MOVLW	0x00
0008a4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008a6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0008a8   e006     bz      0x8b6            	BZ	_00352_DS_
0008aa   6ce8     negf    0xe8, 0          	NEGF	WREG
0008ac   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00353_DS_:
0008ae   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
0008b0   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
0008b2   0f01     addlw   0x1              	ADDLW	0x01
0008b4   e3fc     bnc     0x8ae            	BNC	_00353_DS_
                                           _00352_DS_:
0008b6   6a07     clrf    0x7, 0           	CLRF	r0x07
0008b8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0008ba   1605     andwf   0x5, 0x1, 0      	ANDWF	r0x05, F
0008bc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0008be   1606     andwf   0x6, 0x1, 0      	ANDWF	r0x06, F
0008c0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008c2   1006     iorwf   0x6, 0, 0        	IORWF	r0x06, W
0008c4   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0008c6   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
0008c8   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0008ca   6a05     clrf    0x5, 0           	CLRF	r0x05
0008cc   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
0008ce   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0008d0   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
0008d2   d7c1     bra     0x856            	BRA	_00279_DS_
                                           ; ;multiply lit val:0x02 by variable _analogSend_chan_1_105 and store in r0x03
0008d4   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_105
                                           ;	.line	179; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	v = Value[chan];
0008d6   512e     movf    0x2e, 0, 0x1     	MOVF	_analogSend_chan_1_105, W, B
0008d8   0d02     mullw   0x2              	MULLW	0x02
0008da   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
0008dc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0008de   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0008e0   f003
0008e2   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
0008e4   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
0008e6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0008e8   0e00     movlw   0                	MOVLW	HIGH(_Value)
0008ea   2004     addwfc  0x4, 0, 0        	ADDWFC	r0x04, W
0008ec   6e06     movwf   0x6, 0           	MOVWF	r0x06
0008ee   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0008f0   ffe9
0008f2   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0008f4   ffea
0008f6   cfee     movff   0xfee, 0x5       	MOVFF	POSTINC0, r0x05
0008f8   f005
0008fa   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
0008fc   f006
0008fe   010a     movlb   0xa              	BANKSEL	_Mode
                                           ;	.line	180; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(Mode & AMODE_SCALE) { // scale :
000900   a12b     btfss   0x2b, 0, 0x1     	BTFSS	_Mode, 0, B
000902   d09d     bra     0xa3e            	BRA	_00260_DS_
                                           ;	.line	181; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(v < Min[chan]) v = 0;
000904   0e93     movlw   0x93             	MOVLW	LOW(_Min)
000906   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
000908   6e07     movwf   0x7, 0           	MOVWF	r0x07
00090a   0e04     movlw   0x4              	MOVLW	HIGH(_Min)
00090c   2004     addwfc  0x4, 0, 0        	ADDWFC	r0x04, W
00090e   6e08     movwf   0x8, 0           	MOVWF	r0x08
000910   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
000912   ffe9
000914   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
000916   ffea
000918   cfee     movff   0xfee, 0x7       	MOVFF	POSTINC0, r0x07
00091a   f007
00091c   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
00091e   f008
000920   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000922   0f80     addlw   0x80             	ADDLW	0x80
000924   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000926   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000928   0f80     addlw   0x80             	ADDLW	0x80
00092a   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
00092c   e102     bnz     0x932            	BNZ	_00356_DS_
00092e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000930   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _00356_DS_:
000932   e203     bc      0x93a            	BC	_00252_DS_
000934   6a05     clrf    0x5, 0           	CLRF	r0x05
000936   6a06     clrf    0x6, 0           	CLRF	r0x06
000938   d060     bra     0x9fa            	BRA	_00253_DS_
                                           _00252_DS_:
                                           ;	.line	182; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	else if(v > Max[chan]) v = ANALOG_SCALED_MAX;
00093a   0eb3     movlw   0xb3             	MOVLW	LOW(_Max)
00093c   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
00093e   0e04     movlw   0x4              	MOVLW	HIGH(_Max)
000940   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000942   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000944   ffe9
000946   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000948   ffea
00094a   cfee     movff   0xfee, 0x3       	MOVFF	POSTINC0, r0x03
00094c   f003
00094e   cfef     movff   0xfef, 0x4       	MOVFF	INDF0, r0x04
000950   f004
000952   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000954   0f80     addlw   0x80             	ADDLW	0x80
000956   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000958   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00095a   0f80     addlw   0x80             	ADDLW	0x80
00095c   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
00095e   e102     bnz     0x964            	BNZ	_00357_DS_
000960   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000962   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _00357_DS_:
000964   e204     bc      0x96e            	BC	_00249_DS_
000966   6805     setf    0x5, 0           	SETF	r0x05
000968   0e3f     movlw   0x3f             	MOVLW	0x3f
00096a   6e06     movwf   0x6, 0           	MOVWF	r0x06
00096c   d046     bra     0x9fa            	BRA	_00253_DS_
                                           _00249_DS_:
                                           ;	.line	184; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	((ANALOG_SCALED_MAX+1UL) * (v - Min[chan])) / 
00096e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000970   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000972   6e09     movwf   0x9, 0           	MOVWF	r0x09
000974   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000976   5806     subwfb  0x6, 0, 0        	SUBWFB	r0x06, W
000978   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
00097a   6ae8     clrf    0xe8, 0          	CLRF	WREG
00097c   be0a     btfsc   0xa, 0x7, 0      	BTFSC	r0x0a, 7
00097e   0eff     movlw   0xff             	MOVLW	0xff
000980   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
                                           ; #	MOVWF	r0x0c
                                           ; #	MOVF	r0x0c, W
                                           ;	.line	185; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	(Max[chan] - Min[chan]) );
000982   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000984   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000986   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000988   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
00098a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00098c   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00098e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000990   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
000992   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
000994   0e40     movlw   0x40             	MOVLW	0x40
000996   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000998   0e00     movlw   0                	MOVLW	0x00
00099a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00099c   ec47     call    0x168e, 0        	CALL	__mullong
00099e   f00b
0009a0   6e09     movwf   0x9, 0           	MOVWF	r0x09
0009a2   cff3     movff   0xff3, 0xa       	MOVFF	PRODL, r0x0a
0009a4   f00a
0009a6   cff4     movff   0xff4, 0xb       	MOVFF	PRODH, r0x0b
0009a8   f00b
0009aa   cfe9     movff   0xfe9, 0xc       	MOVFF	FSR0L, r0x0c
0009ac   f00c
0009ae   0e08     movlw   0x8              	MOVLW	0x08
0009b0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0009b2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009b4   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
0009b6   6e07     movwf   0x7, 0           	MOVWF	r0x07
0009b8   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0009ba   5804     subwfb  0x4, 0, 0        	SUBWFB	r0x04, W
0009bc   6e08     movwf   0x8, 0           	MOVWF	r0x08
0009be   6ae8     clrf    0xe8, 0          	CLRF	WREG
0009c0   be08     btfsc   0x8, 0x7, 0      	BTFSC	r0x08, 7
0009c2   0eff     movlw   0xff             	MOVLW	0xff
0009c4   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0009c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009c8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0009ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009cc   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0009ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009d0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0009d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009d4   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0009d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009d8   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0009da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009dc   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
0009de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009e0   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0009e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0009e4   ec07     call    0x220e, 0        	CALL	__divulong
0009e6   f011
0009e8   6e03     movwf   0x3, 0           	MOVWF	r0x03
0009ea   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
0009ec   f004
0009ee   0e08     movlw   0x8              	MOVLW	0x08
0009f0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0009f2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0009f4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0009f6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0009f8   6e06     movwf   0x6, 0           	MOVWF	r0x06
                                           _00253_DS_:
0009fa   010a     movlb   0xa              	BANKSEL	(_Threshold + 1)
                                           ;	.line	187; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(v <= Threshold ) v = 0;
0009fc   512a     movf    0x2a, 0, 0x1     	MOVF	(_Threshold + 1), W, B
0009fe   0f80     addlw   0x80             	ADDLW	0x80
000a00   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000a02   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000a04   0f80     addlw   0x80             	ADDLW	0x80
000a06   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
000a08   e102     bnz     0xa0e            	BNZ	_00358_DS_
000a0a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
                                           ; removed redundant BANKSEL
000a0c   5d29     subwf   0x29, 0, 0x1     	SUBWF	_Threshold, W, B
                                           _00358_DS_:
000a0e   e303     bnc     0xa16            	BNC	_00257_DS_
000a10   6a05     clrf    0x5, 0           	CLRF	r0x05
000a12   6a06     clrf    0x6, 0           	CLRF	r0x06
000a14   d014     bra     0xa3e            	BRA	_00260_DS_
                                           _00257_DS_:
000a16   010a     movlb   0xa              	BANKSEL	_Threshold
                                           ;	.line	188; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	else if(v >= (ANALOG_SCALED_MAX - Threshold)) 
000a18   5129     movf    0x29, 0, 0x1     	MOVF	_Threshold, W, B
000a1a   08ff     sublw   0xff             	SUBLW	0xff
000a1c   6e03     movwf   0x3, 0           	MOVWF	r0x03
000a1e   0e3f     movlw   0x3f             	MOVLW	0x3f
                                           ; removed redundant BANKSEL
000a20   552a     subfwb  0x2a, 0, 0x1     	SUBFWB	(_Threshold + 1), W, B
000a22   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a24   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000a26   0f80     addlw   0x80             	ADDLW	0x80
000a28   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000a2a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a2c   0f80     addlw   0x80             	ADDLW	0x80
000a2e   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
000a30   e102     bnz     0xa36            	BNZ	_00359_DS_
000a32   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000a34   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _00359_DS_:
000a36   e303     bnc     0xa3e            	BNC	_00260_DS_
                                           ;	.line	189; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	v = ANALOG_SCALED_MAX;
000a38   6805     setf    0x5, 0           	SETF	r0x05
000a3a   0e3f     movlw   0x3f             	MOVLW	0x3f
000a3c   6e06     movwf   0x6, 0           	MOVWF	r0x06
                                           ; ;multiply lit val:0x02 by variable _analogSend_chan_1_105 and store in r0x03
                                           _00260_DS_:
000a3e   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_105
                                           ;	.line	191; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	d = v - oldValue[chan];
000a40   512e     movf    0x2e, 0, 0x1     	MOVF	_analogSend_chan_1_105, W, B
000a42   0d02     mullw   0x2              	MULLW	0x02
000a44   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000a46   6e04     movwf   0x4, 0           	MOVWF	r0x04
000a48   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000a4a   f003
000a4c   0e59     movlw   0x59             	MOVLW	LOW(_oldValue)
000a4e   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000a50   0e04     movlw   0x4              	MOVLW	HIGH(_oldValue)
000a52   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000a54   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000a56   ffe9
000a58   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000a5a   ffea
000a5c   cfee     movff   0xfee, 0x3       	MOVFF	POSTINC0, r0x03
000a5e   f003
000a60   cfef     movff   0xfef, 0x4       	MOVFF	INDF0, r0x04
000a62   f004
000a64   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000a66   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000a68   6e03     movwf   0x3, 0           	MOVWF	r0x03
000a6a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a6c   5806     subwfb  0x6, 0, 0        	SUBWFB	r0x06, W
000a6e   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ;	.line	192; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(d < 0) d = -d;
000a70   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
000a72   ae04     btfss   0x4, 0x7, 0      	BTFSS	r0x04, 7
000a74   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
000a76   e304     bnc     0xa80            	BNC	_00262_DS_
000a78   1e04     comf    0x4, 0x1, 0      	COMF	r0x04, F
000a7a   6c03     negf    0x3, 0           	NEGF	r0x03
000a7c   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
000a7e   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
                                           _00262_DS_:
                                           ;	.line	194; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	count++;
000a80   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
000a82   010a     movlb   0xa              	BANKSEL	(_Threshold + 1)
                                           ;	.line	196; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(d <= Threshold) continue;
000a84   512a     movf    0x2a, 0, 0x1     	MOVF	(_Threshold + 1), W, B
000a86   0f80     addlw   0x80             	ADDLW	0x80
000a88   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000a8a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000a8c   0f80     addlw   0x80             	ADDLW	0x80
000a8e   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
000a90   e102     bnz     0xa96            	BNZ	_00361_DS_
000a92   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
000a94   5d29     subwf   0x29, 0, 0x1     	SUBWF	_Threshold, W, B
                                           _00361_DS_:
000a96   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000a98   d6de     bra     0x856            	BRA	_00279_DS_
                                           ; ;multiply lit val:0x02 by variable _analogSend_chan_1_105 and store in r0x07
000a9a   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_105
                                           ;	.line	198; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	oldValue[chan] = v;
000a9c   512e     movf    0x2e, 0, 0x1     	MOVF	_analogSend_chan_1_105, W, B
000a9e   0d02     mullw   0x2              	MULLW	0x02
000aa0   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000aa2   6e08     movwf   0x8, 0           	MOVWF	r0x08
000aa4   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
000aa6   f007
000aa8   0e59     movlw   0x59             	MOVLW	LOW(_oldValue)
000aaa   2607     addwf   0x7, 0x1, 0      	ADDWF	r0x07, F
000aac   0e04     movlw   0x4              	MOVLW	HIGH(_oldValue)
000aae   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
000ab0   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
000ab2   ffe9
000ab4   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
000ab6   ffea
000ab8   c005     movff   0x5, 0xfee       	MOVFF	r0x05, POSTINC0
000aba   ffee
000abc   c006     movff   0x6, 0xfef       	MOVFF	r0x06, INDF0
000abe   ffef
000ac0   010a     movlb   0xa              	BANKSEL	_Mode
                                           ;	.line	200; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(Mode & AMODE_CROSS) {
000ac2   a52b     btfss   0x2b, 0x2, 0x1   	BTFSS	_Mode, 2, B
000ac4   d05a     bra     0xb7a            	BRA	_00272_DS_
                                           ; ;multiply lit val:0x02 by variable _analogSend_chan_1_105 and store in r0x07
000ac6   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_105
                                           ;	.line	201; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(Dist[chan] != 0) {
000ac8   512e     movf    0x2e, 0, 0x1     	MOVF	_analogSend_chan_1_105, W, B
000aca   0d02     mullw   0x2              	MULLW	0x02
000acc   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000ace   6e08     movwf   0x8, 0           	MOVWF	r0x08
000ad0   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
000ad2   f007
000ad4   0ed3     movlw   0xd3             	MOVLW	LOW(_Dist)
000ad6   2407     addwf   0x7, 0, 0        	ADDWF	r0x07, W
000ad8   6e09     movwf   0x9, 0           	MOVWF	r0x09
000ada   0e04     movlw   0x4              	MOVLW	HIGH(_Dist)
000adc   2008     addwfc  0x8, 0, 0        	ADDWFC	r0x08, W
000ade   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000ae0   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
000ae2   ffe9
000ae4   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
000ae6   ffea
000ae8   cfee     movff   0xfee, 0xb       	MOVFF	POSTINC0, r0x0b
000aea   f00b
000aec   cfef     movff   0xfef, 0xc       	MOVFF	INDF0, r0x0c
000aee   f00c
000af0   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
000af2   100c     iorwf   0xc, 0, 0        	IORWF	r0x0c, W
000af4   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
000af6   d041     bra     0xb7a            	BRA	_00272_DS_
                                           ;	.line	202; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	d = v - inValue[chan];
000af8   0e39     movlw   0x39             	MOVLW	LOW(_inValue)
000afa   2607     addwf   0x7, 0x1, 0      	ADDWF	r0x07, F
000afc   0e04     movlw   0x4              	MOVLW	HIGH(_inValue)
000afe   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
000b00   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
000b02   ffe9
000b04   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
000b06   ffea
000b08   cfee     movff   0xfee, 0x7       	MOVFF	POSTINC0, r0x07
000b0a   f007
000b0c   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
000b0e   f008
000b10   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b12   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
000b14   6e03     movwf   0x3, 0           	MOVWF	r0x03
000b16   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000b18   5806     subwfb  0x6, 0, 0        	SUBWFB	r0x06, W
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x03, W
                                           ; #	IORWF	r0x04, W
                                           ;	.line	203; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if((d != 0) && ((d > 0) == (Dist[chan] > 0))) { 
000b1a   6e04     movwf   0x4, 0           	MOVWF	r0x04
000b1c   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
000b1e   e01c     bz      0xb58            	BZ	_00266_DS_
000b20   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
000b22   0f80     addlw   0x80             	ADDLW	0x80
000b24   0f80     addlw   0x80             	ADDLW	0x80
000b26   e102     bnz     0xb2c            	BNZ	_00364_DS_
000b28   0e01     movlw   0x1              	MOVLW	0x01
000b2a   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _00364_DS_:
000b2c   6a07     clrf    0x7, 0           	CLRF	r0x07
000b2e   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
000b30   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
000b32   0f80     addlw   0x80             	ADDLW	0x80
000b34   0f80     addlw   0x80             	ADDLW	0x80
000b36   e102     bnz     0xb3c            	BNZ	_00366_DS_
000b38   0e01     movlw   0x1              	MOVLW	0x01
000b3a   5c0b     subwf   0xb, 0, 0        	SUBWF	r0x0b, W
                                           _00366_DS_:
000b3c   6a0b     clrf    0xb, 0           	CLRF	r0x0b
000b3e   360b     rlcf    0xb, 0x1, 0      	RLCF	r0x0b, F
000b40   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000b42   180b     xorwf   0xb, 0, 0        	XORWF	r0x0b, W
000b44   e109     bnz     0xb58            	BNZ	_00266_DS_
                                           ;	.line	204; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Dist[chan] = d;
000b46   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
000b48   ffe9
000b4a   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
000b4c   ffea
000b4e   c003     movff   0x3, 0xfee       	MOVFF	r0x03, POSTINC0
000b50   ffee
000b52   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
000b54   ffef
                                           ;	.line	205; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	continue; 
000b56   d67f     bra     0x856            	BRA	_00279_DS_
                                           ; ;multiply lit val:0x02 by variable _analogSend_chan_1_105 and store in r0x03
                                           _00266_DS_:
000b58   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_105
                                           ;	.line	207; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	else Dist[chan] = 0;
000b5a   512e     movf    0x2e, 0, 0x1     	MOVF	_analogSend_chan_1_105, W, B
000b5c   0d02     mullw   0x2              	MULLW	0x02
000b5e   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000b60   6e04     movwf   0x4, 0           	MOVWF	r0x04
000b62   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000b64   f003
000b66   0ed3     movlw   0xd3             	MOVLW	LOW(_Dist)
000b68   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000b6a   0e04     movlw   0x4              	MOVLW	HIGH(_Dist)
000b6c   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000b6e   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000b70   ffe9
000b72   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000b74   ffea
000b76   6aee     clrf    0xee, 0          	CLRF	POSTINC0
000b78   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           _00272_DS_:
000b7a   010a     movlb   0xa              	BANKSEL	_Mode
                                           ;	.line	211; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(Mode & AMODE_NUM) {
000b7c   a32b     btfss   0x2b, 0x1, 0x1   	BTFSS	_Mode, 1, B
000b7e   d043     bra     0xc06            	BRA	_00276_DS_
                                           ;	.line	212; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if( !len ) buf[len++] = 'B';
000b80   5000     movf    0, 0, 0          	MOVF	r0x00, W
000b82   e10e     bnz     0xba0            	BNZ	_00274_DS_
000b84   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
000b86   f003
000b88   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
000b8a   6a04     clrf    0x4, 0           	CLRF	r0x04
000b8c   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_105)
000b8e   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000b90   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_105)
000b92   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000b94   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000b96   ffe9
000b98   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000b9a   ffea
000b9c   0e42     movlw   0x42             	MOVLW	0x42
000b9e   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           _00274_DS_:
                                           ;	.line	213; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	buf[len++] = chan + 100;
000ba0   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
000ba2   f003
000ba4   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
000ba6   6a04     clrf    0x4, 0           	CLRF	r0x04
000ba8   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_105)
000baa   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000bac   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_105)
000bae   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000bb0   0e64     movlw   0x64             	MOVLW	0x64
000bb2   010a     movlb   0xa              	BANKSEL	_analogSend_chan_1_105
000bb4   252e     addwf   0x2e, 0, 0x1     	ADDWF	_analogSend_chan_1_105, W, B
000bb6   6e07     movwf   0x7, 0           	MOVWF	r0x07
000bb8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000bba   ffe9
000bbc   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000bbe   ffea
000bc0   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
000bc2   ffef
                                           ;	.line	214; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	buf[len++] = v >> 8;
000bc4   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
000bc6   f003
000bc8   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
000bca   6a04     clrf    0x4, 0           	CLRF	r0x04
000bcc   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_105)
000bce   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000bd0   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_105)
000bd2   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000bd4   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000bd6   6e07     movwf   0x7, 0           	MOVWF	r0x07
000bd8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000bda   ffe9
000bdc   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000bde   ffea
000be0   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
000be2   ffef
                                           ;	.line	215; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	buf[len++] = v & 255;
000be4   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
000be6   f003
000be8   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
000bea   6a04     clrf    0x4, 0           	CLRF	r0x04
000bec   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_105)
000bee   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000bf0   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_105)
000bf2   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000bf4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000bf6   6e07     movwf   0x7, 0           	MOVWF	r0x07
000bf8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000bfa   ffe9
000bfc   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000bfe   ffea
000c00   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
000c02   ffef
000c04   d628     bra     0x856            	BRA	_00279_DS_
                                           _00276_DS_:
                                           ;	.line	217; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	else printf("C A %d %d\n",chan,v);
000c06   ca2e     movff   0xa2e, 0x3       	MOVFF	_analogSend_chan_1_105, r0x03
000c08   f003
000c0a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000c0c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c0e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000c10   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c12   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
000c14   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000c16   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c18   0e00     movlw   0                	MOVLW	UPPER(___str_0)
000c1a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c1c   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_0)
000c1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c20   0eac     movlw   0xac             	MOVLW	LOW(___str_0)
000c22   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c24   ecfc     call    0x39f8, 0        	CALL	_printf
000c26   f01c
000c28   0e07     movlw   0x7              	MOVLW	0x07
000c2a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
000c2c   d614     bra     0x856            	BRA	_00279_DS_
                                           _00307_DS_:
000c2e   c002     movff   0x2, 0x1         	MOVFF	r0x02, r0x01
000c30   f001
                                           ;	.line	220; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if((len != 0) && (Mode & AMODE_NUM)) {
000c32   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c34   e01d     bz      0xc70            	BZ	_00283_DS_
000c36   010a     movlb   0xa              	BANKSEL	_Mode
000c38   a32b     btfss   0x2b, 0x1, 0x1   	BTFSS	_Mode, 1, B
000c3a   d01a     bra     0xc70            	BRA	_00283_DS_
                                           ;	.line	221; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	buf[len++] = '\n';
000c3c   c000     movff   0, 0x2           	MOVFF	r0x00, r0x02
000c3e   f002
000c40   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
000c42   6a03     clrf    0x3, 0           	CLRF	r0x03
000c44   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_105)
000c46   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
000c48   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_105)
000c4a   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
000c4c   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
000c4e   ffe9
000c50   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
000c52   ffea
000c54   0e0a     movlw   0xa              	MOVLW	0x0a
000c56   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           ;	.line	222; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	fraiseSend(buf,len);
000c58   5000     movf    0, 0, 0          	MOVF	r0x00, W
000c5a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c5c   0e80     movlw   0x80             	MOVLW	0x80
000c5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c60   0e0a     movlw   0xa              	MOVLW	HIGH(_analogSend_buf_1_105)
000c62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c64   0e2f     movlw   0x2f             	MOVLW	LOW(_analogSend_buf_1_105)
000c66   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000c68   ecdc     call    0x2bb8, 0        	CALL	_fraiseSend
000c6a   f015
000c6c   0e04     movlw   0x4              	MOVLW	0x04
000c6e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00283_DS_:
                                           ;	.line	225; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	return count;		
000c70   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000c72   cfe4     movff   0xfe4, 0xc       	MOVFF	PREINC1, r0x0c
000c74   f00c
000c76   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
000c78   f00b
000c7a   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
000c7c   f00a
000c7e   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
000c80   f009
000c82   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
000c84   f008
000c86   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
000c88   f007
000c8a   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
000c8c   f006
000c8e   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
000c90   f005
000c92   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
000c94   f004
000c96   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
000c98   f003
000c9a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
000c9c   f002
000c9e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
000ca0   f001
000ca2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
000ca4   f000
000ca6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogService	code
                                           _analogService:
                                           ;	.line	107; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	unsigned char analogService(void)
000ca8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
000caa   ffe5
000cac   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
000cae   ffe5
000cb0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
000cb2   ffe5
000cb4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
000cb6   ffe5
000cb8   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
000cba   ffe5
000cbc   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
000cbe   ffe5
000cc0   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
000cc2   ffe5
000cc4   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
000cc6   ffe5
000cc8   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
000cca   ffe5
000ccc   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
000cce   ffe5
000cd0   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
000cd2   ffe5
                                           ;	.line	113; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(ADCON0bits.GO) return chan;
000cd4   a2c2     btfss   0xc2, 0x1, 0     	BTFSS	_ADCON0bits, 1
000cd6   d004     bra     0xce0            	BRA	_00166_DS_
000cd8   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_98
000cda   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_98, W, B
000cdc   ef6d     goto    0x10da           	GOTO	_00183_DS_
000cde   f008
                                           _00166_DS_:
000ce0   010a     movlb   0xa              	BANKSEL	_analogService_conv_1_98
                                           ;	.line	115; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(conv) {
000ce2   512d     movf    0x2d, 0, 0x1     	MOVF	_analogService_conv_1_98, W, B
000ce4   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
000ce6   d11b     bra     0xf1e            	BRA	_00176_DS_
                                           ; ;multiply lit val:0x02 by variable _analogService_chan_1_98 and store in r0x00
000ce8   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_98
                                           ;	.line	116; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	v = Value[chan];
000cea   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_98, W, B
000cec   0d02     mullw   0x2              	MULLW	0x02
000cee   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000cf0   6e01     movwf   0x1, 0           	MOVWF	r0x01
000cf2   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
000cf4   f000
000cf6   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
000cf8   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
000cfa   0e00     movlw   0                	MOVLW	HIGH(_Value)
000cfc   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
000cfe   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
000d00   ffe9
000d02   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
000d04   ffea
000d06   cfee     movff   0xfee, 0         	MOVFF	POSTINC0, r0x00
000d08   f000
000d0a   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
000d0c   f001
                                           ;	.line	118; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	pin = Pins[chan];
000d0e   0e23     movlw   0x23             	MOVLW	LOW(_Pins)
                                           ; removed redundant BANKSEL
000d10   252c     addwf   0x2c, 0, 0x1     	ADDWF	_analogService_chan_1_98, W, B
000d12   6e02     movwf   0x2, 0           	MOVWF	r0x02
000d14   6a03     clrf    0x3, 0           	CLRF	r0x03
000d16   0e04     movlw   0x4              	MOVLW	HIGH(_Pins)
000d18   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
000d1a   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
000d1c   ffe9
000d1e   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
000d20   ffea
000d22   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
000d24   f002
                                           ;	.line	119; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(pin != 255) {
000d26   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000d28   0aff     xorlw   0xff             	XORLW	0xff
000d2a   e101     bnz     0xd2e            	BNZ	_00213_DS_
000d2c   d052     bra     0xdd2            	BRA	_00168_DS_
                                           _00213_DS_:
                                           ;	.line	120; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitclr(*(&TRISA+(pin>>4)),pin&7);
000d2e   3802     swapf   0x2, 0, 0        	SWAPF	r0x02, W
000d30   0b0f     andlw   0xf              	ANDLW	0x0f
000d32   6e03     movwf   0x3, 0           	MOVWF	r0x03
000d34   0e92     movlw   0x92             	MOVLW	LOW(_TRISA)
000d36   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
000d38   6e04     movwf   0x4, 0           	MOVWF	r0x04
000d3a   6a05     clrf    0x5, 0           	CLRF	r0x05
000d3c   0e0f     movlw   0xf              	MOVLW	HIGH(_TRISA)
000d3e   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
000d40   6a06     clrf    0x6, 0           	CLRF	r0x06
000d42   0e92     movlw   0x92             	MOVLW	LOW(_TRISA)
000d44   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000d46   0e0f     movlw   0xf              	MOVLW	HIGH(_TRISA)
000d48   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
000d4a   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000d4c   ffe9
000d4e   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
000d50   ffea
000d52   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
000d54   f003
000d56   0e07     movlw   0x7              	MOVLW	0x07
000d58   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
000d5a   6e06     movwf   0x6, 0           	MOVWF	r0x06
000d5c   0e01     movlw   0x1              	MOVLW	0x01
000d5e   6e07     movwf   0x7, 0           	MOVWF	r0x07
000d60   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000d62   e005     bz      0xd6e            	BZ	_00215_DS_
000d64   6ce8     negf    0xe8, 0          	NEGF	WREG
000d66   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00216_DS_:
000d68   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
000d6a   0f01     addlw   0x1              	ADDLW	0x01
000d6c   e3fd     bnc     0xd68            	BNC	_00216_DS_
                                           _00215_DS_:
000d6e   1c07     comf    0x7, 0, 0        	COMF	r0x07, W
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
000d70   6e06     movwf   0x6, 0           	MOVWF	r0x06
000d72   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
000d74   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
000d76   ffe9
000d78   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
000d7a   ffea
000d7c   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
000d7e   ffef
                                           ;	.line	121; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitclr(*(&LATA+(pin>>4)),pin&7);
000d80   3802     swapf   0x2, 0, 0        	SWAPF	r0x02, W
000d82   0b0f     andlw   0xf              	ANDLW	0x0f
000d84   6e03     movwf   0x3, 0           	MOVWF	r0x03
000d86   0e89     movlw   0x89             	MOVLW	LOW(_LATA)
000d88   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
000d8a   6e04     movwf   0x4, 0           	MOVWF	r0x04
000d8c   6a05     clrf    0x5, 0           	CLRF	r0x05
000d8e   0e0f     movlw   0xf              	MOVLW	HIGH(_LATA)
000d90   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
000d92   6a06     clrf    0x6, 0           	CLRF	r0x06
000d94   0e89     movlw   0x89             	MOVLW	LOW(_LATA)
000d96   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000d98   0e0f     movlw   0xf              	MOVLW	HIGH(_LATA)
000d9a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
000d9c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000d9e   ffe9
000da0   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
000da2   ffea
000da4   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
000da6   f003
000da8   0e07     movlw   0x7              	MOVLW	0x07
000daa   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
000dac   6e06     movwf   0x6, 0           	MOVWF	r0x06
000dae   0e01     movlw   0x1              	MOVLW	0x01
000db0   6e07     movwf   0x7, 0           	MOVWF	r0x07
000db2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000db4   e005     bz      0xdc0            	BZ	_00219_DS_
000db6   6ce8     negf    0xe8, 0          	NEGF	WREG
000db8   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00220_DS_:
000dba   3607     rlcf    0x7, 0x1, 0      	RLCF	r0x07, F
000dbc   0f01     addlw   0x1              	ADDLW	0x01
000dbe   e3fd     bnc     0xdba            	BNC	_00220_DS_
                                           _00219_DS_:
000dc0   1c07     comf    0x7, 0, 0        	COMF	r0x07, W
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
000dc2   6e06     movwf   0x6, 0           	MOVWF	r0x06
000dc4   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
000dc6   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
000dc8   ffe9
000dca   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
000dcc   ffea
000dce   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
000dd0   ffef
                                           ; ;multiply lit val:0x02 by variable _analogService_chan_1_98 and store in r0x03
                                           _00168_DS_:
000dd2   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_98
                                           ;	.line	123; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Value[chan] = v - (v>>ANALOG_FILTER) + ADRESL+(ADRESH<<8); 
000dd4   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_98, W, B
000dd6   0d02     mullw   0x2              	MULLW	0x02
000dd8   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000dda   6e04     movwf   0x4, 0           	MOVWF	r0x04
000ddc   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000dde   f003
000de0   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
000de2   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000de4   0e00     movlw   0                	MOVLW	HIGH(_Value)
000de6   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000de8   3401     rlcf    0x1, 0, 0        	RLCF	r0x01, W
000dea   3001     rrcf    0x1, 0, 0        	RRCF	r0x01, W
000dec   6e06     movwf   0x6, 0           	MOVWF	r0x06
000dee   3000     rrcf    0, 0, 0          	RRCF	r0x00, W
000df0   6e05     movwf   0x5, 0           	MOVWF	r0x05
000df2   3406     rlcf    0x6, 0, 0        	RLCF	r0x06, W
000df4   3206     rrcf    0x6, 0x1, 0      	RRCF	r0x06, F
000df6   3205     rrcf    0x5, 0x1, 0      	RRCF	r0x05, F
000df8   3406     rlcf    0x6, 0, 0        	RLCF	r0x06, W
000dfa   3206     rrcf    0x6, 0x1, 0      	RRCF	r0x06, F
000dfc   3205     rrcf    0x5, 0x1, 0      	RRCF	r0x05, F
000dfe   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000e00   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
000e02   6e05     movwf   0x5, 0           	MOVWF	r0x05
000e04   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000e06   5801     subwfb  0x1, 0, 0        	SUBWFB	r0x01, W
000e08   6e06     movwf   0x6, 0           	MOVWF	r0x06
000e0a   cfc3     movff   0xfc3, 0x7       	MOVFF	_ADRESL, r0x07
000e0c   f007
000e0e   6a08     clrf    0x8, 0           	CLRF	r0x08
000e10   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000e12   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
000e14   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
000e16   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
000e18   cfc4     movff   0xfc4, 0x7       	MOVFF	_ADRESH, r0x07
000e1a   f007
000e1c   6a08     clrf    0x8, 0           	CLRF	r0x08
000e1e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
000e20   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
000e22   6a09     clrf    0x9, 0           	CLRF	r0x09
000e24   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
000e26   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
000e28   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
000e2a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
000e2c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000e2e   ffe9
000e30   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000e32   ffea
000e34   c005     movff   0x5, 0xfee       	MOVFF	r0x05, POSTINC0
000e36   ffee
000e38   c006     movff   0x6, 0xfef       	MOVFF	r0x06, INDF0
000e3a   ffef
000e3c   010a     movlb   0xa              	BANKSEL	_Scaling
                                           ;	.line	124; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(Scaling == 1) {
000e3e   5128     movf    0x28, 0, 0x1     	MOVF	_Scaling, W, B
000e40   0a01     xorlw   0x1              	XORLW	0x01
000e42   e001     bz      0xe46            	BZ	_00223_DS_
000e44   d06a     bra     0xf1a            	BRA	_00174_DS_
                                           ; ;multiply lit val:0x02 by variable _analogService_chan_1_98 and store in r0x03
                                           _00223_DS_:
000e46   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_98
                                           ;	.line	125; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	v = Value[chan];
000e48   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_98, W, B
000e4a   0d02     mullw   0x2              	MULLW	0x02
000e4c   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000e4e   6e04     movwf   0x4, 0           	MOVWF	r0x04
000e50   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000e52   f003
000e54   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
000e56   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
000e58   6e05     movwf   0x5, 0           	MOVWF	r0x05
000e5a   0e00     movlw   0                	MOVLW	HIGH(_Value)
000e5c   2004     addwfc  0x4, 0, 0        	ADDWFC	r0x04, W
000e5e   6e06     movwf   0x6, 0           	MOVWF	r0x06
000e60   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
000e62   ffe9
000e64   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
000e66   ffea
000e68   cfee     movff   0xfee, 0         	MOVFF	POSTINC0, r0x00
000e6a   f000
000e6c   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
000e6e   f001
                                           ;	.line	126; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(v < (Min[chan]-MINMAX_MARGIN)) Min[chan] = v+MINMAX_MARGIN;
000e70   0e93     movlw   0x93             	MOVLW	LOW(_Min)
000e72   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000e74   0e04     movlw   0x4              	MOVLW	HIGH(_Min)
000e76   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000e78   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000e7a   ffe9
000e7c   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000e7e   ffea
000e80   cfee     movff   0xfee, 0x5       	MOVFF	POSTINC0, r0x05
000e82   f005
000e84   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
000e86   f006
000e88   0e9c     movlw   0x9c             	MOVLW	0x9c
000e8a   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
000e8c   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
000e8e   0606     decf    0x6, 0x1, 0      	DECF	r0x06, F
000e90   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000e92   0f80     addlw   0x80             	ADDLW	0x80
000e94   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000e96   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000e98   0f80     addlw   0x80             	ADDLW	0x80
000e9a   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
000e9c   e102     bnz     0xea2            	BNZ	_00224_DS_
000e9e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000ea0   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00224_DS_:
000ea2   e20e     bc      0xec0            	BC	_00170_DS_
000ea4   5000     movf    0, 0, 0          	MOVF	r0x00, W
000ea6   0f64     addlw   0x64             	ADDLW	0x64
000ea8   6e05     movwf   0x5, 0           	MOVWF	r0x05
000eaa   0e00     movlw   0                	MOVLW	0x00
000eac   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
000eae   6e06     movwf   0x6, 0           	MOVWF	r0x06
000eb0   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000eb2   ffe9
000eb4   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000eb6   ffea
000eb8   c005     movff   0x5, 0xfee       	MOVFF	r0x05, POSTINC0
000eba   ffee
000ebc   c006     movff   0x6, 0xfef       	MOVFF	r0x06, INDF0
000ebe   ffef
                                           ; ;multiply lit val:0x02 by variable _analogService_chan_1_98 and store in r0x03
                                           _00170_DS_:
000ec0   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_98
                                           ;	.line	127; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(v > (Max[chan]+MINMAX_MARGIN)) Max[chan] = v-MINMAX_MARGIN;
000ec2   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_98, W, B
000ec4   0d02     mullw   0x2              	MULLW	0x02
000ec6   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
000ec8   6e04     movwf   0x4, 0           	MOVWF	r0x04
000eca   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
000ecc   f003
000ece   0eb3     movlw   0xb3             	MOVLW	LOW(_Max)
000ed0   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
000ed2   0e04     movlw   0x4              	MOVLW	HIGH(_Max)
000ed4   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000ed6   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000ed8   ffe9
000eda   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000edc   ffea
000ede   cfee     movff   0xfee, 0x5       	MOVFF	POSTINC0, r0x05
000ee0   f005
000ee2   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
000ee4   f006
000ee6   0e64     movlw   0x64             	MOVLW	0x64
000ee8   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
000eea   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
000eec   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
000eee   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
000ef0   0f80     addlw   0x80             	ADDLW	0x80
000ef2   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
000ef4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000ef6   0f80     addlw   0x80             	ADDLW	0x80
000ef8   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
000efa   e102     bnz     0xf00            	BNZ	_00225_DS_
000efc   5000     movf    0, 0, 0          	MOVF	r0x00, W
000efe   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _00225_DS_:
000f00   e20c     bc      0xf1a            	BC	_00174_DS_
000f02   0e9c     movlw   0x9c             	MOVLW	0x9c
000f04   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
000f06   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
000f08   0601     decf    0x1, 0x1, 0      	DECF	r0x01, F
000f0a   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
000f0c   ffe9
000f0e   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000f10   ffea
000f12   c000     movff   0, 0xfee         	MOVFF	r0x00, POSTINC0
000f14   ffee
000f16   c001     movff   0x1, 0xfef       	MOVFF	r0x01, INDF0
000f18   ffef
                                           _00174_DS_:
000f1a   010a     movlb   0xa              	BANKSEL	_analogService_conv_1_98
                                           ;	.line	129; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	conv=0;
000f1c   6b2d     clrf    0x2d, 0x1        	CLRF	_analogService_conv_1_98, B
                                           _00176_DS_:
000f1e   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_98
                                           ;	.line	132; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	chan++;
000f20   2b2c     incf    0x2c, 0x1, 0x1   	INCF	_analogService_chan_1_98, F, B
                                           ;	.line	133; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(chan >= ANALOG_MAX_CHANNELS) chan = 0;
000f22   0e10     movlw   0x10             	MOVLW	0x10
                                           ; #	SUBWF	_analogService_chan_1_98, W, B
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00178_DS_
                                           ; #	CLRF	_analogService_chan_1_98, B
                                           ; #	SWAPF	_analogService_chan_1_98, W, B
                                           ; removed redundant BANKSEL
                                           ;	.line	135; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(isSelected(chan))	{
000f24   5d2c     subwf   0x2c, 0, 0x1     	SUBWF	_analogService_chan_1_98, W, B
000f26   e301     bnc     0xf2a            	BNC	_20435_DS_
                                           ; removed redundant BANKSEL
000f28   6b2c     clrf    0x2c, 0x1        	CLRF	_analogService_chan_1_98, B
                                           _20435_DS_:
000f2a   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_98
000f2c   392c     swapf   0x2c, 0, 0x1     	SWAPF	_analogService_chan_1_98, W, B
000f2e   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
000f30   0b1f     andlw   0x1f             	ANDLW	0x1f
000f32   6e00     movwf   0, 0             	MOVWF	r0x00
000f34   6a01     clrf    0x1, 0           	CLRF	r0x01
000f36   0e5a     movlw   0x5a             	MOVLW	LOW(_Selected)
000f38   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
000f3a   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
000f3c   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
000f3e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
000f40   ffe9
000f42   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
000f44   ffea
000f46   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
000f48   f000
000f4a   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
000f4c   152c     andwf   0x2c, 0, 0x1     	ANDWF	_analogService_chan_1_98, W, B
000f4e   6e01     movwf   0x1, 0           	MOVWF	r0x01
000f50   0e01     movlw   0x1              	MOVLW	0x01
000f52   6e03     movwf   0x3, 0           	MOVWF	r0x03
000f54   0e00     movlw   0                	MOVLW	0x00
000f56   6e04     movwf   0x4, 0           	MOVWF	r0x04
000f58   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
000f5a   e006     bz      0xf68            	BZ	_00228_DS_
000f5c   6ce8     negf    0xe8, 0          	NEGF	WREG
000f5e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00229_DS_:
000f60   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
000f62   3604     rlcf    0x4, 0x1, 0      	RLCF	r0x04, F
000f64   0f01     addlw   0x1              	ADDLW	0x01
000f66   e3fc     bnc     0xf60            	BNC	_00229_DS_
                                           _00228_DS_:
000f68   6a05     clrf    0x5, 0           	CLRF	r0x05
000f6a   5000     movf    0, 0, 0          	MOVF	r0x00, W
000f6c   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
000f6e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
000f70   1604     andwf   0x4, 0x1, 0      	ANDWF	r0x04, F
000f72   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000f74   1004     iorwf   0x4, 0, 0        	IORWF	r0x04, W
000f76   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
000f78   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
000f7a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
000f7c   6a03     clrf    0x3, 0           	CLRF	r0x03
000f7e   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
000f80   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
000f82   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
000f84   d0a8     bra     0x10d6           	BRA	_00182_DS_
                                           ;	.line	136; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON0=(HWChan[chan] << 2) + 1;
000f86   0e23     movlw   0x23             	MOVLW	LOW(_HWChan)
000f88   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_98
000f8a   252c     addwf   0x2c, 0, 0x1     	ADDWF	_analogService_chan_1_98, W, B
000f8c   6e00     movwf   0, 0             	MOVWF	r0x00
000f8e   6a01     clrf    0x1, 0           	CLRF	r0x01
000f90   0e0f     movlw   0xf              	MOVLW	HIGH(_HWChan)
000f92   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
000f94   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
000f96   ffe9
000f98   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
000f9a   ffea
000f9c   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
000f9e   f000
000fa0   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
000fa2   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
000fa4   0bfc     andlw   0xfc             	ANDLW	0xfc
000fa6   6e01     movwf   0x1, 0           	MOVWF	r0x01
000fa8   2801     incf    0x1, 0, 0        	INCF	r0x01, W
000faa   6ec2     movwf   0xc2, 0          	MOVWF	_ADCON0
                                           ; removed redundant BANKSEL
                                           ;	.line	138; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ANALOG_CHANNEL_PRECONF(chan);
000fac   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_98, W, B
000fae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
000fb0   ec4d     call    0x289a, 0        	CALL	_FSLP_analog_preconf
000fb2   f014
000fb4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	140; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	pin = Pins[chan];
000fb6   0e23     movlw   0x23             	MOVLW	LOW(_Pins)
000fb8   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_98
000fba   252c     addwf   0x2c, 0, 0x1     	ADDWF	_analogService_chan_1_98, W, B
000fbc   6e00     movwf   0, 0             	MOVWF	r0x00
000fbe   6a01     clrf    0x1, 0           	CLRF	r0x01
000fc0   0e04     movlw   0x4              	MOVLW	HIGH(_Pins)
000fc2   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
000fc4   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
000fc6   ffe9
000fc8   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
000fca   ffea
000fcc   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
000fce   f002
                                           ;	.line	141; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	if(pin != 255) {
000fd0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
000fd2   0aff     xorlw   0xff             	XORLW	0xff
000fd4   e101     bnz     0xfd8            	BNZ	_00232_DS_
000fd6   d07b     bra     0x10ce           	BRA	_00180_DS_
                                           _00232_DS_:
                                           ;	.line	142; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitset(*(&TRISA+(pin>>4)),pin&7);// set channel to digital input
000fd8   3802     swapf   0x2, 0, 0        	SWAPF	r0x02, W
000fda   0b0f     andlw   0xf              	ANDLW	0x0f
000fdc   6e00     movwf   0, 0             	MOVWF	r0x00
000fde   0e92     movlw   0x92             	MOVLW	LOW(_TRISA)
000fe0   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
000fe2   6e01     movwf   0x1, 0           	MOVWF	r0x01
000fe4   6a03     clrf    0x3, 0           	CLRF	r0x03
000fe6   0e0f     movlw   0xf              	MOVLW	HIGH(_TRISA)
000fe8   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
000fea   6a04     clrf    0x4, 0           	CLRF	r0x04
000fec   0e92     movlw   0x92             	MOVLW	LOW(_TRISA)
000fee   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
000ff0   0e0f     movlw   0xf              	MOVLW	HIGH(_TRISA)
000ff2   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
000ff4   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
000ff6   ffe9
000ff8   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
000ffa   ffea
000ffc   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
000ffe   f000
001000   0e07     movlw   0x7              	MOVLW	0x07
001002   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
001004   6e04     movwf   0x4, 0           	MOVWF	r0x04
001006   0e01     movlw   0x1              	MOVLW	0x01
001008   6e05     movwf   0x5, 0           	MOVWF	r0x05
00100a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00100c   e005     bz      0x1018           	BZ	_00234_DS_
00100e   6ce8     negf    0xe8, 0          	NEGF	WREG
001010   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00235_DS_:
001012   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
001014   0f01     addlw   0x1              	ADDLW	0x01
001016   e3fd     bnc     0x1012           	BNC	_00235_DS_
                                           _00234_DS_:
001018   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00101a   1200     iorwf   0, 0x1, 0        	IORWF	r0x00, F
00101c   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00101e   ffe9
001020   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001022   ffea
001024   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
001026   ffef
                                           ;	.line	143; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitset(*(__data unsigned char*)((int)&ANSELA + (pin>>4)),pin&7);// set channel to analog input
001028   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
00102a   6e00     movwf   0, 0             	MOVWF	r0x00
00102c   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
00102e   6e01     movwf   0x1, 0           	MOVWF	r0x01
001030   3802     swapf   0x2, 0, 0        	SWAPF	r0x02, W
001032   0b0f     andlw   0xf              	ANDLW	0x0f
001034   6e03     movwf   0x3, 0           	MOVWF	r0x03
001036   6a04     clrf    0x4, 0           	CLRF	r0x04
001038   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00103a   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00103c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00103e   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
001040   0e38     movlw   0x38             	MOVLW	LOW(_ANSELA)
001042   6e05     movwf   0x5, 0           	MOVWF	r0x05
001044   0e0f     movlw   0xf              	MOVLW	HIGH(_ANSELA)
001046   6e06     movwf   0x6, 0           	MOVWF	r0x06
001048   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00104a   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
00104c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00104e   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
001050   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
001052   ffe9
001054   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
001056   ffea
001058   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
00105a   f003
00105c   0e07     movlw   0x7              	MOVLW	0x07
00105e   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
001060   0e01     movlw   0x1              	MOVLW	0x01
001062   6e04     movwf   0x4, 0           	MOVWF	r0x04
001064   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001066   e005     bz      0x1072           	BZ	_00238_DS_
001068   6ce8     negf    0xe8, 0          	NEGF	WREG
00106a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00239_DS_:
00106c   3604     rlcf    0x4, 0x1, 0      	RLCF	r0x04, F
00106e   0f01     addlw   0x1              	ADDLW	0x01
001070   e3fd     bnc     0x106c           	BNC	_00239_DS_
                                           _00238_DS_:
001072   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001074   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
001076   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
001078   ffe9
00107a   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00107c   ffea
00107e   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
001080   ffef
001082   010f     movlb   0xf              	BANKSEL	_CTMUCONHbits
                                           ;	.line	144; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONHbits.IDISSEN = 1;		// Drain any charge on the A/D circuit
001084   8345     bsf     0x45, 0x1, 0x1   	BSF	_CTMUCONHbits, 1, B
001086   0000     nop                      	nop	
001088   0000     nop                      	nop	
                                           ;	.line	146; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONHbits.IDISSEN =  0;		// Stop discharge of A/D circuit
00108a   9345     bcf     0x45, 0x1, 0x1   	BCF	_CTMUCONHbits, 1, B
00108c   010f     movlb   0xf              	BANKSEL	_CTMUCONLbits
                                           ;	.line	147; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONLbits.EDG2STAT = 0;		// Make sure edge2 is 0
00108e   9344     bcf     0x44, 0x1, 0x1   	BCF	_CTMUCONLbits, 1, B
                                           ;	.line	156; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	}			
001090   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
001092   ffe5
001094   cff2     movff   0xff2, 0xb       	MOVFF	INTCON, r0x0b
001096   f00b
001098   9ef2     bcf     0xf2, 0x7, 0     	BCF	INTCON, 7
                                           ; removed redundant BANKSEL
                                           ;	.line	149; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONLbits.EDG1STAT = 1;	// Set edge1 - Start Charge
00109a   8144     bsf     0x44, 0, 0x1     	BSF	_CTMUCONLbits, 0, B
00109c   0000     nop                      	nop	
00109e   0000     nop                      	nop	
0010a0   0000     nop                      	nop	
0010a2   0000     nop                      	nop	
0010a4   0000     nop                      	nop	
0010a6   0000     nop                      	nop	
0010a8   0000     nop                      	nop	
0010aa   0000     nop                      	nop	
0010ac   0000     nop                      	nop	
0010ae   0000     nop                      	nop	
0010b0   0000     nop                      	nop	
0010b2   0000     nop                      	nop	
0010b4   0000     nop                      	nop	
0010b6   0000     nop                      	nop	
0010b8   0000     nop                      	nop	
0010ba   0000     nop                      	nop	
0010bc   0000     nop                      	nop	
0010be   0000     nop                      	nop	
0010c0   0000     nop                      	nop	
0010c2   0000     nop                      	nop	
                                           ;	.line	155; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONLbits.EDG1STAT = 0;	//Clear edge1 - Stop Charge
0010c4   9144     bcf     0x44, 0, 0x1     	BCF	_CTMUCONLbits, 0, B
0010c6   be0b     btfsc   0xb, 0x7, 0      	BTFSC	r0x0b, 7
0010c8   8ef2     bsf     0xf2, 0x7, 0     	BSF	INTCON, 7
0010ca   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
0010cc   f00b
                                           _00180_DS_:
                                           ;	.line	158; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON0bits.GO = 1;
0010ce   82c2     bsf     0xc2, 0x1, 0     	BSF	_ADCON0bits, 1
                                           ;	.line	159; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	conv = 1;
0010d0   0e01     movlw   0x1              	MOVLW	0x01
0010d2   010a     movlb   0xa              	BANKSEL	_analogService_conv_1_98
0010d4   6f2d     movwf   0x2d, 0x1        	MOVWF	_analogService_conv_1_98, B
                                           _00182_DS_:
0010d6   010a     movlb   0xa              	BANKSEL	_analogService_chan_1_98
                                           ;	.line	162; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	return chan;
0010d8   512c     movf    0x2c, 0, 0x1     	MOVF	_analogService_chan_1_98, W, B
                                           _00183_DS_:
0010da   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
0010dc   f00a
0010de   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
0010e0   f009
0010e2   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
0010e4   f008
0010e6   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
0010e8   f007
0010ea   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0010ec   f006
0010ee   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0010f0   f005
0010f2   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0010f4   f004
0010f6   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0010f8   f003
0010fa   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0010fc   f002
0010fe   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
001100   f001
001102   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
001104   f000
001106   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogDeselect	code
                                           _analogDeselect:
                                           ;	.line	98; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogDeselect(unsigned char chan)
003978   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00397a   ffe5
00397c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00397e   ffd9
003980   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003982   ffe5
003984   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003986   ffe5
003988   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00398a   ffe5
00398c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00398e   ffe5
003990   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003992   ffe5
003994   0e02     movlw   0x2              	MOVLW	0x02
003996   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003998   f000
                                           ;	.line	100; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitclr(Selected[chan>>3],chan&7);
00399a   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
00399c   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
00399e   0b1f     andlw   0x1f             	ANDLW	0x1f
0039a0   6e01     movwf   0x1, 0           	MOVWF	r0x01
0039a2   6a02     clrf    0x2, 0           	CLRF	r0x02
0039a4   0e5a     movlw   0x5a             	MOVLW	LOW(_Selected)
0039a6   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
0039a8   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
0039aa   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0039ac   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0039ae   ffe9
0039b0   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0039b2   ffea
0039b4   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0039b6   f003
0039b8   0e07     movlw   0x7              	MOVLW	0x07
0039ba   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
0039bc   0e01     movlw   0x1              	MOVLW	0x01
0039be   6e04     movwf   0x4, 0           	MOVWF	r0x04
0039c0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0039c2   e005     bz      0x39ce           	BZ	_00159_DS_
0039c4   6ce8     negf    0xe8, 0          	NEGF	WREG
0039c6   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00160_DS_:
0039c8   3604     rlcf    0x4, 0x1, 0      	RLCF	r0x04, F
0039ca   0f01     addlw   0x1              	ADDLW	0x01
0039cc   e3fd     bnc     0x39c8           	BNC	_00160_DS_
                                           _00159_DS_:
0039ce   1c04     comf    0x4, 0, 0        	COMF	r0x04, W
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0039d0   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
0039d2   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0039d4   ffe9
0039d6   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0039d8   ffea
0039da   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
0039dc   ffef
0039de   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0039e0   f004
0039e2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0039e4   f003
0039e6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0039e8   f002
0039ea   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0039ec   f001
0039ee   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0039f0   f000
0039f2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0039f4   ffd9
0039f6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogSelectAdcTouch	code
                                           _analogSelectAdcTouch:
                                           ;	.line	91; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogSelectAdcTouch(unsigned char chan,unsigned char hwchan, unsigned char *port, unsigned char bit)
002674   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002676   ffe5
002678   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00267a   ffd9
00267c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00267e   ffe5
002680   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002682   ffe5
002684   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002686   ffe5
002688   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00268a   ffe5
00268c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00268e   ffe5
002690   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002692   ffe5
002694   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002696   ffe5
002698   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00269a   ffe5
00269c   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
00269e   ffe5
0026a0   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
0026a2   ffe5
0026a4   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
0026a6   ffe5
0026a8   0e02     movlw   0x2              	MOVLW	0x02
0026aa   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0026ac   f000
0026ae   0e03     movlw   0x3              	MOVLW	0x03
0026b0   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0026b2   f001
0026b4   0e04     movlw   0x4              	MOVLW	0x04
0026b6   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0026b8   f002
0026ba   0e05     movlw   0x5              	MOVLW	0x05
0026bc   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
0026be   f003
0026c0   0e06     movlw   0x6              	MOVLW	0x06
0026c2   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
0026c4   f004
0026c6   0e07     movlw   0x7              	MOVLW	0x07
0026c8   cfdb     movff   0xfdb, 0x5       	MOVFF	PLUSW2, r0x05
0026ca   f005
                                           ;	.line	93; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitset(Selected[chan>>3],chan&7);
0026cc   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
0026ce   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
0026d0   0b1f     andlw   0x1f             	ANDLW	0x1f
0026d2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0026d4   6a07     clrf    0x7, 0           	CLRF	r0x07
0026d6   0e5a     movlw   0x5a             	MOVLW	LOW(_Selected)
0026d8   2606     addwf   0x6, 0x1, 0      	ADDWF	r0x06, F
0026da   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
0026dc   2207     addwfc  0x7, 0x1, 0      	ADDWFC	r0x07, F
0026de   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
0026e0   ffe9
0026e2   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
0026e4   ffea
0026e6   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
0026e8   f008
0026ea   0e07     movlw   0x7              	MOVLW	0x07
0026ec   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
0026ee   6e09     movwf   0x9, 0           	MOVWF	r0x09
0026f0   0e01     movlw   0x1              	MOVLW	0x01
0026f2   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
0026f4   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0026f6   e005     bz      0x2702           	BZ	_00150_DS_
0026f8   6ce8     negf    0xe8, 0          	NEGF	WREG
0026fa   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00151_DS_:
0026fc   360a     rlcf    0xa, 0x1, 0      	RLCF	r0x0a, F
0026fe   0f01     addlw   0x1              	ADDLW	0x01
002700   e3fd     bnc     0x26fc           	BNC	_00151_DS_
                                           _00150_DS_:
002702   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
002704   1208     iorwf   0x8, 0x1, 0      	IORWF	r0x08, F
002706   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
002708   ffe9
00270a   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
00270c   ffea
00270e   c008     movff   0x8, 0xfef       	MOVFF	r0x08, INDF0
002710   ffef
                                           ;	.line	94; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	HWChan[chan]=hwchan;
002712   0e23     movlw   0x23             	MOVLW	LOW(_HWChan)
002714   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002716   6e06     movwf   0x6, 0           	MOVWF	r0x06
002718   6a07     clrf    0x7, 0           	CLRF	r0x07
00271a   0e0f     movlw   0xf              	MOVLW	HIGH(_HWChan)
00271c   2207     addwfc  0x7, 0x1, 0      	ADDWFC	r0x07, F
00271e   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
002720   ffe9
002722   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
002724   ffea
002726   c001     movff   0x1, 0xfef       	MOVFF	r0x01, INDF0
002728   ffef
                                           ;	.line	95; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Pins[chan]=(((unsigned int)(port-&PORTA)&7)<<4) + (bit&7);
00272a   6a01     clrf    0x1, 0           	CLRF	r0x01
00272c   0e23     movlw   0x23             	MOVLW	LOW(_Pins)
00272e   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002730   0e04     movlw   0x4              	MOVLW	HIGH(_Pins)
002732   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002734   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
002736   5e02     subwf   0x2, 0x1, 0      	SUBWF	r0x02, F
002738   0e07     movlw   0x7              	MOVLW	0x07
00273a   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
00273c   3802     swapf   0x2, 0, 0        	SWAPF	r0x02, W
00273e   0bf0     andlw   0xf0             	ANDLW	0xf0
002740   6e03     movwf   0x3, 0           	MOVWF	r0x03
002742   0e07     movlw   0x7              	MOVLW	0x07
002744   1605     andwf   0x5, 0x1, 0      	ANDWF	r0x05, F
002746   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002748   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
00274a   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00274c   ffe9
00274e   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
002750   ffea
002752   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
002754   ffef
002756   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
002758   f00a
00275a   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
00275c   f009
00275e   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
002760   f008
002762   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
002764   f007
002766   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002768   f006
00276a   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00276c   f005
00276e   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002770   f004
002772   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002774   f003
002776   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002778   f002
00277a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00277c   f001
00277e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002780   f000
002782   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002784   ffd9
002786   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogSelectAdc	code
                                           _analogSelectAdc:
                                           ;	.line	84; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogSelectAdc(unsigned char chan,unsigned char hwchan )
00301e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003020   ffe5
003022   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003024   ffd9
003026   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003028   ffe5
00302a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00302c   ffe5
00302e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003030   ffe5
003032   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003034   ffe5
003036   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003038   ffe5
00303a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00303c   ffe5
00303e   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003040   ffe5
003042   0e02     movlw   0x2              	MOVLW	0x02
003044   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003046   f000
003048   0e03     movlw   0x3              	MOVLW	0x03
00304a   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00304c   f001
                                           ;	.line	86; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	bitset(Selected[chan>>3],chan&7);
00304e   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
003050   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
003052   0b1f     andlw   0x1f             	ANDLW	0x1f
003054   6e02     movwf   0x2, 0           	MOVWF	r0x02
003056   6a03     clrf    0x3, 0           	CLRF	r0x03
003058   0e5a     movlw   0x5a             	MOVLW	LOW(_Selected)
00305a   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
00305c   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
00305e   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
003060   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
003062   ffe9
003064   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
003066   ffea
003068   cfef     movff   0xfef, 0x4       	MOVFF	INDF0, r0x04
00306a   f004
00306c   0e07     movlw   0x7              	MOVLW	0x07
00306e   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
003070   6e05     movwf   0x5, 0           	MOVWF	r0x05
003072   0e01     movlw   0x1              	MOVLW	0x01
003074   6e06     movwf   0x6, 0           	MOVWF	r0x06
003076   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003078   e005     bz      0x3084           	BZ	_00141_DS_
00307a   6ce8     negf    0xe8, 0          	NEGF	WREG
00307c   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00142_DS_:
00307e   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
003080   0f01     addlw   0x1              	ADDLW	0x01
003082   e3fd     bnc     0x307e           	BNC	_00142_DS_
                                           _00141_DS_:
003084   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003086   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
003088   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
00308a   ffe9
00308c   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
00308e   ffea
003090   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
003092   ffef
                                           ;	.line	87; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	HWChan[chan]=hwchan;
003094   0e23     movlw   0x23             	MOVLW	LOW(_HWChan)
003096   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003098   6e02     movwf   0x2, 0           	MOVWF	r0x02
00309a   6a03     clrf    0x3, 0           	CLRF	r0x03
00309c   0e0f     movlw   0xf              	MOVLW	HIGH(_HWChan)
00309e   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0030a0   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
0030a2   ffe9
0030a4   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0030a6   ffea
0030a8   c001     movff   0x1, 0xfef       	MOVFF	r0x01, INDF0
0030aa   ffef
                                           ;	.line	88; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Pins[chan]=255;
0030ac   6a01     clrf    0x1, 0           	CLRF	r0x01
0030ae   0e23     movlw   0x23             	MOVLW	LOW(_Pins)
0030b0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0030b2   0e04     movlw   0x4              	MOVLW	HIGH(_Pins)
0030b4   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0030b6   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0030b8   ffe9
0030ba   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0030bc   ffea
0030be   0eff     movlw   0xff             	MOVLW	0xff
0030c0   68ef     setf    0xef, 0          	SETF	INDF0
0030c2   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0030c4   f006
0030c6   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0030c8   f005
0030ca   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0030cc   f004
0030ce   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0030d0   f003
0030d2   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0030d4   f002
0030d6   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0030d8   f001
0030da   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0030dc   f000
0030de   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0030e0   ffd9
0030e2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogInitTouch	code
                                           _analogInitTouch:
0044b4   010f     movlb   0xf              	BANKSEL	_CTMUCONH
                                           ;	.line	78; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONH = 0x00;
0044b6   6b45     clrf    0x45, 0x1        	CLRF	_CTMUCONH, B
                                           ;	.line	79; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONL = 0x90;
0044b8   0e90     movlw   0x90             	MOVLW	0x90
0044ba   010f     movlb   0xf              	BANKSEL	_CTMUCONL
0044bc   6f44     movwf   0x44, 0x1        	MOVWF	_CTMUCONL, B
                                           ;	.line	80; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUICON = 0x03;			//55uA
0044be   0e03     movlw   0x3              	MOVLW	0x03
0044c0   010f     movlb   0xf              	BANKSEL	_CTMUICON
0044c2   6f43     movwf   0x43, 0x1        	MOVWF	_CTMUICON, B
0044c4   010f     movlb   0xf              	BANKSEL	_CTMUCONHbits
                                           ;	.line	81; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	CTMUCONHbits.CTMUEN = 1;	//Enable CTMU
0044c6   8f45     bsf     0x45, 0x7, 0x1   	BSF	_CTMUCONHbits, 7, B
0044c8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analog__analogInit	code
                                           _analogInit:
                                           ;	.line	52; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	void analogInit()
002ab2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002ab4   ffe5
002ab6   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002ab8   ffe5
002aba   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002abc   ffe5
002abe   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002ac0   ffe5
002ac2   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002ac4   ffe5
                                           ;	.line	56; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<CHANNELS_GROUPS;i++) {
002ac6   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00107_DS_:
                                           ;	.line	57; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Selected[i]=0;
002ac8   0e5a     movlw   0x5a             	MOVLW	LOW(_Selected)
002aca   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002acc   6e01     movwf   0x1, 0           	MOVWF	r0x01
002ace   6a02     clrf    0x2, 0           	CLRF	r0x02
002ad0   0e0a     movlw   0xa              	MOVLW	HIGH(_Selected)
002ad2   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002ad4   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002ad6   ffe9
002ad8   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002ada   ffea
002adc   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	56; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<CHANNELS_GROUPS;i++) {
002ade   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002ae0   0e02     movlw   0x2              	MOVLW	0x02
002ae2   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002ae4   e3f1     bnc     0x2ac8           	BNC	_00107_DS_
                                           ;	.line	60; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<ANALOG_MAX_CHANNELS;i++) {
002ae6   6a00     clrf    0, 0             	CLRF	r0x00
                                           ; ;multiply lit val:0x02 by variable r0x00 and store in r0x01
                                           _00109_DS_:
                                           ;	.line	61; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Value[i]=0;
002ae8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002aea   0d02     mullw   0x2              	MULLW	0x02
002aec   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
002aee   6e02     movwf   0x2, 0           	MOVWF	r0x02
002af0   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
002af2   f001
002af4   0ee0     movlw   0xe0             	MOVLW	LOW(_Value)
002af6   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002af8   6e03     movwf   0x3, 0           	MOVWF	r0x03
002afa   0e00     movlw   0                	MOVLW	HIGH(_Value)
002afc   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
002afe   6e04     movwf   0x4, 0           	MOVWF	r0x04
002b00   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
002b02   ffe9
002b04   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
002b06   ffea
002b08   6aee     clrf    0xee, 0          	CLRF	POSTINC0
002b0a   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	62; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	inValue[i]=0;
002b0c   0e39     movlw   0x39             	MOVLW	LOW(_inValue)
002b0e   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002b10   6e03     movwf   0x3, 0           	MOVWF	r0x03
002b12   0e04     movlw   0x4              	MOVLW	HIGH(_inValue)
002b14   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
002b16   6e04     movwf   0x4, 0           	MOVWF	r0x04
002b18   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
002b1a   ffe9
002b1c   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
002b1e   ffea
002b20   6aee     clrf    0xee, 0          	CLRF	POSTINC0
002b22   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	63; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	oldValue[i]=0;
002b24   0e59     movlw   0x59             	MOVLW	LOW(_oldValue)
002b26   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002b28   6e03     movwf   0x3, 0           	MOVWF	r0x03
002b2a   0e04     movlw   0x4              	MOVLW	HIGH(_oldValue)
002b2c   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
002b2e   6e04     movwf   0x4, 0           	MOVWF	r0x04
002b30   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
002b32   ffe9
002b34   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
002b36   ffea
002b38   6aee     clrf    0xee, 0          	CLRF	POSTINC0
002b3a   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	64; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Min[i]=0;
002b3c   0e93     movlw   0x93             	MOVLW	LOW(_Min)
002b3e   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002b40   6e03     movwf   0x3, 0           	MOVWF	r0x03
002b42   0e04     movlw   0x4              	MOVLW	HIGH(_Min)
002b44   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
002b46   6e04     movwf   0x4, 0           	MOVWF	r0x04
002b48   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
002b4a   ffe9
002b4c   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
002b4e   ffea
002b50   6aee     clrf    0xee, 0          	CLRF	POSTINC0
002b52   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	65; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Max[i]=0x7FFF;
002b54   0eb3     movlw   0xb3             	MOVLW	LOW(_Max)
002b56   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
002b58   0e04     movlw   0x4              	MOVLW	HIGH(_Max)
002b5a   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002b5c   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002b5e   ffe9
002b60   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002b62   ffea
002b64   68ee     setf    0xee, 0          	SETF	POSTINC0
002b66   0e7f     movlw   0x7f             	MOVLW	0x7f
002b68   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           ;	.line	66; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	Pins[i]=255;
002b6a   0e23     movlw   0x23             	MOVLW	LOW(_Pins)
002b6c   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002b6e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002b70   6a02     clrf    0x2, 0           	CLRF	r0x02
002b72   0e04     movlw   0x4              	MOVLW	HIGH(_Pins)
002b74   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002b76   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002b78   ffe9
002b7a   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002b7c   ffea
002b7e   68ef     setf    0xef, 0          	SETF	INDF0
                                           ;	.line	60; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	for(i=0;i<ANALOG_MAX_CHANNELS;i++) {
002b80   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002b82   0e10     movlw   0x10             	MOVLW	0x10
002b84   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002b86   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002b88   d7af     bra     0x2ae8           	BRA	_00109_DS_
                                           ;	.line	69; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON2=0b10101111; //right justified, 12 AD, RC
002b8a   0eaf     movlw   0xaf             	MOVLW	0xaf
002b8c   6ec0     movwf   0xc0, 0          	MOVWF	_ADCON2
                                           ;	.line	70; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON1=0; //0->Vdd
002b8e   6ac1     clrf    0xc1, 0          	CLRF	_ADCON1
                                           ;	.line	71; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON0=1; //on, channel 0
002b90   0e01     movlw   0x1              	MOVLW	0x01
002b92   6ec2     movwf   0xc2, 0          	MOVWF	_ADCON0
                                           ;	.line	73; C:/Users/sarto/Documents/Pd/externals/Fraise/analog/analog.c	ADCON0bits.GO=1; // go !
002b94   82c2     bsf     0xc2, 0x1, 0     	BSF	_ADCON0bits, 1
002b96   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002b98   f004
002b9a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002b9c   f003
002b9e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002ba0   f002
002ba2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002ba4   f001
002ba6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002ba8   f000
002baa   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
002bac   2043     addwfc  0x43, 0, 0       	DB	0x43, 0x20, 0x41, 0x20, 0x25, 0x64, 0x20, 0x25, 0x64, 0x0a, 0x00
002bae   2041     addwfc  0x41, 0, 0       
002bb0   6425     cpfsgt  0x25, 0          
002bb2   2520     addwf   0x20, 0, 0x1     
002bb4   0a64     xorlw   0x64             
002bb6   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 4362 (0x110a) bytes ( 3.33%)
                                           ;           	 2181 (0x0885) words
                                           ; udata size:	  226 (0x00e2) bytes ( 6.14%)
                                           ; access size:	   13 (0x000d) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_switchInit
                                           	global	_switchSelectHW
                                           	global	_switchDeselect
                                           	global	_switchService
                                           	global	_switchSend
                                           	global	_switchGet
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_ANSELAbits
                                           	extern	_ANSELBbits
                                           	extern	_ANSELCbits
                                           	extern	_PMD2bits
                                           	extern	_PMD1bits
                                           	extern	_PMD0bits
                                           	extern	_DACCON1bits
                                           	extern	_VREFCON2bits
                                           	extern	_DACCON0bits
                                           	extern	_VREFCON1bits
                                           	extern	_FVRCONbits
                                           	extern	_VREFCON0bits
                                           	extern	_CTMUICONbits
                                           	extern	_CTMUICONHbits
                                           	extern	_CTMUCON1bits
                                           	extern	_CTMUCONLbits
                                           	extern	_CTMUCON0bits
                                           	extern	_CTMUCONHbits
                                           	extern	_SRCON1bits
                                           	extern	_SRCON0bits
                                           	extern	_CCPTMRS1bits
                                           	extern	_CCPTMRS0bits
                                           	extern	_T6CONbits
                                           	extern	_T5GCONbits
                                           	extern	_T5CONbits
                                           	extern	_T4CONbits
                                           	extern	_CCP5CONbits
                                           	extern	_CCP4CONbits
                                           	extern	_PSTR3CONbits
                                           	extern	_CCP3ASbits
                                           	extern	_ECCP3ASbits
                                           	extern	_PWM3CONbits
                                           	extern	_CCP3CONbits
                                           	extern	_SLRCONbits
                                           	extern	_WPUBbits
                                           	extern	_IOCBbits
                                           	extern	_PSTR2CONbits
                                           	extern	_CCP2ASbits
                                           	extern	_ECCP2ASbits
                                           	extern	_PWM2CONbits
                                           	extern	_CCP2CONbits
                                           	extern	_SSP2CON3bits
                                           	extern	_SSP2MSKbits
                                           	extern	_SSP2CON2bits
                                           	extern	_SSP2CON1bits
                                           	extern	_SSP2STATbits
                                           	extern	_BAUD2CONbits
                                           	extern	_BAUDCON2bits
                                           	extern	_RC2STAbits
                                           	extern	_RCSTA2bits
                                           	extern	_TX2STAbits
                                           	extern	_TXSTA2bits
                                           	extern	_CM12CONbits
                                           	extern	_CM2CON1bits
                                           	extern	_CM2CONbits
                                           	extern	_CM2CON0bits
                                           	extern	_CM1CONbits
                                           	extern	_CM1CON0bits
                                           	extern	_PIE4bits
                                           	extern	_PIR4bits
                                           	extern	_IPR4bits
                                           	extern	_PIE5bits
                                           	extern	_PIR5bits
                                           	extern	_IPR5bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_DDRAbits
                                           	extern	_TRISAbits
                                           	extern	_DDRBbits
                                           	extern	_TRISBbits
                                           	extern	_DDRCbits
                                           	extern	_TRISCbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_HLVDCONbits
                                           	extern	_LVDCONbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_PIE3bits
                                           	extern	_PIR3bits
                                           	extern	_IPR3bits
                                           	extern	_EECON1bits
                                           	extern	_EEADRbits
                                           	extern	_EEADRHbits
                                           	extern	_RC1STAbits
                                           	extern	_RCSTAbits
                                           	extern	_RCSTA1bits
                                           	extern	_TX1STAbits
                                           	extern	_TXSTAbits
                                           	extern	_TXSTA1bits
                                           	extern	_T3CONbits
                                           	extern	_T3GCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCPASbits
                                           	extern	_PWM1CONbits
                                           	extern	_PWMCONbits
                                           	extern	_BAUD1CONbits
                                           	extern	_BAUDCONbits
                                           	extern	_BAUDCON1bits
                                           	extern	_BAUDCTLbits
                                           	extern	_PSTR1CONbits
                                           	extern	_PSTRCONbits
                                           	extern	_T2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSP1CON2bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSP1CON1bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSP1STATbits
                                           	extern	_SSPSTATbits
                                           	extern	_SSP1MSKbits
                                           	extern	_SSPMSKbits
                                           	extern	_SSP1CON3bits
                                           	extern	_SSPCON3bits
                                           	extern	_T1GCONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_OSCCON2bits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_STKPTRbits
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_Now
                                           	extern	_PORTZ
                                           	extern	_PORTZbits
                                           	extern	_LATZ
                                           	extern	_LATZbits
                                           	extern	_TRICZ
                                           	extern	_TRISZbits
                                           	extern	_ANSELZ
                                           	extern	_ANSELZbits
                                           	extern	_ANSELA
                                           	extern	_ANSELB
                                           	extern	_ANSELC
                                           	extern	_PMD2
                                           	extern	_PMD1
                                           	extern	_PMD0
                                           	extern	_DACCON1
                                           	extern	_VREFCON2
                                           	extern	_DACCON0
                                           	extern	_VREFCON1
                                           	extern	_FVRCON
                                           	extern	_VREFCON0
                                           	extern	_CTMUICON
                                           	extern	_CTMUICONH
                                           	extern	_CTMUCON1
                                           	extern	_CTMUCONL
                                           	extern	_CTMUCON0
                                           	extern	_CTMUCONH
                                           	extern	_SRCON1
                                           	extern	_SRCON0
                                           	extern	_CCPTMRS1
                                           	extern	_CCPTMRS0
                                           	extern	_T6CON
                                           	extern	_PR6
                                           	extern	_TMR6
                                           	extern	_T5GCON
                                           	extern	_T5CON
                                           	extern	_TMR5
                                           	extern	_TMR5L
                                           	extern	_TMR5H
                                           	extern	_T4CON
                                           	extern	_PR4
                                           	extern	_TMR4
                                           	extern	_CCP5CON
                                           	extern	_CCPR5
                                           	extern	_CCPR5L
                                           	extern	_CCPR5H
                                           	extern	_CCP4CON
                                           	extern	_CCPR4
                                           	extern	_CCPR4L
                                           	extern	_CCPR4H
                                           	extern	_PSTR3CON
                                           	extern	_CCP3AS
                                           	extern	_ECCP3AS
                                           	extern	_PWM3CON
                                           	extern	_CCP3CON
                                           	extern	_CCPR3
                                           	extern	_CCPR3L
                                           	extern	_CCPR3H
                                           	extern	_SLRCON
                                           	extern	_WPUB
                                           	extern	_IOCB
                                           	extern	_PSTR2CON
                                           	extern	_CCP2AS
                                           	extern	_ECCP2AS
                                           	extern	_PWM2CON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_SSP2CON3
                                           	extern	_SSP2MSK
                                           	extern	_SSP2CON2
                                           	extern	_SSP2CON1
                                           	extern	_SSP2STAT
                                           	extern	_SSP2ADD
                                           	extern	_SSP2BUF
                                           	extern	_BAUD2CON
                                           	extern	_BAUDCON2
                                           	extern	_RC2STA
                                           	extern	_RCSTA2
                                           	extern	_TX2STA
                                           	extern	_TXSTA2
                                           	extern	_TX2REG
                                           	extern	_TXREG2
                                           	extern	_RC2REG
                                           	extern	_RCREG2
                                           	extern	_SP2BRG
                                           	extern	_SPBRG2
                                           	extern	_SP2BRGH
                                           	extern	_SPBRGH2
                                           	extern	_CM12CON
                                           	extern	_CM2CON1
                                           	extern	_CM2CON
                                           	extern	_CM2CON0
                                           	extern	_CM1CON
                                           	extern	_CM1CON0
                                           	extern	_PIE4
                                           	extern	_PIR4
                                           	extern	_IPR4
                                           	extern	_PIE5
                                           	extern	_PIR5
                                           	extern	_IPR5
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_DDRA
                                           	extern	_TRISA
                                           	extern	_DDRB
                                           	extern	_TRISB
                                           	extern	_DDRC
                                           	extern	_TRISC
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_HLVDCON
                                           	extern	_LVDCON
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_PIE3
                                           	extern	_PIR3
                                           	extern	_IPR3
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_EEADRH
                                           	extern	_RC1STA
                                           	extern	_RCSTA
                                           	extern	_RCSTA1
                                           	extern	_TX1STA
                                           	extern	_TXSTA
                                           	extern	_TXSTA1
                                           	extern	_TX1REG
                                           	extern	_TXREG
                                           	extern	_TXREG1
                                           	extern	_RC1REG
                                           	extern	_RCREG
                                           	extern	_RCREG1
                                           	extern	_SP1BRG
                                           	extern	_SPBRG
                                           	extern	_SPBRG1
                                           	extern	_SP1BRGH
                                           	extern	_SPBRGH
                                           	extern	_SPBRGH1
                                           	extern	_T3CON
                                           	extern	_TMR3
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_T3GCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCPAS
                                           	extern	_PWM1CON
                                           	extern	_PWMCON
                                           	extern	_BAUD1CON
                                           	extern	_BAUDCON
                                           	extern	_BAUDCON1
                                           	extern	_BAUDCTL
                                           	extern	_PSTR1CON
                                           	extern	_PSTRCON
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_CCP1CON
                                           	extern	_CCPR1
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRES
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSP1CON2
                                           	extern	_SSPCON2
                                           	extern	_SSP1CON1
                                           	extern	_SSPCON1
                                           	extern	_SSP1STAT
                                           	extern	_SSPSTAT
                                           	extern	_SSP1ADD
                                           	extern	_SSPADD
                                           	extern	_SSP1BUF
                                           	extern	_SSPBUF
                                           	extern	_SSP1MSK
                                           	extern	_SSPMSK
                                           	extern	_SSP1CON3
                                           	extern	_SSPCON3
                                           	extern	_T1GCON
                                           	extern	_T1CON
                                           	extern	_TMR1
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_OSCCON2
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PROD
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTR
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PC
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOS
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_printf
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           
                                           
                                           	idata
                                           _switchSend_chan_1_94	db	0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           
                                           udata_switch_0	udata
                                           _oldStates	res	2
                                           
                                           udata_switch_1	udata
                                           _States	res	2
                                           
                                           udata_switch_2	udata
                                           _Pins	res	16
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_switch__switchGet	code
                                           _switchGet:
                                           ;	.line	108; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	char switchGet(unsigned char chan)
003502   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003504   ffe5
003506   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003508   ffd9
00350a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00350c   ffe5
00350e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003510   ffe5
003512   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003514   ffe5
003516   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003518   ffe5
00351a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00351c   ffe5
00351e   0e02     movlw   0x2              	MOVLW	0x02
003520   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003522   f000
                                           ;	.line	110; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	return CHANISSET(chan);
003524   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
003526   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
003528   0b1f     andlw   0x1f             	ANDLW	0x1f
00352a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00352c   6a02     clrf    0x2, 0           	CLRF	r0x02
00352e   0e5e     movlw   0x5e             	MOVLW	LOW(_States)
003530   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
003532   0e0a     movlw   0xa              	MOVLW	HIGH(_States)
003534   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003536   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003538   ffe9
00353a   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00353c   ffea
00353e   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
003540   f001
003542   0e07     movlw   0x7              	MOVLW	0x07
003544   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
003546   0e01     movlw   0x1              	MOVLW	0x01
003548   6e02     movwf   0x2, 0           	MOVWF	r0x02
00354a   0e00     movlw   0                	MOVLW	0x00
00354c   6e03     movwf   0x3, 0           	MOVWF	r0x03
00354e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003550   e006     bz      0x355e           	BZ	_00237_DS_
003552   6ce8     negf    0xe8, 0          	NEGF	WREG
003554   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00238_DS_:
003556   3602     rlcf    0x2, 0x1, 0      	RLCF	r0x02, F
003558   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
00355a   0f01     addlw   0x1              	ADDLW	0x01
00355c   e3fc     bnc     0x3556           	BNC	_00238_DS_
                                           _00237_DS_:
00355e   6a04     clrf    0x4, 0           	CLRF	r0x04
003560   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003562   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
003564   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003566   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
003568   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00356a   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
00356c   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
00356e   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003570   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003572   6a02     clrf    0x2, 0           	CLRF	r0x02
003574   3602     rlcf    0x2, 0x1, 0      	RLCF	r0x02, F
003576   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003578   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
00357a   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
00357c   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00357e   6a02     clrf    0x2, 0           	CLRF	r0x02
003580   3602     rlcf    0x2, 0x1, 0      	RLCF	r0x02, F
003582   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003584   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003586   f004
003588   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00358a   f003
00358c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00358e   f002
003590   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003592   f001
003594   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003596   f000
003598   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00359a   ffd9
00359c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_switch__switchSend	code
                                           _switchSend:
                                           ;	.line	83; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	char switchSend(void)
001aaa   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
001aac   ffe5
001aae   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
001ab0   ffe5
001ab2   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
001ab4   ffe5
001ab6   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
001ab8   ffe5
001aba   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
001abc   ffe5
001abe   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
001ac0   ffe5
001ac2   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
001ac4   ffe5
001ac6   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
001ac8   ffe5
001aca   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
001acc   ffe5
001ace   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
001ad0   ffe5
001ad2   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
001ad4   ffe5
                                           ;	.line	86; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	unsigned char count=0,pin,set;
001ad6   6a00     clrf    0, 0             	CLRF	r0x00
                                           ;	.line	88; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	while(count<4) {
001ad8   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00188_DS_:
001ada   0e04     movlw   0x4              	MOVLW	0x04
001adc   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
001ade   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
001ae0   d0b3     bra     0x1c48           	BRA	_00190_DS_
                                           ;	.line	89; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	pin=Pins[chan];
001ae2   0e3e     movlw   0x3e             	MOVLW	LOW(_Pins)
001ae4   010a     movlb   0xa              	BANKSEL	_switchSend_chan_1_94
001ae6   253c     addwf   0x3c, 0, 0x1     	ADDWF	_switchSend_chan_1_94, W, B
001ae8   6e02     movwf   0x2, 0           	MOVWF	r0x02
001aea   6a03     clrf    0x3, 0           	CLRF	r0x03
001aec   0e0a     movlw   0xa              	MOVLW	HIGH(_Pins)
001aee   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
001af0   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001af2   ffe9
001af4   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001af6   ffea
001af8   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
001afa   f002
                                           ;	.line	90; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	if(pin != 255) {
001afc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
001afe   0aff     xorlw   0xff             	XORLW	0xff
001b00   e101     bnz     0x1b04           	BNZ	_00213_DS_
001b02   d09b     bra     0x1c3a           	BRA	_00185_DS_
                                           _00213_DS_:
001b04   010a     movlb   0xa              	BANKSEL	_switchSend_chan_1_94
                                           ;	.line	91; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	set=CHANISSET(chan);
001b06   393c     swapf   0x3c, 0, 0x1     	SWAPF	_switchSend_chan_1_94, W, B
001b08   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
001b0a   0b1f     andlw   0x1f             	ANDLW	0x1f
001b0c   6e02     movwf   0x2, 0           	MOVWF	r0x02
001b0e   0e5e     movlw   0x5e             	MOVLW	LOW(_States)
001b10   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
001b12   6e03     movwf   0x3, 0           	MOVWF	r0x03
001b14   6a04     clrf    0x4, 0           	CLRF	r0x04
001b16   0e0a     movlw   0xa              	MOVLW	HIGH(_States)
001b18   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
001b1a   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
001b1c   ffe9
001b1e   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
001b20   ffea
001b22   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
001b24   f003
001b26   0e07     movlw   0x7              	MOVLW	0x07
                                           ; removed redundant BANKSEL
001b28   153c     andwf   0x3c, 0, 0x1     	ANDWF	_switchSend_chan_1_94, W, B
001b2a   6e04     movwf   0x4, 0           	MOVWF	r0x04
001b2c   0e01     movlw   0x1              	MOVLW	0x01
001b2e   6e05     movwf   0x5, 0           	MOVWF	r0x05
001b30   0e00     movlw   0                	MOVLW	0x00
001b32   6e06     movwf   0x6, 0           	MOVWF	r0x06
001b34   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001b36   e006     bz      0x1b44           	BZ	_00215_DS_
001b38   6ce8     negf    0xe8, 0          	NEGF	WREG
001b3a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00216_DS_:
001b3c   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
001b3e   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
001b40   0f01     addlw   0x1              	ADDLW	0x01
001b42   e3fc     bnc     0x1b3c           	BNC	_00216_DS_
                                           _00215_DS_:
001b44   6a07     clrf    0x7, 0           	CLRF	r0x07
001b46   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001b48   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
001b4a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
001b4c   1607     andwf   0x7, 0x1, 0      	ANDWF	r0x07, F
001b4e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001b50   1007     iorwf   0x7, 0, 0        	IORWF	r0x07, W
001b52   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
001b54   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
001b56   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
001b58   6a03     clrf    0x3, 0           	CLRF	r0x03
001b5a   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
001b5c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001b5e   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
001b60   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
001b62   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
001b64   6a03     clrf    0x3, 0           	CLRF	r0x03
001b66   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
                                           ;	.line	92; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	if(set!=OLDCHANISSET(chan)) {
001b68   6a07     clrf    0x7, 0           	CLRF	r0x07
001b6a   0e5c     movlw   0x5c             	MOVLW	LOW(_oldStates)
001b6c   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
001b6e   0e0a     movlw   0xa              	MOVLW	HIGH(_oldStates)
001b70   2207     addwfc  0x7, 0x1, 0      	ADDWFC	r0x07, F
001b72   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001b74   ffe9
001b76   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
001b78   ffea
001b7a   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
001b7c   f008
001b7e   c008     movff   0x8, 0x9         	MOVFF	r0x08, r0x09
001b80   f009
001b82   6a0a     clrf    0xa, 0           	CLRF	r0x0a
001b84   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
001b86   1605     andwf   0x5, 0x1, 0      	ANDWF	r0x05, F
001b88   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
001b8a   1606     andwf   0x6, 0x1, 0      	ANDWF	r0x06, F
001b8c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001b8e   1006     iorwf   0x6, 0, 0        	IORWF	r0x06, W
001b90   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
001b92   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
001b94   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
001b96   6a05     clrf    0x5, 0           	CLRF	r0x05
001b98   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
001b9a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001b9c   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
001b9e   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
001ba0   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
001ba2   6a05     clrf    0x5, 0           	CLRF	r0x05
001ba4   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
001ba6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001ba8   1805     xorwf   0x5, 0, 0        	XORWF	r0x05, W
001baa   e101     bnz     0x1bae           	BNZ	_00220_DS_
001bac   d046     bra     0x1c3a           	BRA	_00185_DS_
                                           _00220_DS_:
                                           ;	.line	93; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	if(set) OLDCHANSET(chan);
001bae   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001bb0   e012     bz      0x1bd6           	BZ	_00180_DS_
001bb2   0e01     movlw   0x1              	MOVLW	0x01
001bb4   6e05     movwf   0x5, 0           	MOVWF	r0x05
001bb6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001bb8   e005     bz      0x1bc4           	BZ	_00221_DS_
001bba   6ce8     negf    0xe8, 0          	NEGF	WREG
001bbc   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00222_DS_:
001bbe   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
001bc0   0f01     addlw   0x1              	ADDLW	0x01
001bc2   e3fd     bnc     0x1bbe           	BNC	_00222_DS_
                                           _00221_DS_:
001bc4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
001bc6   1208     iorwf   0x8, 0x1, 0      	IORWF	r0x08, F
001bc8   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001bca   ffe9
001bcc   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
001bce   ffea
001bd0   c008     movff   0x8, 0xfef       	MOVFF	r0x08, INDF0
001bd2   ffef
001bd4   d017     bra     0x1c04           	BRA	_00181_DS_
                                           _00180_DS_:
                                           ;	.line	94; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	else OLDCHANCLR(chan);
001bd6   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001bd8   ffe9
001bda   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
001bdc   ffea
001bde   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
001be0   f005
001be2   0e01     movlw   0x1              	MOVLW	0x01
001be4   6e06     movwf   0x6, 0           	MOVWF	r0x06
001be6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001be8   e005     bz      0x1bf4           	BZ	_00224_DS_
001bea   6ce8     negf    0xe8, 0          	NEGF	WREG
001bec   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00225_DS_:
001bee   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
001bf0   0f01     addlw   0x1              	ADDLW	0x01
001bf2   e3fd     bnc     0x1bee           	BNC	_00225_DS_
                                           _00224_DS_:
001bf4   1c06     comf    0x6, 0, 0        	COMF	r0x06, W
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
001bf6   1605     andwf   0x5, 0x1, 0      	ANDWF	r0x05, F
001bf8   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001bfa   ffe9
001bfc   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
001bfe   ffea
001c00   c005     movff   0x5, 0xfef       	MOVFF	r0x05, INDF0
001c02   ffef
                                           _00181_DS_:
                                           ;	.line	95; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	printf("C s %d %d\n",chan,set==0);
001c04   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001c06   e103     bnz     0x1c0e           	BNZ	_00227_DS_
001c08   6a03     clrf    0x3, 0           	CLRF	r0x03
001c0a   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
001c0c   d001     bra     0x1c10           	BRA	_00228_DS_
                                           _00227_DS_:
001c0e   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _00228_DS_:
001c10   ca3c     movff   0xa3c, 0x4       	MOVFF	_switchSend_chan_1_94, r0x04
001c12   f004
001c14   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
001c16   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
001c18   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c1a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
001c1c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
001c1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c20   0e00     movlw   0                	MOVLW	UPPER(___str_0)
001c22   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c24   0e37     movlw   0x37             	MOVLW	HIGH(___str_0)
001c26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c28   0ede     movlw   0xde             	MOVLW	LOW(___str_0)
001c2a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
001c2c   ecfc     call    0x39f8, 0        	CALL	_printf
001c2e   f01c
001c30   0e07     movlw   0x7              	MOVLW	0x07
001c32   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	96; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	count++;
001c34   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
001c36   c001     movff   0x1, 0           	MOVFF	r0x01, r0x00
001c38   f000
                                           _00185_DS_:
001c3a   010a     movlb   0xa              	BANKSEL	_switchSend_chan_1_94
                                           ;	.line	99; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	chan++;
001c3c   2b3c     incf    0x3c, 0x1, 0x1   	INCF	_switchSend_chan_1_94, F, B
                                           ;	.line	100; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	if(chan>=MAX_CHANNELS) {
001c3e   0e10     movlw   0x10             	MOVLW	0x10
                                           ; removed redundant BANKSEL
001c40   5d3c     subwf   0x3c, 0, 0x1     	SUBWF	_switchSend_chan_1_94, W, B
001c42   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
001c44   d74a     bra     0x1ada           	BRA	_00188_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	101; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	chan=0;
001c46   6b3c     clrf    0x3c, 0x1        	CLRF	_switchSend_chan_1_94, B
                                           _00190_DS_:
                                           ;	.line	105; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	return count;
001c48   5000     movf    0, 0, 0          	MOVF	r0x00, W
001c4a   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
001c4c   f00a
001c4e   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
001c50   f009
001c52   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
001c54   f008
001c56   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
001c58   f007
001c5a   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
001c5c   f006
001c5e   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
001c60   f005
001c62   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
001c64   f004
001c66   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
001c68   f003
001c6a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
001c6c   f002
001c6e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
001c70   f001
001c72   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
001c74   f000
001c76   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_switch__switchService	code
                                           _switchService:
                                           ;	.line	70; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	void switchService(void)
001f94   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
001f96   ffe5
001f98   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
001f9a   ffe5
001f9c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
001f9e   ffe5
001fa0   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
001fa2   ffe5
001fa4   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
001fa6   ffe5
001fa8   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
001faa   ffe5
                                           ;	.line	74; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	for(i=0;i<MAX_CHANNELS;i++) {
001fac   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00146_DS_:
                                           ;	.line	75; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	pin=Pins[i];
001fae   0e3e     movlw   0x3e             	MOVLW	LOW(_Pins)
001fb0   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
001fb2   6e01     movwf   0x1, 0           	MOVWF	r0x01
001fb4   6a02     clrf    0x2, 0           	CLRF	r0x02
001fb6   0e0a     movlw   0xa              	MOVLW	HIGH(_Pins)
001fb8   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
001fba   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
001fbc   ffe9
001fbe   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
001fc0   ffea
001fc2   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
001fc4   f001
                                           ;	.line	76; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	if(pin != 255) {
001fc6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001fc8   0aff     xorlw   0xff             	XORLW	0xff
001fca   e101     bnz     0x1fce           	BNZ	_00161_DS_
001fcc   d071     bra     0x20b0           	BRA	_00147_DS_
                                           _00161_DS_:
                                           ;	.line	77; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	if(bittst(*(&PORTA+(pin>>4)),pin&7)) CHANSET(i);
001fce   3801     swapf   0x1, 0, 0        	SWAPF	r0x01, W
001fd0   0b0f     andlw   0xf              	ANDLW	0x0f
001fd2   6e02     movwf   0x2, 0           	MOVWF	r0x02
001fd4   6a03     clrf    0x3, 0           	CLRF	r0x03
001fd6   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
001fd8   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
001fda   0e0f     movlw   0xf              	MOVLW	HIGH(_PORTA)
001fdc   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
001fde   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
001fe0   ffe9
001fe2   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
001fe4   ffea
001fe6   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
001fe8   f002
001fea   0e07     movlw   0x7              	MOVLW	0x07
001fec   1601     andwf   0x1, 0x1, 0      	ANDWF	r0x01, F
001fee   0e01     movlw   0x1              	MOVLW	0x01
001ff0   6e03     movwf   0x3, 0           	MOVWF	r0x03
001ff2   0e00     movlw   0                	MOVLW	0x00
001ff4   6e04     movwf   0x4, 0           	MOVWF	r0x04
001ff6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
001ff8   e006     bz      0x2006           	BZ	_00163_DS_
001ffa   6ce8     negf    0xe8, 0          	NEGF	WREG
001ffc   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00164_DS_:
001ffe   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
002000   3604     rlcf    0x4, 0x1, 0      	RLCF	r0x04, F
002002   0f01     addlw   0x1              	ADDLW	0x01
002004   e3fc     bnc     0x1ffe           	BNC	_00164_DS_
                                           _00163_DS_:
002006   6a05     clrf    0x5, 0           	CLRF	r0x05
002008   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00200a   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
00200c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00200e   1604     andwf   0x4, 0x1, 0      	ANDWF	r0x04, F
002010   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002012   1004     iorwf   0x4, 0, 0        	IORWF	r0x04, W
002014   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
002016   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
002018   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00201a   6a03     clrf    0x3, 0           	CLRF	r0x03
00201c   3603     rlcf    0x3, 0x1, 0      	RLCF	r0x03, F
00201e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002020   e124     bnz     0x206a           	BNZ	_00141_DS_
002022   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
002024   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
002026   0b1f     andlw   0x1f             	ANDLW	0x1f
002028   6e01     movwf   0x1, 0           	MOVWF	r0x01
00202a   6a02     clrf    0x2, 0           	CLRF	r0x02
00202c   0e5e     movlw   0x5e             	MOVLW	LOW(_States)
00202e   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
002030   0e0a     movlw   0xa              	MOVLW	HIGH(_States)
002032   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002034   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002036   ffe9
002038   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00203a   ffea
00203c   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
00203e   f003
002040   0e07     movlw   0x7              	MOVLW	0x07
002042   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
002044   6e04     movwf   0x4, 0           	MOVWF	r0x04
002046   0e01     movlw   0x1              	MOVLW	0x01
002048   6e05     movwf   0x5, 0           	MOVWF	r0x05
00204a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00204c   e005     bz      0x2058           	BZ	_00167_DS_
00204e   6ce8     negf    0xe8, 0          	NEGF	WREG
002050   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00168_DS_:
002052   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
002054   0f01     addlw   0x1              	ADDLW	0x01
002056   e3fd     bnc     0x2052           	BNC	_00168_DS_
                                           _00167_DS_:
002058   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00205a   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
00205c   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00205e   ffe9
002060   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002062   ffea
002064   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
002066   ffef
002068   d023     bra     0x20b0           	BRA	_00147_DS_
                                           _00141_DS_:
                                           ;	.line	78; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	else CHANCLR(i);
00206a   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
00206c   44e8     rlncf   0xe8, 0, 0       	RLNCF	WREG, W
00206e   0b1f     andlw   0x1f             	ANDLW	0x1f
002070   6e01     movwf   0x1, 0           	MOVWF	r0x01
002072   6a02     clrf    0x2, 0           	CLRF	r0x02
002074   0e5e     movlw   0x5e             	MOVLW	LOW(_States)
002076   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
002078   0e0a     movlw   0xa              	MOVLW	HIGH(_States)
00207a   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00207c   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00207e   ffe9
002080   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002082   ffea
002084   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
002086   f003
002088   0e07     movlw   0x7              	MOVLW	0x07
00208a   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
00208c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00208e   0e01     movlw   0x1              	MOVLW	0x01
002090   6e05     movwf   0x5, 0           	MOVWF	r0x05
002092   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002094   e005     bz      0x20a0           	BZ	_00171_DS_
002096   6ce8     negf    0xe8, 0          	NEGF	WREG
002098   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _00172_DS_:
00209a   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
00209c   0f01     addlw   0x1              	ADDLW	0x01
00209e   e3fd     bnc     0x209a           	BNC	_00172_DS_
                                           _00171_DS_:
0020a0   1c05     comf    0x5, 0, 0        	COMF	r0x05, W
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0020a2   1603     andwf   0x3, 0x1, 0      	ANDWF	r0x03, F
0020a4   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0020a6   ffe9
0020a8   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0020aa   ffea
0020ac   c003     movff   0x3, 0xfef       	MOVFF	r0x03, INDF0
0020ae   ffef
                                           _00147_DS_:
                                           ;	.line	74; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	for(i=0;i<MAX_CHANNELS;i++) {
0020b0   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0020b2   0e10     movlw   0x10             	MOVLW	0x10
0020b4   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0020b6   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
0020b8   d77a     bra     0x1fae           	BRA	_00146_DS_
0020ba   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0020bc   f005
0020be   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0020c0   f004
0020c2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0020c4   f003
0020c6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0020c8   f002
0020ca   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0020cc   f001
0020ce   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0020d0   f000
0020d2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_switch__switchDeselect	code
                                           _switchDeselect:
                                           ;	.line	65; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	void switchDeselect(unsigned char channel)
0040de   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0040e0   ffe5
0040e2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0040e4   ffd9
0040e6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0040e8   ffe5
0040ea   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0040ec   ffe5
0040ee   0e02     movlw   0x2              	MOVLW	0x02
0040f0   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0040f2   f000
                                           ;	.line	67; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	Pins[channel] = 255;
0040f4   6a01     clrf    0x1, 0           	CLRF	r0x01
0040f6   0e3e     movlw   0x3e             	MOVLW	LOW(_Pins)
0040f8   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0040fa   0e0a     movlw   0xa              	MOVLW	HIGH(_Pins)
0040fc   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0040fe   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004100   ffe9
004102   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
004104   ffea
004106   0eff     movlw   0xff             	MOVLW	0xff
004108   68ef     setf    0xef, 0          	SETF	INDF0
00410a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00410c   f001
00410e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004110   f000
004112   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004114   ffd9
004116   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_switch__switchSelectHW	code
                                           _switchSelectHW:
                                           ;	.line	60; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	void switchSelectHW(unsigned char channel, unsigned char *port, unsigned char bit)
0037ea   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0037ec   ffe5
0037ee   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0037f0   ffd9
0037f2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0037f4   ffe5
0037f6   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0037f8   ffe5
0037fa   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0037fc   ffe5
0037fe   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003800   ffe5
003802   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003804   ffe5
003806   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003808   ffe5
00380a   0e02     movlw   0x2              	MOVLW	0x02
00380c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00380e   f000
003810   0e03     movlw   0x3              	MOVLW	0x03
003812   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003814   f001
003816   0e04     movlw   0x4              	MOVLW	0x04
003818   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
00381a   f002
00381c   0e05     movlw   0x5              	MOVLW	0x05
00381e   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
003820   f003
003822   0e06     movlw   0x6              	MOVLW	0x06
003824   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
003826   f004
                                           ;	.line	62; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	Pins[channel] = (((unsigned int)(port-&PORTA)&7)<<4) + (bit&7);
003828   6a05     clrf    0x5, 0           	CLRF	r0x05
00382a   0e3e     movlw   0x3e             	MOVLW	LOW(_Pins)
00382c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00382e   0e0a     movlw   0xa              	MOVLW	HIGH(_Pins)
003830   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
003832   0e80     movlw   0x80             	MOVLW	LOW(_PORTA)
003834   5e01     subwf   0x1, 0x1, 0      	SUBWF	r0x01, F
003836   0e07     movlw   0x7              	MOVLW	0x07
003838   1601     andwf   0x1, 0x1, 0      	ANDWF	r0x01, F
00383a   3801     swapf   0x1, 0, 0        	SWAPF	r0x01, W
00383c   0bf0     andlw   0xf0             	ANDLW	0xf0
00383e   6e02     movwf   0x2, 0           	MOVWF	r0x02
003840   0e07     movlw   0x7              	MOVLW	0x07
003842   1604     andwf   0x4, 0x1, 0      	ANDWF	r0x04, F
003844   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003846   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
003848   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00384a   ffe9
00384c   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
00384e   ffea
003850   c002     movff   0x2, 0xfef       	MOVFF	r0x02, INDF0
003852   ffef
003854   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003856   f005
003858   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00385a   f004
00385c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00385e   f003
003860   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003862   f002
003864   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003866   f001
003868   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00386a   f000
00386c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00386e   ffd9
003870   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_switch__switchInit	code
                                           _switchInit:
                                           ;	.line	47; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	void switchInit()
00375c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00375e   ffe5
003760   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003762   ffe5
003764   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003766   ffe5
003768   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00376a   ffe5
00376c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00376e   ffe5
                                           ;	.line	51; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	for(i=0;i<CHANNELS_GROUPS;i++) {
003770   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00107_DS_:
                                           ;	.line	52; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	oldStates[i] = States[i] = 1;
003772   0e5c     movlw   0x5c             	MOVLW	LOW(_oldStates)
003774   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003776   6e01     movwf   0x1, 0           	MOVWF	r0x01
003778   6a02     clrf    0x2, 0           	CLRF	r0x02
00377a   0e0a     movlw   0xa              	MOVLW	HIGH(_oldStates)
00377c   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00377e   0e5e     movlw   0x5e             	MOVLW	LOW(_States)
003780   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003782   6e03     movwf   0x3, 0           	MOVWF	r0x03
003784   6a04     clrf    0x4, 0           	CLRF	r0x04
003786   0e0a     movlw   0xa              	MOVLW	HIGH(_States)
003788   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00378a   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00378c   ffe9
00378e   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003790   ffea
003792   0e01     movlw   0x1              	MOVLW	0x01
003794   6eef     movwf   0xef, 0          	MOVWF	INDF0
003796   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003798   ffe9
00379a   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00379c   ffea
00379e   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           ;	.line	51; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	for(i=0;i<CHANNELS_GROUPS;i++) {
0037a0   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0037a2   0e02     movlw   0x2              	MOVLW	0x02
0037a4   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0037a6   e3e5     bnc     0x3772           	BNC	_00107_DS_
                                           ;	.line	55; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	for(i=0;i<MAX_CHANNELS;i++) {
0037a8   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00109_DS_:
                                           ;	.line	56; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	Pins[i] = 255;
0037aa   0e3e     movlw   0x3e             	MOVLW	LOW(_Pins)
0037ac   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0037ae   6e01     movwf   0x1, 0           	MOVWF	r0x01
0037b0   6a02     clrf    0x2, 0           	CLRF	r0x02
0037b2   0e0a     movlw   0xa              	MOVLW	HIGH(_Pins)
0037b4   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0037b6   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0037b8   ffe9
0037ba   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0037bc   ffea
0037be   68ef     setf    0xef, 0          	SETF	INDF0
                                           ;	.line	55; C:/Users/sarto/Documents/Pd/externals/Fraise/switch/switch.c	for(i=0;i<MAX_CHANNELS;i++) {
0037c0   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0037c2   0e10     movlw   0x10             	MOVLW	0x10
0037c4   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0037c6   e3f1     bnc     0x37aa           	BNC	_00109_DS_
0037c8   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0037ca   f004
0037cc   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0037ce   f003
0037d0   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0037d2   f002
0037d4   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0037d6   f001
0037d8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0037da   f000
0037dc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           ___str_0:
0037de   2043     addwfc  0x43, 0, 0       	DB	0x43, 0x20, 0x73, 0x20, 0x25, 0x64, 0x20, 0x25, 0x64, 0x0a, 0x00
0037e0   2073     addwfc  0x73, 0, 0       
0037e2   6425     cpfsgt  0x25, 0          
0037e4   2520     addwf   0x20, 0, 0x1     
0037e6   0a64     xorlw   0x64             
0037e8   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 1264 (0x04f0) bytes ( 0.96%)
                                           ;           	  632 (0x0278) words
                                           ; udata size:	   20 (0x0014) bytes ( 0.54%)
                                           ; access size:	   11 (0x000b) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.5 #9830 (MINGW32)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f26k22
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	___uflags
                                           	global	__entry
                                           	global	__startup
                                           	global	__do_cinit
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_stack
                                           	extern	_stack_end
                                           	extern	_TBLPTRU
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRL
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_TABLAT
                                           	extern	_POSTINC0
                                           	extern	_POSTDEC0
                                           	extern	_main
                                           	extern	_cinit
                                           
                                           
                                           	idata
                                           ___uflags	db	0x00
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_crt0iz_rloc___entry	code	0X000000
                                           __entry:
000000   ef94     goto    0x4328           	goto	__startup 
000002   f021
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_crt0iz_rloc___do_cinit	code
                                           __do_cinit:
                                           	;	TBLPTR = &cinit
00359e   0e24     movlw   0x24             	movlw	low(_cinit)
0035a0   6ef6     movwf   0xf6, 0          	movwf	_TBLPTRL
0035a2   0e45     movlw   0x45             	movlw	high(_cinit)
0035a4   6ef7     movwf   0xf7, 0          	movwf	_TBLPTRH
0035a6   0e00     movlw   0                	movlw	upper(_cinit)
0035a8   6ef8     movwf   0xf8, 0          	movwf	_TBLPTRU
                                           	;	0x05 = cinit.num_init
                                           	;	movlb 0x07
0035aa   0009     tblrd   *+               	tblrd*+
0035ac   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
0035ae   6e05     movwf   0x5, 0           	movwf	0x05
0035b0   0009     tblrd   *+               	tblrd*+
0035b2   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
0035b4   6e06     movwf   0x6, 0           	movwf	0x05 +1
                                           	;	while (0x05) {
                                           test:
0035b6   e104     bnz     0x35c0           	bnz	cont1 ;;done1
0035b8   6705     tstfsz  0x5, 0x1         	tstfsz	0x05, 1
0035ba   d002     bra     0x35c0           	bra	cont1
                                           done1:
0035bc   ef1c     goto    0x3638           	goto	done
0035be   f01b
                                           cont1:
                                           	;	Count down so we only have to look up the data in _cinit once.
                                           	;	At this point we know that TBLPTR points to the top of the current
                                           	;	entry in _cinit, so we can just start reading the from, to, and
                                           	;	size values.
                                           	;	read the source address low
0035c0   0009     tblrd   *+               	tblrd*+
0035c2   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
0035c4   6e00     movwf   0, 0             	movwf	0x00
                                           	;	source address high
0035c6   0009     tblrd   *+               	tblrd*+
0035c8   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
0035ca   6e01     movwf   0x1, 0           	movwf	0x00 + 1
                                           	;	source address upper
0035cc   0009     tblrd   *+               	tblrd*+
0035ce   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
0035d0   6e02     movwf   0x2, 0           	movwf	0x00 + 2
                                           	;	skip a byte since it is stored as a 32bit int
0035d2   0009     tblrd   *+               	tblrd*+
                                           	;	read the destination address directly into FSR0
                                           	;	destination address low
0035d4   0009     tblrd   *+               	tblrd*+
0035d6   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
0035d8   6ee9     movwf   0xe9, 0          	movwf	_FSR0L
                                           	;	destination address high
0035da   0009     tblrd   *+               	tblrd*+
0035dc   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
0035de   6eea     movwf   0xea, 0          	movwf	_FSR0H
                                           	;	skip two bytes since it is stored as a 32bit int
0035e0   0009     tblrd   *+               	tblrd*+
0035e2   0009     tblrd   *+               	tblrd*+
                                           	;	read the size of data to transfer to destination address
0035e4   0009     tblrd   *+               	tblrd*+
0035e6   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
0035e8   6e03     movwf   0x3, 0           	movwf	0x03
0035ea   0009     tblrd   *+               	tblrd*+
0035ec   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
0035ee   6e04     movwf   0x4, 0           	movwf	0x03 +1
                                           	;	skip two bytes since it is stored as a 32bit int
0035f0   0009     tblrd   *+               	tblrd*+
0035f2   0009     tblrd   *+               	tblrd*+
                                           	;	0x00 = 0x07 ->from;
                                           	;	FSR0 = 0x07 ->to;
                                           	;	0x03 = (unsigned short) 0x07 ->size;
                                           	;	the table pointer now points to the next entry. Save it
                                           	;	off since we will be using the table pointer to do the copying
                                           	;	for the entry
                                           	;	0x07 = TBLPTR
0035f4   cff6     movff   0xff6, 0x7       	movff	_TBLPTRL, 0x07
0035f6   f007
0035f8   cff7     movff   0xff7, 0x8       	movff	_TBLPTRH, 0x07 + 1
0035fa   f008
0035fc   cff8     movff   0xff8, 0x9       	movff	_TBLPTRU, 0x07 + 2
0035fe   f009
                                           	;	now assign the source address to the table pointer
                                           	;	TBLPTR = 0x00
003600   c000     movff   0, 0xff6         	movff	0x00, _TBLPTRL
003602   fff6
003604   c001     movff   0x1, 0xff7       	movff	0x00 + 1, _TBLPTRH
003606   fff7
003608   c002     movff   0x2, 0xff8       	movff	0x00 + 2, _TBLPTRU
00360a   fff8
                                           	;	do the copy loop
                                           	;	determine if we have any more bytes to copy
                                           	;	movlb 0x03
00360c   5003     movf    0x3, 0, 0        	movf	0x03, w
                                           copy_loop:
00360e   e102     bnz     0x3614           	bnz	copy_one_byte ; copy_one_byte
003610   5004     movf    0x4, 0, 0        	movf	0x03 + 1, w
003612   e007     bz      0x3622           	bz	done_copying
                                           copy_one_byte:
003614   0009     tblrd   *+               	tblrd*+
003616   50f5     movf    0xf5, 0, 0       	movf	_TABLAT, w
003618   6eee     movwf   0xee, 0          	movwf	_POSTINC0
                                           	;	decrement byte counter
00361a   0603     decf    0x3, 0x1, 0      	decf	0x03, f
00361c   e2f8     bc      0x360e           	bc	copy_loop ; copy_loop
00361e   0604     decf    0x4, 0x1, 0      	decf	0x03 + 1, f
003620   d7f9     bra     0x3614           	bra	copy_one_byte
                                           done_copying:
                                           	;	restore the table pointer for the next entry
                                           	;	TBLPTR = 0x07
003622   c007     movff   0x7, 0xff6       	movff	0x07, _TBLPTRL
003624   fff6
003626   c008     movff   0x8, 0xff7       	movff	0x07 + 1, _TBLPTRH
003628   fff7
00362a   c009     movff   0x9, 0xff8       	movff	0x07 + 2, _TBLPTRU
00362c   fff8
00362e   0605     decf    0x5, 0x1, 0      	decf	0x05, f
003630   e201     bc      0x3634           	bc	do_next
003632   0606     decf    0x6, 0x1, 0      	decf	0x05 + 1, f
                                           do_next:
                                           	;	next entry...
                                           	;	_do_cinit_curr_entry--;
003634   efdb     goto    0x35b6           	goto	test;
003636   f01a
                                           	;	emit done label
                                           done:
003638   0012     return  0                	return
                                           	
                                           ; ; Starting pCode block
                                           S_crt0iz_rloc___startup	code
                                           __startup:
004328   ee18     lfsr    0x1, 0x8ff       	lfsr	1, _stack_end
00432a   f0ff
00432c   ee28     lfsr    0x2, 0x8ff       	lfsr	2, _stack_end
00432e   f0ff
004330   6af8     clrf    0xf8, 0          	clrf	_TBLPTRU, 0
004332   8ea6     bsf     0xa6, 0x7, 0     	bsf	0xa6, 7, 0
004334   9ca6     bcf     0xa6, 0x6, 0     	bcf	0xa6, 6, 0
                                           	
                                           	;	movlw 0xff
                                           	;	movwf _FSR0L, 0
004336   68e9     setf    0xe9, 0          	setf	_FSR0L
004338   0e0e     movlw   0xe              	movlw	0x0e
00433a   6eea     movwf   0xea, 0          	movwf	_FSR0H, 0
                                           	;	movlw 1
                                           	;	movwf 0x00, 0
00433c   6800     setf    0, 0             	setf	0x00
00433e   0e00     movlw   0                	movlw	0x00
                                           clear_loop:
004340   6aed     clrf    0xed, 0          	clrf	_POSTDEC0
004342   5000     movf    0, 0, 0          	movf	0x00, w
004344   e1fd     bnz     0x4340           	bnz	clear_loop
                                           	
                                           ;	.line	107; C:/Users/sarto/Documents/Pd/externals/Fraise/core/crt0iz-rloc.c	_do_cinit();
004346   eccf     call    0x359e, 0        	CALL	__do_cinit
004348   f01a
                                           ;	.line	110; C:/Users/sarto/Documents/Pd/externals/Fraise/core/crt0iz-rloc.c	main();
00434a   ec06     call    0xc, 0           	CALL	_main
00434c   f000
                                           _00110_DS_:
                                           ;	.line	114; C:/Users/sarto/Documents/Pd/externals/Fraise/core/crt0iz-rloc.c	goto loop;
00434e   d7ff     bra     0x434e           	BRA	_00110_DS_
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  276 (0x0114) bytes ( 0.21%)
                                           ;           	  138 (0x008a) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
